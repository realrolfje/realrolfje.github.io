<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on www.rolfje.com</title><link>https://realrolfje.github.io/rolfje.com/tags/programming/</link><description>Recent content in programming on www.rolfje.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © rolfje.com</copyright><lastBuildDate>Mon, 01 Jan 2018 17:27:43 +0000</lastBuildDate><atom:link href="https://realrolfje.github.io/rolfje.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing a Jenkins 1.5 Slave on Windows 2016</title><link>https://realrolfje.github.io/rolfje.com/2018/01/01/fixing-a-jenkins-1-5-slave-on-windows-2016/</link><pubDate>Mon, 01 Jan 2018 17:27:43 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2018/01/01/fixing-a-jenkins-1-5-slave-on-windows-2016/</guid><description>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=FqNjugrRF7s">&lt;img src="jenkins-broken.png" alt="Jenkins is one funny butler.">
&lt;/a>&lt;/p>
&lt;p>When you configure a Jenkins 1.5x slave on a Windows 2016 machine according to &lt;a href="https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins+as+a+Windows+service?focusedCommentId=58916887">the instructions on wiki.jenkins-ci.org&lt;/a> you will probably get a warning that the .Net 2.0 is not available. This is reported as issue &lt;a href="https://issues.jenkins-ci.org/browse/JENKINS-21484?page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel&amp;amp;showAll=true">21484&lt;/a> and the fix is to upgrade, which sometimes can be a problem.&lt;/p>
&lt;p>If you can't upgrade to the latest version for whatever reason, you can easily fix the .Net problem by changing the jenkins-slave.exe.config file from:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]
&lt;configuration>
&lt;runtime>
&lt;generatePublisherEvidence enabled="false"/>
&lt;/runtime>
&lt;/configuration>
[/sourcecode]&lt;/p>
&lt;p>To:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]&lt;/p>
&lt;!-- see http://support.microsoft.com/kb/936707 -->
&lt;configuration>
&lt;runtime>
&lt;generatePublisherEvidence enabled="false"/>
&lt;/runtime>
&lt;startup>
&lt;supportedRuntime version="v2.0.50727" />
&lt;supportedRuntime version="v4.0" />
&lt;/startup>
&lt;/configuration>
[/sourcecode]
&lt;p>Hope this works for you. Cheers!&lt;/p></description></item><item><title>Mattermost Delete Channel "fixed"</title><link>https://realrolfje.github.io/rolfje.com/2017/10/26/mattermost-delete-channel-fixed/</link><pubDate>Thu, 26 Oct 2017 15:58:01 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2017/10/26/mattermost-delete-channel-fixed/</guid><description>
&lt;p>&lt;a href="delete-or-leave.jpg">&lt;img src="delete-or-leave.jpg" alt="">
&lt;/a>Users of Mattermost have probably noticed the less-than-optimal interface design where de Delete option is right above the Leave option in the Channel menu. On a busy server, you can imagine having quite a few incidents where people accidentally completely delete a channel.&lt;/p>
&lt;p>In the Open Source version of Mattermost, everybody van do anything, because there is &lt;a href="https://github.com/mattermost/mattermost-server/issues/6320">no sensible security model with roles&lt;/a>. Mattermost Inc. seems to think that the Open Source community is &lt;a href="https://github.com/mattermost/mattermost-server/issues/6320#issuecomment-302996954">not entitled to roles&lt;/a>, which I (and others with me) strongly disagree with.&lt;/p>
&lt;p>&lt;a href="https://github.com/realrolfje/mattermost-platform">Forking Mattermost&lt;/a>, learning Golang and enabeling security, improving &lt;a href="https://github.com/mattermost/mattermost-server/issues/6321">a few other issues&lt;/a> for the open source community along the way is a plan. But there is a simpler workaround for people running Mattermost inside &lt;a href="https://en.wikipedia.org/wiki/Nginx">Nginx&lt;/a>.&lt;/p>
&lt;!-- more -->Open _/etc/nginx/sites-enabled/mattermost_ and find the _"location"_ sections. Add the highlighted lines (this modifies one location, and adds a new one):
&lt;p>[sourcecode language=&amp;quot;text&amp;quot; highlight=&amp;quot;15-18, 20-50&amp;quot; padlinenumbers=&amp;quot;false&amp;quot; gutter=&amp;quot;false&amp;quot;]
location ~ /api/v[0-9]+/(users/)?websocket$ {
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection &amp;quot;upgrade&amp;quot;;
client_max_body_size 50M;
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Frame-Options SAMEORIGIN;
proxy_buffers 256 16k;
proxy_buffer_size 16k;
proxy_read_timeout 600s;
proxy_pass http://127.0.0.1:8065;&lt;/p>
&lt;pre>&lt;code>if ($request_method = DELETE) {
return 403;
break;
}
&lt;/code>&lt;/pre>
&lt;p>}
location ~ /api/v[0-9]+/channels/[\d\w]*$ {
client_max_body_size 50M;
proxy_set_header Connection &amp;quot;&amp;quot;;
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Frame-Options SAMEORIGIN;
proxy_buffers 256 16k;
proxy_buffer_size 16k;
proxy_read_timeout 600s;
proxy_cache mattermost_cache;
proxy_cache_revalidate on;
proxy_cache_min_uses 2;
proxy_cache_use_stale timeout;
proxy_cache_lock on;
proxy_pass http://127.0.0.1:8065;&lt;/p>
&lt;pre>&lt;code># See https://stackoverflow.com/questions/4833238/nginx-conf-redirect-multiple-conditions#4939522
if ($request_method = DELETE) {
set $block_delete 1;
}
# Allow deletes originatig from this ip address.
if ($remote_addr = 44.137.37.17) {
set $block_delete 0;
}
if ($block_delete = 1) {
return 403;
break;
}
&lt;/code>&lt;/pre>
&lt;p>}
location / {
client_max_body_size 50M;
proxy_set_header Connection &amp;quot;&amp;quot;;
proxy_set_header Host $http_host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Frame-Options SAMEORIGIN;
proxy_buffers 256 16k;
proxy_buffer_size 16k;
proxy_read_timeout 600s;
proxy_cache mattermost_cache;
proxy_cache_revalidate on;
proxy_cache_min_uses 2;
proxy_cache_use_stale timeout;
proxy_cache_lock on;
proxy_pass http://127.0.0.1:8065;
}
[/sourcecode]&lt;/p>
&lt;p>Restart nginx with the command &lt;em>&amp;quot;service nginx restart&amp;quot;&lt;/em>. After this modification, nobody can delete a channel. Crude but effective. If you have tips on how to parse the headers with nginx to allow certain users to access the DELETE methods, please let me know.&lt;/p>
&lt;p>&lt;strong>Background:&lt;/strong>
We run a chat server for (mostly Dutch) licensed HAM radio operators on our own &lt;a href="https://en.wikipedia.org/wiki/AMPRNet">44.x.x.x network segment&lt;/a> of the internet also known in the Netherlands as &lt;a href="https://www.hamnet.nl/">&amp;quot;hamnet&amp;quot;&lt;/a>. We wanted a modern chat service with mobile applications to spice up the HAM radio world, ping eachother on field days, share thoughts and links to information, and enable colaboration for the growing number &lt;a href="https://github.com/travisgoodspeed/md380tools">HAM radio programmers&lt;/a> working on &lt;a href="https://freedv.org/">open source&lt;/a> software.&lt;/p>
&lt;p>The server is paid for and run by people who care about sharing. Although Mattermost is not our focus area, we do try to contribute to Mattermost with bug reports, &lt;a href="https://github.com/42wim/matterbridge/pull/176">fixes&lt;/a> and running the beta chat clients. Our usergroup is almost 500 people, and growing. Depending on events or contests roughly 20% of our users are actively reading and contributing to one or more channels:&lt;/p>
&lt;table >
&lt;tbody >
&lt;tr >
&lt;td >[![](mattermost_users_hobbyscoop-month.png?w=150)
](mattermost_users_hobbyscoop-month.png)
&lt;/td>
&lt;td >[![](mattermost_sessions_hobbyscoop-week.png)
](mattermost_sessions_hobbyscoop-week.png)
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
Mattermost did mention their ["monday license program"](https://about.mattermost.com/mattermost-mondays/) in their responses, but as you can see we are already halfway their 1000 user limit and growing. We have no intention of sending any legal documents or statutes to a company which then decides if we can access our own existing content.
&lt;p>From where we are standing, with the open source tools we use, Mattermost looks like an odd duck. Most of the open source tools we use and contribute to have common-sense safety and security built in, Linux, nginx, &lt;a href="http://www.haproxy.org/">haproxy&lt;/a> and &lt;a href="https://letsencrypt.org/">letsencrypt&lt;/a>  being a few strong examples. In contrast, the Mattermost team cripples the Open Source version with &lt;a href="https://github.com/mattermost/mattermost-server/issues/5935">weak passwords&lt;/a> and no implementation of even the most basic security roles. For a tool which pretends to be mature and safe enough to be exposed to the Internet, the workaround as described in this blogpost should not be needed.&lt;/p>
&lt;p>Please help us convince the Mattermost Team of the importance of security in all versions of their products. Making money with support and features is okay, but basic common sense security should be the default for any open source project. We even think that improving security and speed makes Mattermost a more viable competitor against Slack and Telegram, to name two.&lt;/p>
&lt;p>Open Source is about sharing, not about farting in the general direction of the very people contributing to it.&lt;/p></description></item><item><title>Make the ESP8266 talk 9600 baud</title><link>https://realrolfje.github.io/rolfje.com/2017/01/02/make-the-esp8266-talk-9600-baud/</link><pubDate>Mon, 02 Jan 2017 19:53:59 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2017/01/02/make-the-esp8266-talk-9600-baud/</guid><description>
&lt;p>&lt;a href="https://youtu.be/0IRvtw22JIc">&lt;img src="b1262-0.jpg" alt="Surprise video">
&lt;/a>The default serial speed on the ESP8266 WiFi chip is 115200 baud. If you connect this chip to an Arduino and want to use SoftSerial to talk to it, it will not work. The SoftSerial library is limited to 9600 baud because of hardware limitations of the Arduino. If you want to talk to the ESP8266 with an Arduino at lower speeds, you need to tell the ESP8266 to slow down.&lt;/p>
&lt;!-- more -->[Remco.org](http://remco.org/) noted that sending 115200 baud with SoftSerial works just well enough to throw a command to the ESP8266. So below is a sketch that will do just that for you.
&lt;pre>&lt;code> 1. Load or copy/paste the sketch in your Arduino IDE.
2. Connect the ESP8266 board to the Arduino as follows:
&lt;/code>&lt;/pre>
&lt;ul>
&lt;li>ESP TX pin to Arduino softRX pin 4&lt;/li>
&lt;li>ESP RX pin to Arduino softTx pin 5
3. Open the Serial Monitor of the Arduino IDE and set it to 9600 bps and CR/LF.
4. Compile and upload this sketch to the  Arduino.
5. Wait for the Serial monitor to show:
AT
OK
-- Sketch stopped.&lt;/li>
&lt;/ul>
&lt;p>You can now use your ESP8266 at 9600 baud. The setting is stored in non-volatile memory, so you only need to do this once.&lt;/p>
&lt;p>Here's the sketch:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;cpp&amp;quot; gutter=&amp;quot;false&amp;quot;]
/*&lt;/p>
&lt;ul>
&lt;li>This sketch switches the ESP8266 from its&lt;/li>
&lt;li>factory-default setting of 115200 bps to&lt;/li>
&lt;li>9600 bps so that we can use SoftSerial to&lt;/li>
&lt;li>communicate with it.&lt;/li>
&lt;li>&lt;/li>
&lt;li>
&lt;ol>
&lt;li>Connect the ESP8266:&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;ul>
&lt;li>ESP TX pin to Arduino softRX pin 4&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;ul>
&lt;li>ESP RX pin to Arduino softTx pin 5&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;ol start="2">
&lt;li>Open the Serial Monitor of the&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Arduino IDE and set it to 9600 bps and&lt;/li>
&lt;li>CR/LF.&lt;/li>
&lt;li>
&lt;ol start="3">
&lt;li>Compile and upload this sketch to the&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Arduino.&lt;/li>
&lt;li>
&lt;ol start="4">
&lt;li>Sit back and watch the magic.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>
&lt;ol start="5">
&lt;li>If you see &amp;quot;AT OK&amp;quot;, it worked.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>&lt;/li>
&lt;li>Settings are stored in Flash memory, you&lt;/li>
&lt;li>only need to execute this sketch once.&lt;/li>
&lt;li>&lt;/li>
&lt;li>Please note: Although softserial is used&lt;/li>
&lt;li>to transmit at 115200 bps, you'll notice&lt;/li>
&lt;li>we never wait for an answer. That is&lt;/li>
&lt;li>because SoftSerial is not built to receive&lt;/li>
&lt;li>at speeds above 9600 bps.&lt;/li>
&lt;li>You have been warned.
*/
#include &amp;lt;SoftwareSerial.h&amp;gt;&lt;/li>
&lt;/ul>
&lt;p>const long sourcebaudrate = 115200;
const long targetbaudrate = 9600;&lt;/p>
&lt;p>const int softRX = 4;
const int softTX = 5;&lt;/p>
&lt;p>SoftwareSerial softSerial(softRX, softTX);&lt;/p>
&lt;p>void setup() {
Serial.begin(targetbaudrate);&lt;/p>
&lt;p>Serial.println(&amp;quot;Tell the ESP8266 to switch from &amp;quot;
+ String(sourcebaudrate) + &amp;quot; to &amp;quot;
+ String(targetbaudrate) + &amp;quot; bps.&amp;quot;);&lt;/p>
&lt;p>softSerial.begin(sourcebaudrate);
softSerial.print(&amp;quot;AT+IPR=&amp;quot;
+ String(targetbaudrate)
+ &amp;quot;\r\n&amp;quot;);&lt;/p>
&lt;p>delay(500);&lt;/p>
&lt;p>Serial.println(&amp;quot;Talk to the ESP8266 at &amp;quot;
+ String(targetbaudrate) + &amp;quot; bps.&amp;quot;);
softSerial.begin(targetbaudrate);
softSerial.print(&amp;quot;AT\r\n&amp;quot;);&lt;/p>
&lt;p>delay(500);&lt;/p>
&lt;p>Serial.println(&amp;quot;Reply from the ESP8266:&amp;quot;);
while(softSerial.available() &amp;gt; 0 ) {
char a = softSerial.read();
if(a == '\0') continue;
if(a != '\r' &amp;amp;&amp;amp; a != '\n' &amp;amp;&amp;amp; (a &amp;lt; 32)) continue;
Serial.print(a);
}&lt;/p>
&lt;p>Serial.println(&amp;quot;-- Sketch stopped.&amp;quot;);
}&lt;/p>
&lt;p>void loop() {
}
[/sourcecode]&lt;/p></description></item><item><title>Solving the JAXB "unexpected element" problem</title><link>https://realrolfje.github.io/rolfje.com/2015/06/08/solving-the-jaxb-unexpected-element-problem/</link><pubDate>Mon, 08 Jun 2015 21:43:22 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2015/06/08/solving-the-jaxb-unexpected-element-problem/</guid><description>
&lt;p>&lt;a href="1.jpg">&lt;img src="1.jpg?w=135" alt="-1">
&lt;/a>If you are using &lt;a href="https://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding">JAXB&lt;/a> in a maven/java project to unmarshal an XML document and you get:&lt;/p>
&lt;blockquote>javax.xml.bind.UnmarshalException: unexpected element (uri:"urn:iso:std:somestuff:xsd:somestuff", local:"Document"). Expected elements are (none)&lt;/blockquote>
&lt;p>Or if you are using JAXB to marshal an XML document and you get:&lt;/p>
&lt;blockquote>com.sun.istack.internal.SAXException2: unable to marshal type "generated.somestuff.Document" as an element because it is missing an @XmlRootElement annotation&lt;/blockquote>
&lt;p>You have probably fallen victim of the fact that JAXB does not do &amp;quot;Simple Binding&amp;quot; by default. If your project is a maven project and you generated classes based on an xsd file, this is how you fix it (without changing the xsd file):&lt;/p>
&lt;!-- more -->Tell JAXB to do "simple binding". To do so, create a binding file called src/main/resources/jaxb/simple-binding.xml with the following contents:
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot;]
&amp;lt;jaxb:bindings jaxb:extensionBindingPrefixes=&amp;quot;xjc&amp;quot; version=&amp;quot;2.1&amp;quot;
xmlns:jaxb=&amp;quot;http://java.sun.com/xml/ns/jaxb&amp;quot;
xmlns:xjc=&amp;quot;http://java.sun.com/xml/ns/jaxb/xjc&amp;quot;&amp;gt;
&lt;a href="jaxb:globalBindings">jaxb:globalBindings&lt;/a>
&lt;a href="xjc:simple/">xjc:simple/&lt;/a>
&amp;lt;/jaxb:globalBindings&amp;gt;
&amp;lt;/jaxb:bindings&amp;gt;
[/sourcecode]&lt;/p>
&lt;p>Then, add the following options to the execution of your jaxb2-maven-plugin (highlighted):&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; highlight=&amp;quot;13,14,15&amp;quot;]
&lt;plugin>
&lt;groupId>org.codehaus.mojo&lt;/groupId>
&lt;artifactId>jaxb2-maven-plugin&lt;/artifactId>
&lt;version>1.5&lt;/version>
&lt;executions>
&lt;execution>
&lt;id>somestuff&lt;/id>
&lt;goals>
&lt;goal>xjc&lt;/goal>
&lt;/goals>
&lt;configuration>
&lt;clearOutputDir>false&lt;/clearOutputDir>
&lt;extension>true&lt;/extension>
&lt;bindingDirectory>${basedir}/src/main/resources/jaxb&lt;/bindingDirectory>
&lt;bindingFiles>simple-binding.xjb&lt;/bindingFiles>
&lt;staleFile>${project.build.directory}/jaxb2/.somestuff.StaleFlag&lt;/staleFile>
&lt;packageName>generated.somestuff&lt;/packageName>
&lt;schemaDirectory>${basedir}/src/main/resources/schemas&lt;/schemaDirectory>
&lt;schemaFiles>somestuff.xsd&lt;/schemaFiles>
&lt;/configuration>
&lt;/execution>
&lt;/executions>
&lt;/plugin>
[/sourcecode]&lt;/p>
&lt;p>You should be able to re-generate the jaxb code now, and parsing should work. In order to test if you have this problem, and to ensure that it does not come back after somebody changes your build file, create a unittest which marshals a java object into xml, and then unmarshalls the generated xml back into an object:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;java&amp;quot;]
// Create document objects (JAXB Generated classes)
Document sourceDocument = new Document();
sourcedocument.setSomeElement(new SomeElement());&lt;/p>
&lt;p>JAXBContext jaxbContext = JAXBContext.newInstance(Document.class);&lt;/p>
&lt;p>// Write Document
File file = File.createTempFile(&amp;quot;sometempstuff&amp;quot;, &amp;quot;.xml&amp;quot;);
FileWriter fileWr = new FileWriter(file);
XMLOutputFactory xml = XMLOutputFactory.newFactory();
XMLStreamWriter xmlStrWr = xml.createXMLStreamWriter(fileWr);
xmlStrWr.writeStartDocument(&amp;quot;UTF-8&amp;quot;, &amp;quot;1.0&amp;quot;);
Marshaller marshaller = jaxbContext.createMarshaller();
marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);
marshaller.marshal(sourceDocument, xmlStrWr);
xmlStrWr.writeEndDocument();
fileWr.close();&lt;/p>
&lt;p>// Read Document
FileInputStream fileInpStr = new FileInputStream(file);
Unmarshaller unm = jaxbContext.createUnmarshaller();
Document result = (Document) unm.unmarshal(fileInpStr);&lt;/p>
&lt;p>// Test the parsedDocument here if you like.
...&lt;/p>
&lt;p>// Cleanup
file.delete();
[/sourcecode]&lt;/p>
&lt;p>The reason for this blog is of course the fact that I expected this &amp;quot;Simple Binding&amp;quot; to be the default, as 80% of the people will want to do exactly this. I've found a lot of people suffering from this problem, and I found the documentation to be not very helpful.&lt;/p>
&lt;p>I hope this blog post helps you get on with more important stuff.&lt;/p>
&lt;p>Have fun!
Rolf&lt;/p></description></item><item><title>Import/export an Oracle Schema using JDBC</title><link>https://realrolfje.github.io/rolfje.com/2015/01/02/importexport-an-oracle-schema-using-jdbc/</link><pubDate>Fri, 02 Jan 2015 09:51:16 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2015/01/02/importexport-an-oracle-schema-using-jdbc/</guid><description>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=3j3tj1kV1hs">&lt;img src="61c1ee2ce9d31c894d188b7b17cacee90ffdece8bc4c4798d10100b7515820de.jpg" alt="Everybody gets a database!">
&lt;/a>When doing integration testing or fixing a bug in a piece of Java code that uses Oracle as a database, being able to do quick exports and imports of your schema can be a big help. Sometimes just calling Oracle's imp/exp commandline tools from your code can be of help, but I was looking for something a bit more portable and less demanding on my local development machine. I found that Oracle's datapump functionality can be called from stored procedures, which in turn can be called from a normal JDBC statement.&lt;/p>
&lt;!-- more -->Combining Oracle's information and questions like this one on StackOverflow, I've come up with a solution that allows me to call Java methods to import and export a database schema to a dumpfile, like so:
&lt;p>[sourcecode language=&amp;quot;java&amp;quot; light=&amp;quot;true&amp;quot;]
import(&amp;quot;myschema&amp;quot;, &amp;quot;myschema.dmp&amp;quot;);
export(&amp;quot;myschema&amp;quot;, &amp;quot;myschema.dmp&amp;quot;);
[/sourcecode]&lt;/p>
&lt;p>These methods make use of regular JDBC calls, are implemented as follows:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;java&amp;quot;]
public static final String EXPORT_DIR = &amp;quot;/tmp&amp;quot;;&lt;/p>
&lt;p>public void export(String schema, String fileName)
throws SQLException, IOException {
String sql = getFileContents(&amp;quot;export.sql&amp;quot;);
pStmt pStmt = dataSource
.getConnection()
.prepareStatement(sql);
pStmt.setString(1, schema.toUpperCase());
pStmt.setString(2, EXPORT_DIR);
pStmt.setString(3, fileName);
pStmt.execute();
}&lt;/p>
&lt;p>public void import(String schema, String fileName)
throws IOException, SQLException {
String sql = getFileContents(&amp;quot;import.sql&amp;quot;);
pStmt pStmt = dataSource
.getConnection()
.prepareStatement(sql);
pStmt.setString(1, schemaName.toUpperCase());
pStmt.setString(2, EXPORT_DIR);
pStmt.setString(3, fileName);
pStmt.execute();
}&lt;/p>
&lt;p>private String getFileContents(String fileName)
throws IOException {
InputStream in = this.getClass()
.getResourceAsStream(fileName);
return IOUtils.toString(in, &amp;quot;UTF-8&amp;quot;);
}
[/sourcecode]&lt;/p>
&lt;p>As you can see in the code, I create prepared statements from two sql files which are located in the same Java package. The &amp;quot;export.sql&amp;quot; contains the following code:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;sql&amp;quot;]
DECLARE
schemaname VARCHAR2(200) := ?;
directoryname VARCHAR2(200) := ?;
dumpfilename VARCHAR2(200) := ?;&lt;/p>
&lt;p>directoryvariable VARCHAR(100)
:= 'EXPORT_DIR_' || schemaname;&lt;/p>
&lt;p>handle NUMBER;
status VARCHAR2(20);
BEGIN&lt;/p>
&lt;p>EXECUTE IMMEDIATE 'CREATE OR REPLACE DIRECTORY '
|| directoryvariable || ' AS '''
|| directoryname || '''';&lt;/p>
&lt;p>handle := DBMS_DATAPUMP.OPEN(
operation =&amp;gt; 'EXPORT',
job_mode =&amp;gt; 'SCHEMA',
job_name =&amp;gt; 'datapump export schema '
|| schemaname);&lt;/p>
&lt;p>DBMS_DATAPUMP.ADD_FILE(
handle =&amp;gt; handle,
filename =&amp;gt; dumpfilename,
directory =&amp;gt; directoryvariable,
reusefile =&amp;gt; 1);&lt;/p>
&lt;p>DBMS_DATAPUMP.ADD_FILE(
handle =&amp;gt; handle,
filename =&amp;gt; dumpfilename || '.export.log',
directory =&amp;gt; directoryvariable,
filetype =&amp;gt; DBMS_DATAPUMP.KU$_FILE_TYPE_LOG_FILE,
reusefile =&amp;gt; 1);&lt;/p>
&lt;p>DBMS_DATAPUMP.METADATA_FILTER(
handle =&amp;gt; handle,
name =&amp;gt; 'SCHEMA_EXPR',
value =&amp;gt; 'IN (''' || schemaname || ''')');&lt;/p>
&lt;p>DBMS_DATAPUMP.START_JOB(handle);
DBMS_DATAPUMP.WAIT_FOR_JOB(handle, status);&lt;/p>
&lt;p>EXECUTE IMMEDIATE 'DROP DIRECTORY '
|| directoryvariable;
END;
[/sourcecode]&lt;/p>
&lt;p>The &amp;quot;import.sql&amp;quot; looks very similar, containing the following code:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;sql&amp;quot;]
DECLARE
schemaname VARCHAR2(200) := ?;
directoryname VARCHAR2(200) := ?;
dumpfilename VARCHAR2(200) := ?;&lt;/p>
&lt;p>directoryvariable VARCHAR(100) := 'EXPORT_DIR_'
|| schemaname;&lt;/p>
&lt;p>handle NUMBER;
status VARCHAR2(20);
BEGIN&lt;/p>
&lt;p>EXECUTE IMMEDIATE 'CREATE OR REPLACE DIRECTORY '
|| directoryvariable || ' AS '''
|| directoryname || '''';&lt;/p>
&lt;p>handle := DBMS_DATAPUMP.OPEN(
operation =&amp;gt; 'IMPORT',
job_mode =&amp;gt; 'SCHEMA',
job_name =&amp;gt; 'datapump import schema '
|| schemaname);&lt;/p>
&lt;p>DBMS_DATAPUMP.ADD_FILE(
handle =&amp;gt; handle,
filename =&amp;gt; dumpfilename,
directory =&amp;gt; directoryvariable);&lt;/p>
&lt;p>DBMS_DATAPUMP.ADD_FILE(
handle =&amp;gt; handle,
filename =&amp;gt; dumpfilename || '.import.log',
directory =&amp;gt; directoryvariable,
filetype =&amp;gt; DBMS_DATAPUMP.KU$_FILE_TYPE_LOG_FILE,
reusefile =&amp;gt; 1);&lt;/p>
&lt;p>DBMS_DATAPUMP.SET_PARAMETER(
handle =&amp;gt; handle,
name =&amp;gt; 'table_exists_action',
value =&amp;gt; 'REPLACE');&lt;/p>
&lt;p>DBMS_DATAPUMP.METADATA_FILTER(
handle =&amp;gt; handle,
name =&amp;gt; 'SCHEMA_EXPR',
value =&amp;gt; 'IN (''' || schemaname || ''')');&lt;/p>
&lt;p>DBMS_DATAPUMP.START_JOB(handle);
DBMS_DATAPUMP.WAIT_FOR_JOB(handle, status);&lt;/p>
&lt;p>EXECUTE IMMEDIATE 'DROP DIRECTORY '
|| directoryvariable;
END;
[/sourcecode]&lt;/p>
&lt;p>I recommend reading the Oracle Datapump documentation (albeit dangerously enterprisey) to see what exactly happens when these scripts run. For instance, dumpfiles are reused (overwritten) without notice, and logfiles are created next to the dumpfile.&lt;/p>
&lt;p>In this example, I write the dumpfiles to the &amp;quot;/tmp&amp;quot; directory on the database server. You can change this to any directory you like, but please make sure that the directory exists, and that the oracle user or orainst group has write access in that directory. A good way to start is first make it work with the /tmp directory, as in this example. If Oracle can not (over)write a file for any reason, you will get incomprehensible error messages about incorrect parameters in the dbms.datapump.add_file() calls.&lt;/p>
&lt;p>Enjoy your Oracle-free development environment!&lt;/p></description></item><item><title>Arduino and the QVGA 2.2" TFT SPI screen</title><link>https://realrolfje.github.io/rolfje.com/2014/11/17/arduino-and-the-qvga-2-2-tft-spi-screen/</link><pubDate>Mon, 17 Nov 2014 10:37:17 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2014/11/17/arduino-and-the-qvga-2-2-tft-spi-screen/</guid><description>
&lt;p>&lt;a href="http://www.elecfreaks.com/store/22%C3%82%E2%80%99-tft-lcd-tft0122sp-p-672.html">&lt;img src="2-2sp_a.jpg" alt="QVGA SPI 2.2" 320x240 screen">
&lt;/a>I went through all the struggles everybody else seems to be going through to get this screen connected to my &lt;a href="http://arduino.cc/en/Main/arduinoBoardNano">Arduino Nano&lt;/a>. I had the 5V to 3.3V voltage conversion problem, and the &amp;quot;only works with software interrupts&amp;quot; problem which makes the display run slow. The solutions are not complicated but not very wel documented. Until now.&lt;/p>
&lt;!-- more -->
&lt;p>&lt;strong>Step 1: It's a 3.3V screen&lt;/strong>
Before connecting the screen to your Arduino, it's important to know that this screen uses 3.3V logic. That means that connecting your Arduino to it will likely ruin the screen. If you're not using the CF cardreader on the screen then the communication is one-way to the screen. Converting your 5V outputs to 3.3V is really simple, all you need is a couple of cheap 1N4148 diodes and a few resistors (for alternatives, see below). Connect your screen as follows:&lt;/p>
&lt;p>&lt;a href="foto-2.jpg">&lt;img src="foto-2.jpg" alt="Simple Level Conversion">
&lt;/a>&lt;/p>
&lt;p>Please make sure you wire &lt;em>all&lt;/em> connections in this schematic.&lt;/p>
&lt;p>&lt;strong>Step 2: Hidden pins in the code&lt;/strong>
The &lt;a href="https://github.com/adafruit/Adafruit_ILI9340">Adafruit ILI9340 library&lt;/a> contains some examples on how to get the screen running. You'll need the SPI and Adafruit_GFX libraries too, as shown in the header of the examples. Let's look at a little code that alternates the screen between black and white:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;cpp&amp;quot;]
/*&lt;/p>
&lt;ul>
&lt;li>Example code to make the TFT alternate&lt;/li>
&lt;li>between black and white using hardware SPI:
*/
#include &amp;quot;SPI.h&amp;quot;
#include &amp;quot;Adafruit_GFX.h&amp;quot;
#include &amp;quot;Adafruit_ILI9340.h&amp;quot;&lt;/li>
&lt;/ul>
&lt;p>// TFT pin mappings for UNO/NANO
#define _sclk 13
#define _miso 12
#define _mosi 11
#define _cs 10
#define _dc 9
#define _rst 8&lt;/p>
&lt;p>// Use hardware SPI
Adafruit_ILI9340 tft = Adafruit_ILI9340(_cs, _dc, _rst);&lt;/p>
&lt;p>void setup() {
tft.begin();
tft.fillScreen(ILI9340_GREEN);
}&lt;/p>
&lt;p>void loop() {
tft.fillScreen(ILI9340_BLACK);
tft.fillScreen(ILI9340_WHITE);
}
[/sourcecode]&lt;/p>
&lt;p>Note that there is something funny going on here. The constructor for the Adafruit_ILI9340 object only has _cs, _dc, and _rst as parameter. Initially I thought &amp;quot;Great, only 3 connections to the display!&amp;quot;. Alas, this is not the case. &lt;em>&lt;strong>You still need to wire the _sclk and _mosi port to the display&lt;/strong>&lt;/em>. The _miso port can be left out, but you can't use it for anything else on the Arduino side because the library seems to be accessing it.&lt;/p>
&lt;p>If you have your connections correct and upload the example above to your Arduino, you should see your screen continuously alternate between black and white. You will be able to see the drawing of the screen, but it should not take more than 1 second to fill the whole screen. If it takes more than a second to fill the screen, you're likely using the software SPI method. Check the code and the connections again.&lt;/p>
&lt;p>This is how the data on the _mosi pin looks on a &lt;a href="http://www.radiomuseum.org/r/tektronix_storage_oscilloscope_7623a.html">Tektronix 7623A oscilloscope&lt;/a> when drawing graphics on the TFT screen. It's not a perfect square because of the capacitance of the diodes, but the difference between high and low states is good enough and the slope is just fast enough so that the display sees all the bits that are sent to it:&lt;/p>
&lt;p>&lt;a href="foto.jpg">&lt;img src="foto.jpg" alt="MOSI data">
&lt;/a>&lt;/p>
&lt;p>&lt;strong>Alternative 5V to 3.3V conversions:&lt;/strong>
&lt;img src="foto-1.jpg" alt="Zener conversion">
If you don't have enough diodes, you can use zener diodes as shown on the right. I have not tested this on my screen but it should give you similar results, and saves you a few components.&lt;/p>
&lt;p>A much nicer, two-way level conversion enables you to connect the _miso port to talk to the CF Card Reader. You can make this
with an N-Channel MOSFET. Check Andrew's blog on &lt;a href="http://www.rocketnumbernine.com/2009/04/10/5v-33v-bidirectional-level-converter">how to use an N-channel FET to do the conversion&lt;/a>:&lt;/p>
&lt;p>&lt;a href="http://www.rocketnumbernine.com/2009/04/10/5v-33v-bidirectional-level-converter">&lt;img src="level-converter-mosfet.jpg" alt="level-converter-mosfet">
&lt;/a>&lt;/p>
&lt;p>If you need more speed or less components, you can also check out &lt;a href="http://www.maximintegrated.com/en/app-notes/index.mvp/id/3007">Maxim's range of level conversion ICs&lt;/a>.&lt;/p>
&lt;p>Have fun!&lt;/p>
&lt;p>&lt;a href="http://www.waterman.com/en/6-pens">&lt;img src="foto-3.jpg" alt="Waterman fountain pen">
&lt;/a>&lt;/p></description></item><item><title>Open a port in OSX Mavericks' Firewall</title><link>https://realrolfje.github.io/rolfje.com/2014/05/10/open-a-port-in-osx-mavericks-firewall/</link><pubDate>Sat, 10 May 2014 13:57:49 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2014/05/10/open-a-port-in-osx-mavericks-firewall/</guid><description>
&lt;p>&lt;a href="https://www.youtube.com/watch?feature=player_embedded&amp;amp;v=at6HrV5CTo8">&lt;img src="security.png" alt="Firewall">
&lt;/a>The new firewall in Mavericks is great. For the common user. For a developer, not so much. If you are a Java developer like me, and you just need to open one port (say, 8080) so that the web application you’re working on is accessable from another computer, you can’t. I disabled the Firewall altogether for a few days, but it didn't feel right.&lt;/p>
&lt;p>I googled around and to make a long story short, here’s how to open port 8080 on any interface to any application on your OSX Mavericks installation in 3 steps:&lt;/p>
&lt;p>&lt;code>sudo vim /etc/pf.conf&lt;/code>&lt;/p>
&lt;p>Then add the following lines at the end of the file:&lt;/p>
&lt;p>&lt;code># Open port 8080 for TCP on all interfaces pass in proto tcp from any to any port 8080&lt;/code>&lt;/p>
&lt;p>Test (and, according to the documentation, load) your edits with:&lt;/p>
&lt;p>&lt;code>sudo pfctl -vnf /etc/pf.conf&lt;/code>&lt;/p>
&lt;p>Reboot.&lt;/p>
&lt;p>(I have found at least 5 pieces of voodoo to make the Firewall restart and reload, but none of them seemed to work reliably, so pardon the reboot)&lt;/p>
&lt;p>You can close it by commenting out the lines in pf.conf and reboot again. If anybody knows of an easier way to do this, preferably in one terminal command, and without rebooting, let me know.&lt;/p>
&lt;p>Hope this helps.&lt;/p></description></item><item><title>Anonimatron: Quick Start</title><link>https://realrolfje.github.io/rolfje.com/2013/11/03/anonimatron-quick-start/</link><pubDate>Sun, 03 Nov 2013 14:33:15 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2013/11/03/anonimatron-quick-start/</guid><description>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=opk4x7jzRS4">&lt;img src="homer.png" alt="Anonymous customer">
&lt;/a>After reading my last blogpost on Anonimatron, you must have asked yourself &amp;quot;Great, but how do I actually use Anonimatron to de-personalize my database&amp;quot;? I tried my best to make basic Anonimatron configuration as self-explanatory as possible, just start it without any command line arguments and it will tell you.&lt;/p>
&lt;p>Less adventurous or in a big hurry? This blogpost will show how simple it is to install and configure Anonimatron on an example MySQL database.&lt;/p>
&lt;!-- more -->**Setting up a test database**
&lt;p>To demonstrate what Anonimatron can do to your data, we will create a little test database to play with. Anonimatron connects to all kinds of databases, including MySQL, Postgress and Oracle. In this example, we use MySQL. Here are all the statements you need to create a little database with 2 tables, a user, and some &amp;quot;private&amp;quot; data:&lt;/p>
&lt;p>[code lang=&amp;quot;sql&amp;quot; gutter=&amp;quot;false&amp;quot;]
create database mydb;
create user myuser identified by 'mypassword';
grant all privileges on &lt;em>.&lt;/em> to 'myuser'@'localhost'
identified by 'mypassword' with grant option;&lt;/p>
&lt;p>create table mydb.userdata (
id int not null auto_increment primary key,
firstname varchar(20),
lastname varchar(20),
creditcardnr varchar(20)
);&lt;/p>
&lt;p>create table mydb.lastnames (
id int not null auto_increment primary key,
lastname varchar(20)
);&lt;/p>
&lt;p>insert into mydb.userdata
(firstname,lastname, creditcardnr)
values ('Homer', 'Simpson','1234'),
('Marge', 'Simpson','5678'),
('Ned', 'Flanders','3456'),
('Charles', 'Burns','3456');&lt;/p>
&lt;p>insert into mydb.lastnames (lastname)
values ('Simpson'), ('Flanders'), ('Burns');
[/code]&lt;/p>
&lt;p>After all the hard work, you should be able to connect to the database with 'myuser' and see the &amp;quot;private&amp;quot; data in there:&lt;/p>
&lt;p>[code language=&amp;quot;sql&amp;quot; light=&amp;quot;true&amp;quot;]
select * from mydb.userdata;
[/code]&lt;/p>
&lt;table >
&lt;tbody >
&lt;tr >
id
firstname
lastname
creditcardnr
&lt;/tr>
&lt;tr >
&lt;td >1
&lt;/td>
&lt;td >Homer
&lt;/td>
&lt;td >Simpson
&lt;/td>
&lt;td >1234
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >2
&lt;/td>
&lt;td >Marge
&lt;/td>
&lt;td >Simpson
&lt;/td>
&lt;td >5678
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >3
&lt;/td>
&lt;td >Ned
&lt;/td>
&lt;td >Flanders
&lt;/td>
&lt;td >3456
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >4
&lt;/td>
&lt;td >Charles
&lt;/td>
&lt;td >Burns
&lt;/td>
&lt;td >3456
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
[code language="sql" light="true"]
select * from mydb.lastnames;
[/code]
&lt;table >
&lt;tbody >
&lt;tr >
id
lastname
&lt;/tr>
&lt;tr >
&lt;td >1
&lt;/td>
&lt;td >Simpson
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >2
&lt;/td>
&lt;td >Flanders
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >3
&lt;/td>
&lt;td >Burns
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
Let's pretend that this is a copy of a production database, and you want to de-personalize or anonymize it.
&lt;p>&lt;strong>Installing Anonimatron&lt;/strong>
To anonymize your data,  &lt;a href="http://http://anonimatron.sourceforge.net">download Anonimatron&lt;/a> and unzip it in a directory of your choice. You should find an &amp;quot;anonimatron.sh&amp;quot; and &amp;quot;anonimatron.bat&amp;quot; file there. Depending on your system, run it without arguments. If you have java installed on your system you should see something like this:&lt;/p>
&lt;p>[code light=&amp;quot;true&amp;quot;]
$ ./anonimatron.sh&lt;/p>
&lt;p>This is Anonimatron 1.7, a command line tool to consistently
replace live data in your database with data data which
can not be traced back to the original data.
You can use this tool to transform a dump from a production
database into a large representative dataset you can
share with your development and test team.
Use the -configexample command line option to get an idea of
what your configuration file needs to look like.&lt;/p>
&lt;p>usage: java -jar anonimatron.jar
-config The XML Configuration file describing what to
anonymize.
-configexample Prints out a demo/template configuration file.
-dryrun Do not make changes to the database.
-synonyms The XML file to read/write synonyms to. If the file
does not exist it will be created.
[/code]&lt;/p>
&lt;p>Victory! You've installed Anonimatron. Yes, life can really be that easy.&lt;/p>
&lt;p>&lt;strong>Configuring Anonimatron&lt;/strong>
Next, we need to tell Anonimatron how to connect to our database, and which tables and columns to process and how. The hardest part of this is probably figuring out how to create a jdbc connect string. Anonimatron can help you with that. If you start anonimatron with the &amp;quot;-configexample&amp;quot; parameter, it will scan the jdbcdrivers directory for available and supported drivers, and will show you how a jdbc URL for any of these should look:&lt;/p>
&lt;p>[code light=&amp;quot;true&amp;quot;]
$ ./anonimatron.sh -configexample&lt;/p>
&lt;p>Supported Database URL formats:
Jdbc URL format By Driver
jdbc:oracle:oci8:@[SID] oracle.jdbc.driver.OracleDriver
jdbc:oracle:thin:@[HOST]:[PORT]:[SID] oracle.jdbc.driver.OracleDriver
jdbc:oracle:oci:@[SID] oracle.jdbc.driver.OracleDriver
jdbc:postgresql://[HOST]:[PORT]/[DB] org.postgresql.Driver
jdbc:mysql://[HOST]:[PORT]/[DB] org.gjt.mm.mysql.Driver&lt;/p>
&lt;p>Anonimatron will try to autodetect drivers which are
stored in the lib directory. Add you driver there.&lt;/p>
&lt;p>...
[/code]&lt;/p>
&lt;p>In this example, we have just created a MySQL database, so we'll use that URL and fill in the blanks. We use the rest of the configuration example and with some copy-pasting we come up with the following configuration:&lt;/p>
&lt;p>[code language=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]&lt;/p>
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;p>&lt;configuration jdbcurl="jdbc:mysql://localhost:3306/mydb"
userid="mydata" password="mypassword">&lt;/p>
&lt;table name="userdata">
&lt;column name="firstname" type="ROMAN_NAME" />
&lt;column name="lastname" type="ELVEN_NAME" />
&lt;column name="creditcardnr" type="RANDOMDIGITS"/>
&lt;/table>
&lt;table name="lastnames">
&lt;column name="lastname" type="ELVEN_NAME" />
&lt;/table>
&lt;/configuration>
[/code]
&lt;p>This simple configuration file will tell Anonimatron the following things:&lt;/p>
&lt;pre>&lt;code> * How to connect to the mydb database
* The values in username.firstname should be processed with the ROMAN_NAME Anonymizer. Anonymizers are little plugins which are able to generate data with certain properties, sometimes based on the original data. This particular Anonymizer generates Roman Names by picking syllables from a builtin list.
* The values in username.lastname should be replaced by Elven names. This is almost identical to Roman names but with a different Syllable file.
* The userdata.creditcardnr should be replaced by a set of random digits of the same length. In our case, 4 digits will be replaced by 4 differnt digits. Should you really need numbers which are semantically correct credit card numbers, you could write your own Anonymizer plugin. We'll cover that in a later blogpost.
* The lastnames.lastname column is also an Elven name. Because of the way Anonimatron handles data, strings in this column will be processed exactly the same way as the userdata.lastname column, as we will see below.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Anonymize!&lt;/strong>
Now that we have configured Anonimatron, it's time to start it up and tell it to use our configuration file and store synonyms. It will be finished in the blink of an eye, and your output should look somewhat like this:&lt;/p>
&lt;p>[code light=&amp;quot;true&amp;quot;]
$ ./anonimatron.sh -config config.xml -synonyms synonyms.xml&lt;/p>
&lt;p>Anonymization process started&lt;/p>
&lt;p>Jdbc url : jdbc:mysql://localhost:3306/mydb
Database user : mydata
To do : 2 tables.&lt;/p>
&lt;p>Anonymizing table 'lastnames', total progress [100%, ETA 11:36:56 PM]
Anonymization process completed.&lt;/p>
&lt;p>Writing Synonyms to synonyms.xml ...[done].
[/code]&lt;/p>
&lt;p>If Anonimatron complains or does not run, you might want to check out the &lt;em>anonimatron.log&lt;/em> file for clues. Most log entries will be pretty self-explanatory. If not, please register an issue and we'll see what we can do to fix that.&lt;/p>
&lt;p>Let's check the results. First, we can check what synonyms were generated by looking into the synonyms.xml file we told it to create:&lt;/p>
&lt;p>[code light=&amp;quot;true&amp;quot;]
$ cat synonyms.xml
[/code]
[code language=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]&lt;/p>
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;synonyms>
&lt;string type="ELVEN_NAME" from="QnVybnM=" to="RGhvZWxsaWFu"/>
&lt;string type="ELVEN_NAME" from="RmxhbmRlcnM=" to="QWhlbGhhbGRldGhlc3M="/>
&lt;string type="ELVEN_NAME" from="U2ltcHNvbg==" to="QWhkdWxlbGhhbGVs"/>
&lt;string type="ROMAN_NAME" from="SG9tZXI=" to="QmVudWxhdWJlbGl1cw=="/>
&lt;string type="ROMAN_NAME" from="TmVk" to="RWN1cw=="/>
&lt;string type="ROMAN_NAME" from="TWFyZ2U=" to="QWxudWxhdWN1cw=="/>
&lt;string type="ROMAN_NAME" from="Q2hhcmxlcw==" to="QWxudXM="/>
&lt;string type="RANDOMDIGITS" from="NTY3OA==" to="ODY5OA=="/>
&lt;string type="RANDOMDIGITS" from="MTIzNA==" to="NDM0Mw=="/>
&lt;string type="RANDOMDIGITS" from="MzQ1Ng==" to="NjEyNQ=="/>
&lt;/synonyms>
[/code]
&lt;p>You'll note that the &amp;quot;from&amp;quot; and &amp;quot;to&amp;quot; values look a bit garbled. This is because Anonimatron used Base64 encoding to store values of synonyms. This is so that we can store the values bit for bit, without worying about encodings. If you wanted to, you could easily decode these strings by writing a little program.&lt;/p>
&lt;p>Even without decoding we can see some interesting things about this file. Remember we had lastnames configured as Elven names? Although we have 4 entries in the username table, we see only 3 Elven names. That is because Homer and Marge have the same lastname. These same synonyms are also used by the lastnames.lastname column. The same goes for the creditcard numbers. As might have noticed that Ned Flanders and Charles Burns used the same credit card number in this system.&lt;/p>
&lt;p>Enough staring at XML. Let's get to what matters most: our database. First, let's see if the names and numbers have changed:&lt;/p>
&lt;p>[code language=&amp;quot;sql&amp;quot; light=&amp;quot;true&amp;quot;]
select * from mydb.userdata;
[/code]&lt;/p>
&lt;table >
&lt;tbody >
&lt;tr >
id
firstname
lastname
creditcardnr
&lt;/tr>
&lt;tr >
&lt;td >1
&lt;/td>
&lt;td >Benulaubelius
&lt;/td>
&lt;td >Ahdulelhalel
&lt;/td>
&lt;td >4343
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >2
&lt;/td>
&lt;td >Alnulaucus
&lt;/td>
&lt;td >Ahdulelhalel
&lt;/td>
&lt;td >8698
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >3
&lt;/td>
&lt;td >Ecus
&lt;/td>
&lt;td >Ahelhaldethess
&lt;/td>
&lt;td >6125
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >4
&lt;/td>
&lt;td >Alnus
&lt;/td>
&lt;td >Dhoellian
&lt;/td>
&lt;td >6125
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
That looks much better. The first and lastnames are (almost) pronounceable names which probably would look realistic in a screenshot or testcase, yet there is no trace left of the original data that was there. When we check the lastnames table we see that lastnames are being translated consistently with the userdata table:
&lt;p>[code language=&amp;quot;sql&amp;quot; light=&amp;quot;true&amp;quot;]
select * from mydb.lastnames;
[/code]&lt;/p>
&lt;table >
&lt;tbody >
&lt;tr >
id
lastname
&lt;/tr>
&lt;tr >
&lt;td >1
&lt;/td>
&lt;td >Ahdulelhalel
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >2
&lt;/td>
&lt;td >Ahelhaldethess
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >3
&lt;/td>
&lt;td >Dhoellian
&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
This consistent behavior makes sure that queries where the userdata table and the lastnames table are joined based on lastname will still work.
&lt;p>If you want to play some more with Anonimatron, recreate the original tables, add additional (overlapping) data and re-run anonimatron against it with the synonym file you just created. You'll notice that any &amp;quot;Simpson&amp;quot; lastname will be translated to &amp;quot;Ahdulelhalel&amp;quot; constently on each run. If you don't want that to happen, simply throw away the synonym file or don't tell Anonimatron to use it. You can also generate the synonym file first without doing anything to the database by using the -dryrun option, and later do the same run based on the synonyms generated earlier.&lt;/p>
&lt;p>Remember: The private data &amp;quot;moved&amp;quot; from the database into the synonyms.xml file we created. So that becomes the new data to watch. Store it in a safe place where nobody can access it.&lt;/p>
&lt;p>Have fun experimenting!&lt;/p></description></item><item><title>Anonimatron: Overview</title><link>https://realrolfje.github.io/rolfje.com/2013/10/31/anonimatron-overview/</link><pubDate>Thu, 31 Oct 2013 20:42:28 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2013/10/31/anonimatron-overview/</guid><description>
&lt;p>&lt;a href="http://anonimatron.sf.net/">&lt;img src="itsthelaw.png" alt="It's the Law">
&lt;/a>In every software project, there comes a time where a bug pops up, nobody knows how to reproduce it, and somebody says &amp;quot;I know, let's test this against a copy of the production database&amp;quot;. Even with the best intentions, once production data leaves the production machine with all its safeguards it becomes really hard to do access control on that data.&lt;/p>
&lt;p>Most of the time, it's not even needed to have that data. Developers just need a data set which resembles the production scenario close enough. Some brave souls have mixed succes with data generators, but those generators usually are tedious to maintain and die a slow death under the pressure of the daily grind.&lt;/p>
&lt;p>In some ambitious projects automated integration testcases are built on top of the data which was inserted by the data generators. As the generators die, so die the tests. If you recognize this pattern, &lt;a href="http://http://anonimatron.sourceforge.net">Anonimatron&lt;/a> might be the answer for you.&lt;/p>
&lt;!-- more -->
&lt;p>&lt;img src="1-dataindb.png" alt="Customer data in the database.">&lt;/p>
&lt;p>So let's say you're working on release 5 of a big webshop, and because of the succes of the shop, it runs into performance problems. There's no time or budget to build a data generator, and before you can say no, you have a copy of the production data on some development server, containing the creditcard data of your customers. What do you do?&lt;/p>
&lt;p>This is where Anonimatron comes in. Anonimatron can de-personalize or anonymize your data for you, give you total control over what gets anonymized, and how, and thinks of data types as &amp;quot;color&amp;quot; or &amp;quot;address&amp;quot; instead of &amp;quot;int&amp;quot; and &amp;quot;String&amp;quot;. Here's how that works:&lt;/p>
&lt;p>&lt;img src="2-anonimatron.png" alt="Anonimatron data flow">&lt;/p>
&lt;p>For every distinct, unique value A, Anonimatron creates a replacement value X, and writes that back to the database. It stores the A=X relation in a Synonym, and consistently applies those Synonyms throughout all tables in the database.&lt;/p>
&lt;p>By using synonyms, Anonimatron makes sure that your database is still statistically roughly the same as before anonymization, and also makes sure that if you have two tables with a &amp;quot;lastname&amp;quot; column, matching records will actually still match.&lt;/p>
&lt;p>Anonimatron (optionally) stores these synonyms for later use, so it can be consistent between different runs. New production data? No problem. Load it, tell Anonimatron to use the old synonyms, and the old data will be Anonymized exactly the same as the last time. Only new records will generate new synonyms, which of course will be added to the synonym file for the next run.&lt;/p>
&lt;p>This feature also enables you to write testscripts based on anonymized production data. Your scripts will not easily break, because new production copies are anonymized very consistently.&lt;/p>
&lt;p>&lt;img src="3-datainsynonims.png" alt="Data in Synonyms">&lt;/p>
&lt;p>After the anonymization process, the private data will be in the synonym file. This file needs to be put in a (very) safe place, and only the people that import production data and run Anonimatron should be able to access this file.&lt;/p>
&lt;p>After anonymization, developers can access the database without immediately being exposed to private addresses of customers, bank accounts, or whatnot. Of course this all depends on what you tell Anonimatron to do, and what to anonymize.&lt;/p>
&lt;p>Remember, with great power comes great responsibility. Try to stay away from customer data as much as you can, and handle it with deep respect when you get it, delete it or depersonalize it as soon as you can. Use &lt;a href="http://http://anonimatron.sourceforge.net">Anonimatron&lt;/a> wisely.&lt;/p>
&lt;h2 id="its-the-law">&lt;strong>It's the Law.&lt;/strong>&lt;/h2></description></item><item><title>Non-Java Binary Dependencies in Maven</title><link>https://realrolfje.github.io/rolfje.com/2013/07/18/non-java-binary-dependencies-in-maven/</link><pubDate>Thu, 18 Jul 2013 20:48:18 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2013/07/18/non-java-binary-dependencies-in-maven/</guid><description>
&lt;p>&lt;a href="http://http://www.thinkgeek.com/">&lt;img src="binary-pillow.jpg" alt="binary-pillow">
&lt;/a>Suppose you have a Java Server application, and some of the runtime binaries in that application are external to your application. Generated image files, compiled Silverlight components in your pages, or resource files which are managed by an external team.&lt;/p>
&lt;p>Much like the jar files used by your application, these external binaries can be seen as dependencies, with versions. This blogpost assumes your project is built with Maven 2, because the real world &lt;a href="http://rolfje.wordpress.com/2012/12/02/the-world-is-not-a-green-field/">isn't always a greenfield project&lt;/a>.&lt;/p>
&lt;p>Because Maven is designed around jar file dependencies, and a lot of it's internal decisions are based on file extensions, it looks like this problem can not be tackled with Maven. But there is a way to do this. It will decouple your sub-projects and make version and dependency management much better.&lt;/p>
&lt;!-- more -->**Uploading the binaries files in a remote repository**
&lt;p>The hardest part of this problem is getting the binary uploaded to your maven repository. It seems that there is no other way than disquising it as a jar file, which only leads to confusion. But it turns out that you can, actually upload a .exe file to the repository. To do so, place a pom.xml file in the root of the project from which you want to upload the binary file. You do not have to mavenize the whole project, we only use Maven to do the upload to the repository.&lt;/p>
&lt;p>Find the file you want to deploy. It can be placed anywhere but I prefer to use the target directory so it looks maven-esque. Make sure you choose the &amp;quot;pom&amp;quot; packaging type so maven does not generate a jar for you.&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;11,16,23,24&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]&lt;project>
&lt;groupId>com.rolfje.example&lt;/groupId>
&lt;artifactId>executablestuff&lt;/artifactId>
&lt;packaging>pom&lt;/packaging>
&lt;version>1.0-SNAPSHOT&lt;/version>
&lt;name>Some executable component&lt;/name>
&lt;build>
&lt;plugins>
&lt;plugin>
&lt;groupId>org.codehaus.mojo&lt;/groupId>
&lt;artifactId>build-helper-maven-plugin&lt;/artifactId>
&lt;version>1.8&lt;/version>
&lt;executions>
&lt;execution>
&lt;id>attach-artifacts&lt;/id>
&lt;phase>package&lt;/phase>
&lt;goals>
&lt;goal>attach-artifact&lt;/goal>
&lt;/goals>
&lt;configuration>
&lt;artifacts>
&lt;artifact>
&lt;file>${basedir}/target/myexecutable.exe&lt;/file>
&lt;type>exe&lt;/type>
&lt;/artifact>
&lt;/artifacts>
&lt;/configuration>
&lt;/execution>
&lt;/executions>
&lt;/plugin>
&lt;/plugins>
&lt;/build>
&lt;/project>
[/sourcecode]&lt;/p>
&lt;p>When you run &amp;quot;maven install&amp;quot;, your exe file will be pushed to your local repository (more on using a remote repository further down).&lt;/p>
&lt;p>&lt;strong>Downloading the binaries files from the remote repository&lt;/strong>
In the project that will depend on your binary file, you want to copy it from your repository into your target directory at the compile stage. You can do this by adding the following plugin configuration to your pom:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;14,15,16,17,18&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;plugin>
&lt;groupId>org.apache.maven.plugins&lt;/groupId>
&lt;artifactId>maven-dependency-plugin&lt;/artifactId>
&lt;executions>
&lt;execution>
&lt;id>copy-dependency&lt;/id>
&lt;phase>compile&lt;/phase>
&lt;goals>
&lt;goal>copy&lt;/goal>
&lt;/goals>
&lt;configuration>
&lt;artifactItems>
&lt;artifactItem>
&lt;groupId>com.rolfje.example&lt;/groupId>
&lt;artifactId>executablestuff&lt;/artifactId>
&lt;type>exe&lt;/type>
&lt;overWrite>true&lt;/overWrite>
&lt;outputDirectory>target&lt;/outputDirectory>
&lt;/artifactItem>
&lt;/artifactItems>
&lt;/configuration>
&lt;/execution>
&lt;/executions>
&lt;/plugin>
[/sourcecode]&lt;/p>
&lt;p>&lt;strong>Multiple artifacts in a single dependency&lt;/strong>
When the non-java project produces multiple files with the same extension, you will notice that the trick I just described will not work because you can only specify one file with one extension. This is because maven uses the extension to locate the exact file.&lt;/p>
&lt;p>In order to deploy multiple files, it is best you bundle them in a zip and unpack them at the other end. In the non-java project, add the assembly plugin:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;2,15,17&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;plugin>
&lt;artifactId>maven-assembly-plugin&lt;/artifactId>
&lt;version>2.2-beta-2&lt;/version>
&lt;executions>
&lt;execution>
&lt;id>generate-assembly&lt;/id>
&lt;phase>package&lt;/phase>
&lt;goals>
&lt;goal>single&lt;/goal>
&lt;/goals>
&lt;/execution>
&lt;/executions>
&lt;configuration>
&lt;descriptors>
&lt;descriptor>src/maven/descriptor.xml&lt;/descriptor>
&lt;/descriptors>
&lt;finalName>${artifactId}&lt;/finalName>
&lt;outputDirectory>target&lt;/outputDirectory>
&lt;/configuration>
&lt;/plugin>
[/sourcecode]&lt;/p>
&lt;p>We use so the zipfile will always have the same name in the target directory, which will make build-helper-maven-plugin configuration easier. It also makes it easier for non-maven scripts to find the file. Upon deploying to the repository, maven will fix the filename so don't worry about that too much.&lt;/p>
&lt;p>The contents of src/maven/descriptor.xml can look like this:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;21,22&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]&lt;/p>
&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;p>&lt;assembly xmlns="http://maven.apache.org/POM/4.0.0"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
http://maven.apache.org/xsd/assembly-1.0.0.xsd"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;/p>
&lt;formats>
&lt;format>zip&lt;/format>
&lt;/formats>
&lt;p>&lt;includeBaseDirectory>false&lt;/includeBaseDirectory>&lt;/p>
&lt;fileSets>
&lt;fileSet>
&lt;directory>target/binaries&lt;/directory>
&lt;outputDirectory>&lt;/outputDirectory>
&lt;includes>
&lt;include>*.exe&lt;/include>
&lt;include>*.dll&lt;/include>
&lt;/includes>
&lt;/fileSet>
&lt;/fileSets>
&lt;/assembly>
[/sourcecode]
&lt;p>In the java project, you don't need to change much. Instead of &amp;quot;copy&amp;quot;, you tell the dependency plugin to unzip the file into a directory:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;3,9,16,18&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;plugin>
&lt;groupId>org.apache.maven.plugins&lt;/groupId>
&lt;artifactId>maven-dependency-plugin&lt;/artifactId>
&lt;executions>
&lt;execution>
&lt;id>copy-dependency&lt;/id>
&lt;phase>compile&lt;/phase>
&lt;goals>
&lt;goal>unpack&lt;/goal>
&lt;/goals>
&lt;configuration>
&lt;artifactItems>
&lt;artifactItem>
&lt;groupId>com.rolfje.example&lt;/groupId>
&lt;artifactId>executablestuff&lt;/artifactId>
&lt;type>zip&lt;/type>
&lt;overWrite>true&lt;/overWrite>
&lt;outputDirectory>target/unpacked&lt;/outputDirectory>
&lt;/artifactItem>
&lt;/artifactItems>
&lt;/configuration>
&lt;/execution>
&lt;/executions>
&lt;/plugin>
[/sourcecode]&lt;/p>
&lt;p>&lt;strong>Deploying to a remote repository&lt;/strong>
If the two builds run on two different machines, you may need an external repository. For larger projects, I'd recommend an external, locally managed repository not just for disctribution, but also for speed. Your team will have almost instant access to libraries, speeding up your (initial) builds. Installing a local &lt;a href="http://www.jfrog.com/home/v_artifactory_opensource_overview">jFrog Artifactory&lt;/a> is a good choice.&lt;/p>
&lt;p>To make deployment to this external repository work, you need to add the following to your non-java pom file:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;distributionManagement>&lt;/p>
&lt;!-- final releases will be deployed to this repository -->
&lt;repository>
&lt;id>artifactory.releases&lt;/id>
&lt;name>Artifactory releases&lt;/name>
&lt;url>http://myartifactory.example.com/artifactory/libs-release-local&lt;/url>
&lt;/repository>
&lt;!-- snapshot releases will be deployed to this repository -->
&lt;snapshotRepository>
&lt;id>artifactory.snapshots&lt;/id>
&lt;name>Artifactory snapshots&lt;/name>
&lt;url>http://myartifactory.example.com/artifactory/libs-snapshots-local&lt;/url>
&lt;/snapshotRepository>
&lt;/distributionManagement>
[/sourcecode]
&lt;p>If you get an error like:&lt;/p>
&lt;blockquote>Error deploying artifact: Failed to transfer file: ://myartifactory.example.com/artifactory/libs-snapshots-local/com.rolfje.example/1.0-SNAPSHOT/executablestuff-1.0-20130604.103146-1.pom. Return code is: 401&lt;/blockquote>
&lt;p>Your artifactory is probably not configured to do anonymous deployments. Make sure you can access the artifactory with a userid and password, and add those to the ~/.m2/settings.xml of the machine which will deploy the binary artifacts.&lt;/p>
&lt;p>I advise to use a special &amp;quot;deployment user&amp;quot; to do this, so you can share this configuration between builds and not depend on a user changig his password. The correct way to store a password for the Artifactory is &lt;a href="http://wiki.jfrog.org/confluence/display/RTF20/Using+Secured+Passwords+in+Settings.xml">explained here&lt;/a>.  Using the DESede encrypted password on your Artifactory profile page, the maven settings.xml file of the buildserver user can look like this:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;settings>
&lt;server>
&lt;id>artifactory.releases&lt;/id>
&lt;username>your-repository-username&lt;/username>
&lt;password>{DESede}kIniw826kaluA1OPa865A==&lt;/password>
&lt;/server>
&lt;server>
&lt;id>artifactory.snapshots&lt;/id>
&lt;username>your-repository-username&lt;/username>
&lt;password>{DESede}kIniw826kaluA1OPa865A==&lt;/password>
&lt;/server>
&lt;/settings>
[/sourcecode]&lt;/p>
&lt;p>And then, of course, you need your java project to know where to download the dependencies so add this to the pom.xml file in your binary project:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; autolinks=&amp;quot;false&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
&lt;repositories>
&lt;repository>
&lt;id>central&lt;/id>
&lt;url>&lt;a href="http://myartifactory.example.com/repo">http://myartifactory.example.com/repo&lt;/a>&lt;/url>
&lt;releases>
&lt;enabled>true&lt;/enabled>
&lt;checksumPolicy>fail&lt;/checksumPolicy>
&lt;/releases>
&lt;snapshots>
&lt;enabled>true&lt;/enabled>
&lt;checksumPolicy>fail&lt;/checksumPolicy>
&lt;/snapshots>
&lt;/repository>
&lt;/repositories>
[/sourcecode]&lt;/p>
&lt;p>If you've reached the end of this blogpost without problems, you should now be able to build your binaries, have them uploaded with correct versions to your external repository, and your Maven/Java build server will download the correct versions of these dependencies at build time. Switching back and forth between tags on your Java project will automatically fetch the correct versions of the binaries, the same way as it does for your jar dependencies.&lt;/p>
&lt;p>Happy coding!&lt;/p></description></item><item><title>Why you should not use SOAP Headers</title><link>https://realrolfje.github.io/rolfje.com/2012/12/24/why-you-should-not-use-soap-headers/</link><pubDate>Mon, 24 Dec 2012 18:52:30 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2012/12/24/why-you-should-not-use-soap-headers/</guid><description>
&lt;p>&lt;img src="container1.png" alt="container">&lt;/p>
&lt;p>In the project I am working on right now we use apache XCF and Spring to provide a SOAP service to our customers. As part of the messages, there is a userid/password combo telling the application which user sent the request. I struggled with that today because I think that userid/password info should actually be in the SOAP Header, cleaning up my API, enable me to implement different authentication techniques in the future and generally be more &amp;quot;compliant&amp;quot; to the SOAP standard. Boy was I wrong.&lt;/p>
&lt;!-- more -->First I needed to figure out how to get the userid/password info into the Header. Apache has [some information](https://cxf.apache.org/docs/ws-security.html) on this which is supposed to be "very good" according to the web but I had quite a bit of trouble because it misses quite a bit of context.
&lt;p>At first, it took me ages to find out that I need to add this to my maven pom.xml file to actually &amp;quot;get&amp;quot; the security stuff onto my classpath:&lt;/p>
&lt;p>[sourcecode type=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]
&lt;dependency>
&lt;groupId>org.apache.cxf&lt;/groupId>
&lt;artifactId>cxf-rt-ws-security&lt;/artifactId>
&lt;version>2.5.1&lt;/version>
&lt;/dependency>
[/sourcecode]&lt;/p>
&lt;p>I could find NO tutorial online telling me this, so I guess I saved you a good 20 minutes of searching right there.&lt;/p>
&lt;p>Then, I needed to change the Spring configuration to &lt;a href="http://www.benmccann.com/dev-blog/apache-cxf-tutorial-ws-security-with-spring/">include the mysterious &amp;quot;WSS4JInInterceptor&amp;quot;&lt;/a> of which nobody understands what it does because it is an overdesigned elephant which implements obscure standards nobody seems to be using:&lt;/p>
&lt;p>[sourcecode type=&amp;quot;xml&amp;quot; gutter=&amp;quot;false&amp;quot;]
&amp;lt;jaxws:endpoint id=&amp;quot;myCoolSOAPService&amp;quot; implementor=&amp;quot;#myCoolService&amp;quot; address=&amp;quot;/mycoolservice&amp;quot;&amp;gt;
&lt;a href="jaxws:inInterceptors">jaxws:inInterceptors&lt;/a>
&lt;ref bean="wss4jinterceptor"/>
&amp;lt;/jaxws:inInterceptors&amp;gt;
&amp;lt;/jaxws:endpoint&amp;gt;&lt;/p>
&lt;bean id="wss4jinterceptor" class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor">
&lt;constructor-arg>
&lt;map>
&lt;entry key="action" value="UsernameToken" />
&lt;entry key="passwordType" value="PasswordDigest" />
&lt;entry key="passwordCallbackRef">
&lt;ref bean="myPasswordCallback" />
&lt;/entry>
&lt;/map>
&lt;/constructor-arg>
&lt;/bean>
[/sourcecode]
&lt;p>As you can see, the WSS4JInterceptor is configured to accept Usernames and passwords (albeit in deeply, convoluted nested elements adding humongous amounts of XML bloat to your Header).&lt;/p>
&lt;p>To be able to take the userid/password combo I dutifully started writing my password handler:&lt;/p>
&lt;p>[sourcecode type=&amp;quot;java&amp;quot; gutter=&amp;quot;false&amp;quot;]
public class UseridPasswordCallback implements CallbackHandler {&lt;/p>
&lt;pre>&lt;code> @Override
public void handle(Callback[] arg0)
throws IOException, UnsupportedCallbackException {
// Not implemented yet
}
&lt;/code>&lt;/pre>
&lt;p>}
[/sourcecode]&lt;/p>
&lt;p>You can see that my handle(Callback) method is not implemented. And there is a good reason for that.&lt;/p>
&lt;p>Just before implementing all the code, I checked the wiring of all this stuff. The application started up beautifully, and I pointed SOAPUI to the WSDL to generate some example requests. To my horror, SOAPUI did not generate example headers. For some reason, the whole CXF stack just &amp;quot;forgets&amp;quot; to put that info in the WSDL, or maybe the specs don't leave room to have that information in the WSDL, I don't know.&lt;/p>
&lt;p>So I set out to see how to build that Soap Security header. It was nuts. Not only did I need to figure this out from crude and incomplete examples, reverse engineer xsd's, and hand-craft it into the SOAPUI messages, I also had to deal with the awful error messages that gave me &amp;quot;Could not read XMReader&amp;quot; and the very helpful &amp;quot;ns1:InvalidSecurity&amp;quot;.&lt;/p>
&lt;p>After an afternoon of absolute madness on something that should actually be infinitesimally simple, I gave up. I added the userid/password back into the functional calls (as part of my method signatures). And for a couple of very good reasons:&lt;/p>
&lt;pre>&lt;code> 1. The first an most important one: If I as a developer have this much trouble wading to the poorly documented, underutilized, astrophysics-level complexity just to add a freakin' userid/password field to a SOAP message, how can I expect my users to ever accomplish this without rage-calling our helpline every 4 seconds?
2. By making the fields part of the API, they become part of the WSDL, which immediately makes it clear what to add and where. SOAPUI even generates nice placeholders for it.
3. I added an Aspect with an around advice intercepting the userid/password combo, use it to authenticate the user and immediately remove the password from memory. Simple, readable, effective and easily debuggable for any developer on the project.
4. The pom.xml and the Spring configuration immediately become much simpler and gets rid of a few idiot acronyms in the process.
&lt;/code>&lt;/pre>
&lt;p>So there. Want to do SOAP Security as it was intended? Do yourself and your customers a favor: Don't.&lt;/p>
&lt;p> &lt;/p></description></item><item><title>Make your buildserver talk</title><link>https://realrolfje.github.io/rolfje.com/2012/12/16/make-your-buildserver-talk/</link><pubDate>Sun, 16 Dec 2012 16:52:50 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2012/12/16/make-your-buildserver-talk/</guid><description>
&lt;p>&lt;img src="jenkins-bla.png" alt="Jenkins talking">
Have you ever started a shell script which takes a while and you keep monitoring that window because you really need those results? If you are working on a Mac, you can use the Mac's power of speech to tell you a command is finished. Here's how:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;bash&amp;quot; gutter=&amp;quot;false&amp;quot;]
./yourreallyslowbuild.sh; say &amp;quot;really long build is finished&amp;quot;
[/sourcecode]&lt;/p>
&lt;p>With a little curl and shell scripting magic, I told my Mac to constantly monitor our Jenkins buildserver, and bug everybody in the office when the hourly build is failing:&lt;/p>
&lt;!-- more -->
&lt;p>[sourcecode language=&amp;quot;bash&amp;quot; gutter=&amp;quot;false&amp;quot;]
#!/bin/sh&lt;/p>
&lt;h1 id="configuration">Configuration&lt;/h1>
&lt;p>jenkinsurl=http://my.jenkins.server/jenkins
voice=Vicki&lt;/p>
&lt;h1 id="the-function-that-does-the-trick">The function that does the trick&lt;/h1>
&lt;p>fnReportFailure() {
job=${1}
message=${2}
result=&lt;code>curl -s \ ${jenkinsurl}/job/${job}/lastBuild/api/xml?xpath=/*/result/text()&lt;/code>&lt;/p>
&lt;p>if  [ &amp;quot;${result}&amp;quot; == &amp;quot;XPath /*/result didn't match&amp;quot; ] &lt;br>
|| [ &amp;quot;${result}&amp;quot; == &amp;quot;ABORTED&amp;quot; ]; then
# ignore aborted or in-progress build. Ignore.
return 0
elif [ &amp;quot;${result}&amp;quot; != &amp;quot;SUCCESS&amp;quot; ]; then
echo &lt;code>date&lt;/code> ${job} : ${result}
say -v &amp;quot;${voice}&amp;quot; &amp;quot;${message}&amp;quot;
fi
}&lt;/p>
&lt;h1 id="loop-over-all-projects-and-shout-out-problems">Loop over all projects and shout out problems&lt;/h1>
&lt;p>clear
echo
echo &amp;quot;Monitoring ${jenkinsurl}&amp;quot;
echo
printf &amp;quot;===== &amp;quot;&lt;/p>
&lt;p>while [ true ]; do&lt;/p>
&lt;h1 id="add-as-many-jobs-as-you-want-here">Add as many jobs as you want here:&lt;/h1>
&lt;p>fnReportFailure &amp;quot;hourly_java_job&amp;quot; &amp;quot;The hourly java job is unstable.&amp;quot;
fnReportFailure &amp;quot;hourly_deploy_job&amp;quot; &amp;quot;The hourly deploy failed.&amp;quot;&lt;/p>
&lt;h1 id="tell-the-time-and-sleep-a-little">Tell the time and sleep a little&lt;/h1>
&lt;p>now=&lt;code>date +%H:%M:%S&lt;/code>
printf &amp;quot;\b\b\b\b\b\b\b\b\b${now} &amp;quot;
sleep 60
done
[/sourcecode]&lt;/p>
&lt;p>This script talks with the &amp;quot;Vicky&amp;quot; voice, because I let &amp;quot;Alex&amp;quot; read my iChat messages to me. Of course, the &amp;quot;Bad News&amp;quot; and &amp;quot;Zarvox&amp;quot; voices may be even more &amp;quot;motivating&amp;quot; to quickly fix the build. Now go and keep your eyes on youtube... err I mean your code.&lt;/p>
&lt;p>Enjoy.&lt;/p></description></item><item><title>Why developers are never on time</title><link>https://realrolfje.github.io/rolfje.com/2012/06/28/why-developers-are-never-on-time/</link><pubDate>Wed, 27 Jun 2012 22:14:34 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2012/06/28/why-developers-are-never-on-time/</guid><description>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Daylight_saving_time">&lt;img src="alarmclock.jpg" alt="">
&lt;/a>If you have worked in IT as long as I do, you probably have noticed that developers have a tendency to not be on time. They are late for meetings, late for lunch, and on other days they are in at 6am or (and) they work until 3am the next morning. If you ever wondered why this is, I might have some answers for you.&lt;/p>
&lt;p>You might also find this post interesting if you are trying to figure out why you can't get your time zones working in MySQL.&lt;/p>
&lt;!-- more -->Today, a customer complained that my use of unix timestamps was unacceptable because it supposedly is not an exact representation of a single point in time. He concluded that after some research he did in the MySQL documentation, and quoted [this text](http://dev.mysql.com/doc/refman/5.5/en/date-and-time-functions.html#function_unix-timestamp) :
&lt;p>&lt;a href="screen-shot-2012-06-27-at-10-22-18-pm.png">&lt;img src="screen-shot-2012-06-27-at-10-22-18-pm.png" alt="Image">
&lt;/a>&lt;/p>
&lt;p>It says that converting a Date/Time to a Unix timestamp is lossy &lt;em>&amp;quot;due to conventions for local time zone changes&amp;quot;&lt;/em>. I am very curious as to what &lt;em>&amp;quot;conventions&amp;quot;&lt;/em> MySQL is referring to in an attempt to hide their buggy time zone implementation.&lt;/p>
&lt;p>The example in the MySQL documentation shows how the following two statements result in exactly the same Unix timestamp:&lt;/p>
&lt;p>&lt;code>SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00'); SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00'); &lt;/code>
If you have worked with Dates and Times for international customers before, you will immediately notice that these two examples are lacking a crucial part, namely the time zone component. In these two cases, MySQL will &amp;quot;guess&amp;quot; the correct time zone for you. Both timestamps represent the crossover between winter- and &lt;a href="https://en.wikipedia.org/wiki/European_Summer_Time">summer time&lt;/a>, depending on what time zone you put behind them (02:00 CEST = 03:00 CET). Apparently the MySQL algorithm for figuring out the &amp;quot;correct&amp;quot; time zone makes a pretty awful guess here.&lt;/p>
&lt;p>To be able for the client to query the database directly, I needed to come up with a solution. I did some research and found out that the MySQL development team, in their infinite wisdom, chose to not install time zone support by default in MySQL. They also decided that any date/time function you use not so much as peeps about missing time zone support. I will not start a rant on how wrong either of those is. No I will not. Will. Not... Must... not......&lt;/p>
&lt;p>&lt;strong>Solving the MySQL time zone problem.&lt;/strong>
When you connect to a MySQL instance, it is easy to check if the administrator has installed time zone support. Execute the following query:&lt;/p>
&lt;p>&lt;code>SELECT CONVERT_TZ('2004-01-01 12:00:00','GMT','MET');&lt;/code>&lt;/p>
&lt;p>If this query returns the very informative &amp;quot;null&amp;quot;, then time zone support is not installed on your server. Go to the server (or ask your administrator to do this) and execute the &lt;a href="http://dev.mysql.com/doc/refman/5.5/en/mysql-tzinfo-to-sql.html">following commands&lt;/a>:&lt;/p>
&lt;p>&lt;code>$ cd /usr/local/mysql/bin $ ./mysql_tzinfo_to_sql /usr/share/zoneinfo | \ mysql -u root mysql -p &lt;/code>
It will give you some useless warnings about unsupported time zones. They should have put that effort in warning us when we try to use time zones. (oops I did it again.. must... not...).&lt;/p>
&lt;p>(Tested on MySQL 5.5 on Mac OSX as well as MySQL 5.5 on CentOS Linux)&lt;/p>
&lt;p>If everything went smoothly, you should now be able to do a time zone conversion with the convert_tz() function. We need time zone support to be able to tell MySQL that our session will now use the GMT time zone. We choose this because Unix Time Stamps are (milli)seconds since 1970-1-1 00:00 &lt;strong>GMT&lt;/strong>. Also, MySQL can not correctly tell the difference between CET and CEST so we steer clear of any summer/wintertime problems it has.&lt;/p>
&lt;p>We can try our unix_timestamp conversion again:&lt;/p>
&lt;p>&lt;code>set time_zone='GMT'; SELECT @@session.time_zone; SELECT UNIX_TIMESTAMP('2005-03-27 03:00:00'); SELECT UNIX_TIMESTAMP('2005-03-27 02:00:00'); &lt;/code>
The first statements sets the time zone, and the second shows your time zone setting. If this does not say &amp;quot;GMT&amp;quot; then either you made a typo or time zone support is not enabled but MySQL &amp;quot;forgot&amp;quot; to tell you (oh dear, doing it again, am I?). The last two statements should return different Unix Time Stamps, and you should be able to convert back from those into the correct readable (but missing time zone information) timestamps again.&lt;/p>
&lt;p>So the whole problem comes down to MySQL &amp;quot;silently failing&amp;quot; when you use time zones it does not &amp;quot;understand&amp;quot;, and the consistent lack of time zones in the date/time representations, both in the application and in the documentation.&lt;/p>
&lt;p>It seems that a lot of developers on this world still have a hard time grasping that &amp;quot;yyyy-mm-dd HH:MM:ss&amp;quot; is never an exact representation of a point in time without a time zone component. Show me a date/time without a time zone and I show you software with time conversion bugs.&lt;/p>
&lt;p>In our software, we do all date and time conversions ourselves, and store them as Unix Timestamps in in the database as a Long. This way no driver, client or server database will be able to do &amp;quot;smart&amp;quot; conversions for us. It helped us develop applications for customers in over 12 countries, spanning a multitude of time zones. The MySQL handling of time zones has reinforced my belief that this is the only way to have total control over dates and times.&lt;/p></description></item><item><title>Distributed jMeter through VPN and SSL</title><link>https://realrolfje.github.io/rolfje.com/2012/02/16/distributed-jmeter-through-vpn-and-ssl/</link><pubDate>Thu, 16 Feb 2012 21:49:49 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2012/02/16/distributed-jmeter-through-vpn-and-ssl/</guid><description>
&lt;p>&lt;a href="http://knowyourmeme.com/memes/lolgraphs">&lt;img src="a-graph.png" alt="">
&lt;/a>This week I created a jMeter test setup for distributed testing. I thought it would be straight forward but I ran into some interesting things you might want to know if you are considering distributed testing using jMeter.&lt;/p>
&lt;p>In my case, I had to test an application which was inside our corporate network, while working from home through a VPN and a firewall. Normally that is no problem, but jMeter has this funny construction where the slave (jMeter server) wants to connect back to the master (jMeter gui). It took some fiddling with iptables, the jMeter configuration and ssh tunneling to get it to work. Here's my setup:&lt;/p>
&lt;!-- more -->
&lt;p>&lt;a href="network-setup.png">&lt;img src="network-setup.png" alt="">
&lt;/a>&lt;/p>
&lt;p>Getting this all to behave nicely wasn't trivial. All the information can be found, but it took me quite some time to piece it all together. If your setup looks like the one above, or if your setup involves having your jMeter master machine on a different subnet and/or behind a firewall, here's what you need to do.&lt;/p>
&lt;p>&lt;strong>Step 1: Configuring the slaves&lt;/strong>
In most jMeter setups, the slaves are Linux machines (any flavor will do, mine are redhat). Create a &amp;quot;jmeter&amp;quot; user on each of the machines so that you don't have to run the jMeter process as a root user.&lt;/p>
&lt;pre>&lt;code> 1. [Download jmeter](http://jmeter.apache.org/download_jmeter.cgi) as a zip file and unzip it on each of the jMeter slave machines. At the time of this writing I am using jMeter 2.6. Make sure that the files in the bin directory are executable with
chmod +x *.sh jmeter jmeter-server
2. On the first machine, edit the jmeter.properties file in the /bin folder of the unpacked jMeter installation and uncomment the line containing the server.rmi.localport setting. I changed mine to read:
server.rmi.localport=50000
3. Save the jmeter.properties file and copy it over to all the other machines (in the correct location).
4. As &amp;quot;root&amp;quot; user, edit the iptables configuration in /etc/sysconfig/iptables and add the following lines, just above the first &amp;quot;REJECT&amp;quot; line (the order is important here):
# Start jmeter ports
-A RH-Firewall-1-INPUT -p udp -m udp --dport 1099 -j ACCEPT
-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 1099 -j ACCEPT
-A RH-Firewall-1-INPUT -p udp -m udp --dport 50000 -j ACCEPT
-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 50000 -j ACCEPT
# End jmeter ports
5. Save the file and while still being root, restart iptables with
service iptables restart
&lt;/code>&lt;/pre>
&lt;p>This covers the work you need to do on the slaves. To test your setup, start the &amp;quot;jmeter-server&amp;quot; application on one of the slaves. Note the address and port the server reports listening to:&lt;/p>
&lt;pre>&lt;code>Created remote object: UnicastServerRef [liveRef: 
[endpoint:[&amp;lt;span style=&amp;quot;color:#993300;&amp;quot;&amp;gt;10.91.10.11:50000&amp;lt;/span&amp;gt;](local),
objID:[-24679ca9:13581440206:-7fff, -1472515273052223306]]]
&lt;/code>&lt;/pre>
&lt;p>From another slave, you can see if the iptables configuration works by telnetting to this slave on port 50000. You'll get connected to the jmeter-server process. Use Ctrl-] to exit telnet (there is nothing useful you could type here). If you get a &amp;quot;Connection refused&amp;quot;, your iptables configuration is not working. Check your steps again.&lt;/p>
&lt;p>For now, stop any running jMeter processes on the slaves.&lt;/p>
&lt;p>&lt;strong>Step 2: Configuring the master&lt;/strong>
The master is the system where your jMeter GUI will be running, and it is the system that tells the slaves what to do, and where to deliver their results. In order for the master to do that, it needs to be reachable by the slaves. In the network picture above you see a pesky firewall and a VPN server with mis-matching addresses. In order to make this work we're going to tell the master to listen at a fixed port for the slaves, and then do reverse port forwarding to the slaves so they can deliver content to a local port. Here's how:&lt;/p>
&lt;pre>&lt;code> 1. Take the same zipfile you used for the slaves. and unpack it on your master machine. In my case, this is a Macbook, running OSX 10.7.2
2. Edit the jmeter.properties file in the bin folder and list the ip addresses of the jMeter slaves in the remote_hosts property (remove the 127.0.0.1 address) so that it looks like:
remote_hosts=10.91.10.10,10.91.10.11,10.91.10.12,10.91.10.13
&lt;/code>&lt;/pre>
&lt;p>Then look for the client.rmi.localport line and change that into:&lt;/p>
&lt;pre>&lt;code>client.rmi.localport=51000
&lt;/code>&lt;/pre>
&lt;p>This is all the configuration you need to do on the master. The trick is in starting it all up, read on.&lt;/p>
&lt;p>&lt;strong>Step 3: Starting your tests&lt;/strong>
Now that your infrastructure is in place, let's put it to the test. First, from your jMeter master machine, connect to each of the machines using SSH, and setup a reverse tunnel to port 51000 on your master, like so:&lt;/p>
&lt;pre>&lt;code>ssh -R 51000:localhost:51000 jmeter@10.91.10.11
&lt;/code>&lt;/pre>
&lt;p>Keep each of these sessions open, as the jMeter slave needs to be able to deliver it's test results to your jMeter master. On your master machine, open a command prompt and type the following:&lt;/p>
&lt;pre>&lt;code>export JVM_ARGS=&amp;quot;-Djava.rmi.server.hostname=localhost&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>By doing this, jMeter will tell the slaves to connect to &amp;quot;localhost:51000&amp;quot; for delivering their results. This of course ends up being tunneled back to your jMeter master machine.&lt;/p>
&lt;p>Then, on the master start jmeter.sh, load up your test script and use the &amp;quot;Run&amp;quot; Menu to run the script on one slave, or all slaves together. Remember that the master pushes your test script to each slave and tells it to run it. So if you have a script with a thread group running 10 threads, each slave will do 10 threads, resulting in 40 threads hitting your application.&lt;/p>
&lt;p>&lt;strong>Tips and Tricks&lt;/strong>
During this whole adventure I collected a few handy tips:&lt;/p>
&lt;pre>&lt;code> * Document the whole setup, cookbook style, and put that document in an easy to find spot. There will be a time you have to pass this on to a colleague, and it will help a great deal if he can pick up your document and hit the ground running.
* Put as much of the command line stuff you see above in scripts. In my setup, I have a &amp;quot;connect-slave.sh&amp;quot; script which contains the reverse tunnel trick, a &amp;quot;start-master.sh&amp;quot; which starts the jMeter master with the correct JVM arguments, and a &amp;quot;start-slave.sh&amp;quot; script which starts the slave with a bit more memory. Each slave has 2GB of heap, because I added the following line to the script:
export JVM_ARGS=&amp;quot;-Xmx2028m&amp;quot;
* As much as you need to pay attention to the performance of your application, also make sure that your test script is lean and mean. Some listeners are very expensive to use. The &amp;quot;View Results Tree&amp;quot; and &amp;quot;View Results in Table&amp;quot; are very memory intensive. Great for debugging a single thread, you'll quickly run out of memory for 100 Threads or longer tests. Once you've got your scripts working, disable as much of the listeners as possible.
* jMeter debugging is fidgety. When debugging your script, always do 1 thread and 1 iteration on 1 server. Once that works, you can scale up (don't forget to disable the &amp;quot;View Results Tree&amp;quot; listeners, see above).
* jMeter quickly runs out of memory. Increase the default heap sizes of the master and the slaves by using the [-Xmx JVM option](http://docs.oracle.com/javase/1.4.2/docs/tooldocs/windows/java.html).
&lt;/code>&lt;/pre>
&lt;p>Happy Testing!&lt;/p></description></item><item><title>Having fun at J-Fall 2011</title><link>https://realrolfje.github.io/rolfje.com/2011/11/03/having-fun-at-j-fall-2011/</link><pubDate>Wed, 02 Nov 2011 22:09:14 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2011/11/03/having-fun-at-j-fall-2011/</guid><description>
&lt;p>&lt;a href="img_2973-small.jpg">&lt;img src="img_2973-small.jpg?w=150" alt="J-Fall 2011">
&lt;/a>This year's Dutch Java Nerd event called &lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/">J-Fall&lt;/a> was held in Nijkerk, in a beautiful location called &lt;a href="http://www.regardz.nl/locaties/event-centers/regardz-hart-van-holland-nijkerk.aspx?gclid=CK7bg8zwmKwCFUMm3godUFpdPQ">&amp;quot;Hart van Holland&amp;quot;&lt;/a> . With plenty of sessions by speakers from all over the world it promised to be a great day for Java enthusiasts, at a great location for meeting friends and colleagues. I took a day off from work and it was well worth it.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00024/">&lt;!-- more -->Opening by Bert Ertman&lt;/a>&lt;/strong>
Bert starts the day by welcoming the 1000+ attendees in the main presentation room in &amp;quot;Hart van Holland&amp;quot;. After explaining what the day is going to bring and where to find rooms, food, drinks, and company booths, he goes on to tell how they tried to get better network coverage. All these nerds with their smartphones in one single place is asking for trouble. It turns out it's too expensive to get good data network so they didn't do that. Network connections proved to be spotty at best in the main building, but I had good 3G coverage outside the main building.&lt;/p>
&lt;p>The organizer of &lt;a href="http://www.devoxx.com/display/DV11/Home">Devoxx&lt;/a> came by to say hi, and also told us that the J-Fall presentations are being professionally captured and the most popular ones are going to be online soon at &lt;a href="http://www.parleys.com/">parleys.com&lt;/a>. He closed off with the hilarious &lt;a href="http://www.youtube.com/watch?v=b-Cr0EWwaTk">&amp;quot;Java Life&amp;quot; Rap Music Video&lt;/a> . By the way if you liked that, you certainly will like the &lt;a href="http://www.youtube.com/watch?v=2UFc1pr2yUU">&amp;quot;Whole foods Parking Lot&amp;quot; video&lt;/a>.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00025/">Java 7 Directors Cut&lt;/a>&lt;/strong>
After the cool opening and videos the whole room was ready for some kick-ass sessions. Tomas Nilsson said that he would have a hard time topping the Java Life music video. And he did. Opening with a laughable slide containing a full page mandatory disclaimer text, the presentation was a terrible erratic drive through his very personal memory lane, and after 15 minutes he lost about 80% of the audience. I had absolutely no idea what point he was trying to make, and why nobody advised him to revise his presentation after he gave the same talk at JavaOne. The good thing was that because of the spotty network coverage, not all tweets during this presentation reached the twitter servers, and &lt;a href="http://twitter.com/#!/search/%23jfall">#jfall&lt;/a> was not trending.&lt;/p>
&lt;p>During the small coffee break we gather around to see what sessions each of us want to join. Scanning the company booths in the main lobby learns that the world didn't change: Booths luring you with pens, mints, stickers, iPads and nice ladies in the booth who are almost always never representing the companies' people or culture. I did score some nice ball pens though :-)&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00071/">Building Highly Scalable Java Applications on Windows Azure&lt;/a>&lt;/strong>
Microsoft being a big sponsor of this year's J-Fall, they have to have a keynote. And so they did. And it was a good one. Certainly after the below par presentation skills of Oracle, Microsoft has a nicely polished slides and a demo of Azure, a good story and good pace. During the demo the DNS switching is a bit slow and prevents some things to be shown. At the end of the talk, the speaker confidently retries and it now works. This results in a well-deserved warm applause from the audience. &lt;a href="http://twitter.com/#!/doortje123/status/131721454352998400">Well done Microsoft&lt;/a>.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00050/">The Java EE7 Platform: Developing for the Cloud&lt;/a>&lt;/strong>
With &amp;quot;Cloud&amp;quot; being the new buzzword nowadays, &lt;a href="http://www.java.net/blogs/arungupta/">Arun Gupta&lt;/a> did a keynote on where Java 7 is going, and how applications would fit in this cloud structure. I never heard the term &amp;quot;tenants&amp;quot; being used in this respect, which was interesting. The whole talk was a bit erratic, and after Java EE 6 fixing all the EJB gripes of EJB 3, I couldn't help but feeling that all these &amp;quot;enterprisey&amp;quot; terms are re-introduced in Java 7. The whole idea that you build an application but other people configure the actual building blocks that your application will be instantiated with, is a proven failure to me. Administrators don't have developer knowledge. Changing configuration of key components in your application will severely break it.&lt;/p>
&lt;p>I came out of this session not feeling to hot about Java 7 and the whole components-in-the cloud and people renting instances idea. Too many roles, academic, over engineered, very Sun Enterprise EJB 2 feeling.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00066/">Don't call us - we'll push&lt;/a>&lt;/strong>
A colleague advised be to go see &lt;a href="http://technology.amis.nl/blog/author/lucas">Lucas Jellema&lt;/a>. Lucas was the first speaker of the day who actually seemed to know what he was doing on stage. Although his slides were a bit crowded, he had a good story with many demos. It was a welcome change after Tomas and Arun, although Lucas didn't have any real new stuff. Polling, long-polls, asynchronus AJAX calls and the old request/response problem in http, and database triggers firing Java programs. Except for &lt;a href="http://en.wikipedia.org/wiki/WebSocket">Web Sockets&lt;/a> there was nothing new but nice to be reminded how these things actually work.&lt;/p>
&lt;p>After Lucas' talk we went to get our complimentary lunch. Because we were relatively early, we had no problems getting the lunch package, and enjoyed our tasty sandwiches, milk, apples and Mars. Another free coffee and we're recharged and ready for the afternoon sessions.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00053/">Migrating Spring to Java EE 6&lt;/a>&lt;/strong>
&lt;a href="http://www.linkedin.com/in/paulb01">Paul Bakker&lt;/a> &lt;a href="img_2974-small.jpg">&lt;img src="img_2974-small.jpg?w=150" alt="">
&lt;/a>had clearly prepared his slides well, and insisted in giving his talk in English because it would be recorded. I thought this was a nice touch (in case you haven't noticed, I have this idea that everything you want to share with technical people should be in English). Paul explained the tactics to use when converting a Spring application to Java EE 6. Where to start, and how to keep your code compiling while doing the conversion.&lt;/p>
&lt;p>I have worked on some large projects and although Paul mentions that some parts of the conversion will take a bit more time than others, I am not looking forward to convert my current 250+ thousand lines of code to Java EE 6 just yet. A plain Spring application may be easy, but as soon as you have Spring AOP, interesting Proxy beans and Custom Factory beans, you'd have to rewrite that code in Java EE6, which could take quite some time.&lt;/p>
&lt;p>I predict converting to Java EE 6 will be much more expensive than upgrading to the next version of Spring for most serious enterprise level applications. I have a home project I'd try to convert first, maybe more on that later on this blog, who knows.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00056/">Extreme performance with the Disruptor&lt;/a>&lt;/strong>
Although the title and the talk description in the schedule didn't hint too much about it, this talk was 100% about Queues. After some high level talk about Producers, Consumers and Queues, &lt;a href="http://blog.dutchworks.nl/author/allard/">Allard Buijze&lt;/a> drops a bomb and introduces some circle and the name &amp;quot;Disruptor&amp;quot;, without introduction. After a few slides everybody understands that this is some kind of &amp;quot;Circular Queue&amp;quot;.&lt;/p>
&lt;p>We had a bit of a laugh when Allard uses 4 slides to explain about dirty cache line reads at CPU level and how the &lt;a href="http://code.google.com/p/disruptor/">Disruptor&lt;/a> prevents all that, which he then dismisses with &amp;quot;but that doesn't help much&amp;quot;.&lt;/p>
&lt;p>The talk was entertaining and what I got from it is that the main reason why the &amp;quot;Disruptor&amp;quot; works faster than regular Queues, is that Producers and Consumers can inform each other about their position in the queue, which prevents Queue polling. I can't help but think that this can be done with regular Queue implementations as well, so maybe I missed something here.&lt;/p>
&lt;p>&lt;strong>&lt;a href="http://www.nljug.org/pages/events/content/jfall_2011/sessions/00058/">Java Tuning Puzzlers&lt;/a>&lt;/strong>
For the final session for today most of us decided to go to &amp;quot;Java Tuning Puzzlers&amp;quot;, because it looked like fun. And it was. The presentation by &lt;a href="http://twitter.com/#!/kjkoster">Kees Jan Koster&lt;/a> and &lt;a href="http://twitter.com/#!/jpinpointcom">Jeroen Borgers&lt;/a> was fast, funny, interactive, hands-on and very refreshing. They showed some real-life performance problems they encountered in their work, and asked the audience to solve them. All Java nerds lit up and started shouting answers and funny remarks. Jeroen and particularly Kees Jan were very good in answering questions and snarky comments from the audience.&lt;/p>
&lt;p>As the talk went into overtime and the organization was trying to cut it short, Jeroen and Kees Jan asked the audience &amp;quot;are we going to get beer, or are we going to finish this?&amp;quot;. The whole audience shouted &amp;quot;Finish it!&amp;quot; and we finished the last Puzzler.&lt;/p>
&lt;p>No fancy new frameworks, no buzzword bingo, just plain old dry-coding and a plug for one of my favorite tools, findbugs &lt;a href="http://findbugs.sourceforge.net/">http://findbugs.sourceforge.net/&lt;/a> . It was the best session I had all day, and I actually went back to Kees Jan and Jeroen to compliment them with their awesome talk.&lt;/p>
&lt;p>&lt;strong>Conclusion&lt;/strong>
I might sound a bit critical here and there, but I had a great day. Being amongst fellow-nerds, talking tech talk, sharing funny stories, listening to interesting new developments and hearing other people's views on things was really refreshing. Next thing on my list: Try to get Kees Jan Koster to do at least one big main-track keynote at J-Spring or J-Fall next year, about any subject. Because he will at least keep the audience awake.&lt;/p>
&lt;p>Thanks Bert and all of the NLJug people and sponsors who made this possible. See you all at J-Spring!&lt;/p>
&lt;p>&lt;a href="img_2978-small.jpg">&lt;img src="img_2978-small.jpg" alt="Oracle J-Fall flowers">
&lt;/a>&lt;/p></description></item><item><title>Add some magic to Eclipse</title><link>https://realrolfje.github.io/rolfje.com/2011/07/30/add-some-magic-to-eclipse/</link><pubDate>Sat, 30 Jul 2011 18:40:24 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2011/07/30/add-some-magic-to-eclipse/</guid><description>
&lt;p>&lt;a href="http://nl.toonpool.com/gallery.php?user=406">&lt;img src="harry_potter_31795.jpg" alt="Templatus Expandum!">
&lt;/a>The top feature of the eclipse IDE is the very impressive refactoring possibilities. It makes code feel like play-doh, allowing you to knead it in any shape way or form you think fits the current situation. A close second to that is the impressive templates and code assist. Yes, Java is verbose, but I think 80% of the characters which make up a Java program was never actually typed. All the readability without the labour, brought to you by eclipse's powerful templates.&lt;/p>
&lt;p>What many people don't realize is that you can easily add to this magic by creating your own templates. One of the first templates I always add to the environment is the one which adds a private static final log4j logger. I thought it would be great example to share with you.&lt;/p>
&lt;!-- more -->
&lt;p>[sourcecode language=&amp;quot;java&amp;quot; gutter=&amp;quot;false&amp;quot;]
${imp:import(org.apache.log4j.Logger)}
private static final Logger LOG = Logger.getLogger(${enclosing_type}.class);
[/sourcecode]&lt;/p>
&lt;p>You can add and change existing templates in Eclipse -&amp;gt; Preferences -&amp;gt; Java -&amp;gt; Editor -&amp;gt; Templates. There are other great examples when you scroll through the list, and you can export the templates to a file in your &lt;a href="http://www.rolfje.com/2011/07/03/1355/">shared SpiderOak folder&lt;/a> to have them available on all your machines.&lt;/p>
&lt;p>&lt;a href="screen-shot-2011-07-30-at-20-18-00.png">&lt;img src="screen-shot-2011-07-30-at-20-18-00.png?w=300" alt="Templates configuration in Eclipse">
&lt;/a>Remember to give your templates an easy name so you can quickly invoke them by code completion. Great examples are the existing &amp;quot;sysout&amp;quot; and &amp;quot;foreach&amp;quot; templates. I called mine &amp;quot;llog&amp;quot; with a double-l because &amp;quot;log&amp;quot; collides with too many other code completion possibilities.&lt;/p>
&lt;p>Experiment and enjoy your increased productivity.&lt;/p></description></item><item><title>Why Jenkins does not detect Failures</title><link>https://realrolfje.github.io/rolfje.com/2011/06/20/why-jenkins-does-not-detect-failures/</link><pubDate>Mon, 20 Jun 2011 21:04:37 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2011/06/20/why-jenkins-does-not-detect-failures/</guid><description>
&lt;p>&lt;a href="http://jenkins-ci.org/">&lt;img src="jenkinsnofail.png" alt="">
&lt;/a>Jenkins, the brilliant Continuous Integration build server, has a bit of a problem with the Maven surefire jUnit test plugin. Last sunday, I discovered that our Jenkins build server suddenly started ignoring test failures. While the logfile clearly states that the Unittests contain failures, Jenkins marks the builds as &amp;quot;stable&amp;quot;.&lt;/p>
&lt;p>After some digging around, I found that even though Jenkins explicitly tells you in the logfile that it will fail the build, it will not do so if the Surefire XML reports are not generated. In our case, somebody in the team decided that the generation of the XML Surefire reports was taking too long and had disabled them in the Maven pom.xml.&lt;/p>
&lt;p>In order to solve this, I re-enabled the XML reports and voila, Jenkins happily started reporting errors again. Here is the correct Surefire plugin configuration for you to use in your maven pom.xml file:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; toolbar=&amp;quot;false&amp;quot; wraplines=&amp;quot;false&amp;quot; padlinenumbers=&amp;quot;true&amp;quot; gutter=&amp;quot;false&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;10&amp;quot;]
&lt;plugin>
&lt;groupId>org.apache.maven.plugins&lt;/groupId>
&lt;artifactId>maven-surefire-plugin&lt;/artifactId>
&lt;version>2.8&lt;/version>
&lt;configuration>&lt;/p>
&lt;pre>&lt;code> &amp;lt;!-- Please note that Jenkins needs Surefire
XML reports in order for detection to work.
Keep this property set to false. --&amp;gt;
&amp;lt;disableXmlReport&amp;gt;false&amp;lt;/disableXmlReport&amp;gt;
&amp;lt;/configuration&amp;gt;
&lt;/code>&lt;/pre>
&lt;/plugin>
[/sourcecode]</description></item><item><title>^H(eaven) key binding in Eclipse</title><link>https://realrolfje.github.io/rolfje.com/2011/06/19/heaven-key-binding-in-eclipse/</link><pubDate>Sun, 19 Jun 2011 19:21:49 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2011/06/19/heaven-key-binding-in-eclipse/</guid><description>
&lt;p>&lt;a href="search-window.png">&lt;img src="search-window.png?w=150" alt="Eclipse File Search Window">
&lt;/a>As a long time user of Eclipse, I have never understood the any of the tabs of the Search panel in Eclipse. JavaScript search, Java Search, Remote Search, they all make no sense to a modern man who is used to a single search box which searches everything. So I always use the &amp;quot;File Search&amp;quot; Tab, which does exactly what I want 99% of the time.&lt;/p>
&lt;p>File Search always requires mouseclicks. To open the Search window and select the correct tab. It was not until recently that I realized that I could actually reassign the ^H (Control - H) key combination to pop up the File Search tab. If you are an avid Eclipse user you've probably already done this, or know how to do this. If you are new to eclipse, or lazy like me, read on to see how you can re-map this key binding.&lt;/p>
&lt;!-- more -->
&lt;p>To remap ^H to &amp;quot;File Search&amp;quot;, do the following:&lt;/p>
&lt;p>Open Eclipse preferences and go to &amp;quot;General -&amp;gt; keys&amp;quot;. You should see the following settings screen:&lt;/p>
&lt;p>&lt;a href="eclipse-settings-key-binding.png">&lt;img src="eclipse-settings-key-binding.png?w=300" alt="Eclipse Key Bindings Preference page">
&lt;/a>&lt;/p>
&lt;pre>&lt;code> * In the filter text, type &amp;quot;file search&amp;quot;. The command list should now contain only one entry, &amp;quot;File Search&amp;quot;.
* Highlight the &amp;quot;File Search&amp;quot; command
* Click in the &amp;quot;Binding&amp;quot; field and press ^H. You should now see that you've created a conflict with the &amp;quot;Open Search Dialog&amp;quot; in the &amp;quot;conflicts&amp;quot; list on the right.
* Select the conflict you want to remove, and empty the key binding field.
* Press the &amp;quot;Ok&amp;quot; button to close the preferences screen.
&lt;/code>&lt;/pre>
&lt;p>Now you're all done. When you're in an editor and want to see if selected text is present in other parts of your project&lt;/p>
&lt;p>Let's say you are looking at Java source of an Ibatis SqlMapClient and want to find the matching statement in any of the the SqlMap.xml files. You can now simply select the text in the Java file, hit ^H, Enter, and voila, you get a list of all files with that same text in it, anywhere in your enclosing project or workspace, without copy-pasting or even touching the mouse.&lt;/p>
&lt;p>Now go play with your new found piece of heaven.&lt;/p></description></item><item><title>Your Maven Java WEB project in Eclipse WTP</title><link>https://realrolfje.github.io/rolfje.com/2011/01/29/your-maven-java-web-project-in-eclipse-wtp/</link><pubDate>Fri, 28 Jan 2011 22:51:10 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2011/01/29/your-maven-java-web-project-in-eclipse-wtp/</guid><description>
&lt;p>&lt;a href="http://www.eclipse.org/webtools/">&lt;img src="wtp_logo_2010.png" alt="">
&lt;/a>&lt;/p>
&lt;p>In our company, all Java projects are setup with Maven configuration so that after a &amp;quot;mvn eclipse:eclipse&amp;quot; any developer is generally good to go. One of these projects was a web project but would not transform into a WTP project. By running &amp;quot;mvn eclispe:eclipse&amp;quot; it became a Java project, but could not be added to a Server in Eclipse. It was not a WTP project.&lt;/p>
&lt;p>I learned that the author of the project tried but never got the WTP plugin to work properly. Using the Google, I found more people who are having the same problem converting their existing Maven Java Web projects in Eclipse into a WTP project. There are even a few desperate articles describing how to edit your .project and .classpath files. Oh dear. This calls for an article on &lt;a href="http://www.rolfje.com">www.rolfje.com&lt;/a>.&lt;/p>
&lt;!-- more -->It all came down to the maven-eclipse-plugin which would just not configure my project properly. I soon learned that in their infinite wisdom, the development team decided that the maven-eclipse-plugin no longer uses a default value for the _&lt;wtpversion>_ setting. Even if you have the _&lt;wtpapplicationxml>true&lt;/wtpapplicationxml>_ element in your _pom.xml_, without the _&lt;wtpversion>_ tag the maven-eclipse-plugin will ignore all wtp project settings silently. So the solution was rather simple:
&lt;p>**Short answer
**The short answer to this fun evening full of Googling and reading is: Add the &lt;em>&lt;wtpversion>&lt;/em> tag to your maven-eclipse-plugin configuration, run &lt;em>&amp;quot;mvn clean eclipse:eclipse&amp;quot;&lt;/em> and refresh your project. That's it.&lt;/p>
&lt;p>**The long version
**For people who like to copy-paste (like me): Change your &lt;em>pom.xml&lt;/em> file in the root of your project to include the &lt;em>&lt;wtpapplicationxml>&lt;/em> and &lt;em>&lt;wtpversion>&lt;/em> tags as shown at the bottom of this example pom file:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; toolbar=&amp;quot;false&amp;quot; wraplines=&amp;quot;true&amp;quot; padlinenumbers=&amp;quot;true&amp;quot; autolinks=&amp;quot;false&amp;quot; highlight=&amp;quot;46,47&amp;quot;]
&lt;project>
&lt;packaging>war&lt;/packaging>&lt;/p>
&lt;dependencies>
[...]
&lt;/dependencies>
&lt;build>
&lt;resources>
&lt;resource>
&lt;directory>src/main/java&lt;/directory>
&lt;includes>
&lt;include>**/*.xml&lt;/include>
&lt;include>**/*.xsd&lt;/include>
&lt;include>**/*.wsdl&lt;/include>
&lt;/includes>
&lt;/resource>
&lt;/resources>
&lt;pre>&lt;code>&amp;lt;testResources&amp;gt;
&amp;lt;testResource&amp;gt;
&amp;lt;directory&amp;gt;src/test/java&amp;lt;/directory&amp;gt;
&amp;lt;includes&amp;gt;
&amp;lt;include&amp;gt;**/*.xml&amp;lt;/include&amp;gt;
&amp;lt;/includes&amp;gt;
&amp;lt;/testResource&amp;gt;
&amp;lt;/testResources&amp;gt;
&amp;lt;plugins&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;source&amp;gt;1.6&amp;lt;/source&amp;gt;
&amp;lt;target&amp;gt;1.6&amp;lt;/target&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;artifactId&amp;gt;maven-war-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;2.1.1&amp;lt;/version&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-eclipse-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;wtpapplicationxml&amp;gt;true&amp;lt;/wtpapplicationxml&amp;gt;
&amp;lt;wtpversion&amp;gt;2.0&amp;lt;/wtpversion&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/plugins&amp;gt;
&lt;/code>&lt;/pre>
&lt;/build>
&lt;/project>
[/sourcecode]
&lt;p>Open a command prompt at the root of your project (where the_ pom.xml_ file is) and have maven re-fresh the project, like this:&lt;/p>
&lt;p>[sourcecode light=&amp;quot;true&amp;quot;]
mvn clean eclipse:eclipse
[/sourcecode]&lt;/p>
&lt;p>Open eclipse, right click on the root of your project and select &amp;quot;refresh&amp;quot; (or press F5).&lt;/p>
&lt;p>After you've done this, you should have &amp;quot;Web Project Settings&amp;quot; in the properties of the eclipse project. If you right-click on your defined servers in Eclipse, the project should show up in the &amp;quot;Add and Remove&amp;quot; dialog.&lt;/p>
&lt;p>Have fun!&lt;/p></description></item><item><title>Simple Strict Date Parsing</title><link>https://realrolfje.github.io/rolfje.com/2010/03/06/simple-strict-date-parsing/</link><pubDate>Fri, 05 Mar 2010 23:00:41 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2010/03/06/simple-strict-date-parsing/</guid><description>
&lt;p>&lt;img src="calendar-icon2.png" alt="">
In Java, the &lt;em>DateFormat.parse()&lt;/em> method is a funny little critter. It helps you by trying to figure out what date you actually meant when you typed in &amp;quot;35/12/2O10&amp;quot; (note the letter &amp;quot;O&amp;quot; in 2O10). In this case, it will parse the date without errors or warnings, and returns the date &amp;quot;11/12/04&amp;quot; (November 12th, 0004). That's because it thinks &amp;quot;35&amp;quot; is a month, and &amp;quot;2&amp;quot; is the year, ignoring everything after the letter &amp;quot;O&amp;quot;.&lt;/p>
&lt;p>&lt;em>DateFormat&lt;/em> tries to convert the &amp;quot;35th month&amp;quot; into 2 years and 11 months, and correct the date accordingly. &lt;em>df.setLenient(false)&lt;/em> prevents this, but that still leaves the problem of the parsing stopping at the first wrong character without warning.&lt;/p>
&lt;p>I needed a much stricter way of parsing dates, and yesterday I found an elegant solution to this problem. It's so small I was able to &lt;a href="http://twitter.com/rolfje/status/9828355998">tweet it in less than 140 characters&lt;/a>, but I thought it deserved a decent blogpost so here it goes:&lt;/p>
&lt;p>`&lt;/p>
&lt;pre>&lt;code>public Date parseDateString(String inputDateString)
throws ParseException {
DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);
Date parsedDate = df.parse(inputDateString);
if (!inputDateString.equals(df.format(parsedDate))) {
throw new ParseException(&amp;quot;Invalid Date&amp;quot;, 0);
}
return parsedDate;
}
&lt;/code>&lt;/pre>
&lt;p>`&lt;/p>
&lt;p>The brilliance here is in the comparing of the formatted date with the original input. The method returns a normal ParseException so you can perfectly replace your original &lt;em>df.parse()&lt;/em> calls with it, making them more strict.&lt;/p>
&lt;p>Thanks to Bas for this elegant and simple solution.&lt;/p></description></item><item><title>Ibatis Inline Parameter Maps</title><link>https://realrolfje.github.io/rolfje.com/2010/02/16/ibatis-inline-parameter-maps/</link><pubDate>Tue, 16 Feb 2010 15:19:16 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2010/02/16/ibatis-inline-parameter-maps/</guid><description>
&lt;p>&lt;img src="box.jpg" alt="">
Today I (re)discovered a feature in the Ibatis data mapper framework which was clearly documented, but for some reason was not being used in our project. The feature is called &amp;quot;inline parameter maps&amp;quot; and combined with a wrapper bean it can clean up a lot of clutter in the code and in the SqlMaps. Please feel free to share this example with your fellow Ibatis Data Mapper 2 framework users.&lt;/p>
&lt;!-- more -->**The Case.**
&lt;p>Suppose you are building software to interface with an old Oracle backoffice for a big parcel delivery company. One of the Classes you are using is the &amp;quot;Box&amp;quot; class, which is a basic Java Bean:&lt;/p>
&lt;pre>&lt;code>public class Box {
private int height;
private int width;
private int depth;
private int weight;
private String color;
private String origin;
private String destination;
&amp;lt;span style=&amp;quot;color:#888888;&amp;quot;&amp;gt;[... getters and setters here...]&amp;lt;/span&amp;gt;
}
&lt;/code>&lt;/pre>
&lt;p>You need to store a Box object using a stored procedure in the backoffice. The stored procedure, called &amp;quot;store_box&amp;quot;, returns the location code of the Box, but you do not want to store this location code in the Box object.&lt;/p>
&lt;p>&lt;strong>The Parameter Class.&lt;/strong>
To solve this problem in Ibatis, you can use an aggregating parameter object called &amp;quot;StoreBoxParameters&amp;quot; (or any name you like). This is a simple bean which aggregates the Box object you want to store, and has extra fields for the data returned by the &amp;quot;store_box&amp;quot; stored procedure:&lt;/p>
&lt;pre>&lt;code>public class StoreBoxParameters {
private Box box;
private String locationCode;
public StoreBoxParameters(Box aBox){
this.box = aBox;
}
&amp;lt;span style=&amp;quot;color:#888888;&amp;quot;&amp;gt;[... getters and setters here...]&amp;lt;/span&amp;gt;
}
&lt;/code>&lt;/pre>
&lt;p>To store the Box object, you write an SqlMap which calls the stored procedure with a parameter map:&lt;/p>
&lt;pre>&lt;code>&amp;lt;parameterMap id=&amp;quot;storeBoxParameterMap&amp;quot; class=&amp;quot;com.rolfje.StoreBoxParameters&amp;quot;&amp;gt;
&amp;lt;parameter property=&amp;quot;box.height&amp;quot; jdbcType=&amp;quot;NUMERIC&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.width&amp;quot; jdbcType=&amp;quot;NUMERIC&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.depth&amp;quot; jdbcType=&amp;quot;NUMERIC&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.weight&amp;quot; jdbcType=&amp;quot;NUMERIC&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.color&amp;quot; jdbcType=&amp;quot;VARCHAR&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.origin&amp;quot; jdbcType=&amp;quot;VARCHAR&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;box.destination&amp;quot; jdbcType=&amp;quot;VARCHAR&amp;quot; mode=&amp;quot;IN&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;locationCode&amp;quot; jdbcType=&amp;quot;VARCHAR&amp;quot; mode=&amp;quot;OUT&amp;quot; /&amp;gt;
&amp;lt;/parameterMap&amp;gt;
&amp;lt;procedure id=&amp;quot;store_box&amp;quot; parameterMap=&amp;quot;storeBoxParameterMap&amp;quot;&amp;gt;
{call store_box (?,?,?,?,?,?,?,?)}
&amp;lt;/procedure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>And in the DAO, you can now fetch the locationcode seperate from the Box object:&lt;/p>
&lt;pre>&lt;code>public String storeBox (Box aBox) {
StoreBoxParameters boxParameters = new StoreBoxParameters(aBox);
getSqlMapClientTemplate().update(&amp;quot;store_box&amp;quot;, boxParameters);
return boxParameters.getLocationCode();
}
&lt;/code>&lt;/pre>
&lt;p>Please note that this solution becomes even nicer when you have to call a stored procedure with multiple IN and OUT parameters and you want to separate these your business objects.&lt;/p>
&lt;p>In the solution for the first problem, you may have noticed the stored procedure call in the Ibatis SQL map being written as &lt;em>&amp;quot;{call store_box (?,?,?,?,?,?,?,?)}&amp;quot;&lt;/em>. This is not exactly elegant, particularly when you have a long list of parameters. When bug fixing, it is hard to see which value gets passed into which parameter.&lt;/p>
&lt;p>&lt;strong>The Inline Parameter Map.&lt;/strong>
In the Ibatis data mapper documentation, I found a beautiful solution for this, called inline parameter maps. First, you delete the parameter map from the SqlMap. Then, you replace the question marks with an inline version of these fields. You should get something like this:&lt;/p>
&lt;pre>&lt;code>&amp;lt;procedure id=&amp;quot;store_box&amp;quot; parameterClass=&amp;quot;com.rolfje.StoreBoxParameters&amp;quot;&amp;gt;
{call store_box (
#box.height,jdbcType=NUMERIC,mode=IN#,
#box.width,jdbcType=NUMERIC,mode=IN#,
#box.depth,jdbcType=NUMERIC,mode=IN#,
#box.weight,jdbcType=NUMERIC,mode=IN#,
#box.color,jdbcType=VARCHAR,mode=IN#,
#box.origin,jdbcType=VARCHAR,mode=IN#,
#box.destination,jdbcType=VARCHAR,mode=IN#,
#locationCode,jdbcType=VARCHAR,mode=OUT#
)}
&amp;lt;/procedure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>This cleans up your SqlMaps and improves their readability. Note that for OUT parameters to work, the fields you map them to may not be primitives.&lt;/p>
&lt;p>Happy coding.&lt;/p>
&lt;pre>&lt;code>StoreBoxParameters
&lt;/code>&lt;/pre></description></item><item><title>Flow</title><link>https://realrolfje.github.io/rolfje.com/2009/12/22/flow/</link><pubDate>Tue, 22 Dec 2009 21:34:04 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/12/22/flow/</guid><description>
&lt;p>&lt;a href="left-right.jpg">&lt;img src="left-right.jpg" alt="">
&lt;/a>Being &amp;quot;in the flow&amp;quot;. The nicest state of mind known to mankind. You act without thinking, and everyone of your actions is the perfect response to the situation. Riding a motorcycle on a beautiful road without a destination can easily get you into this state. With an empty mind, you see the next 2 corners, feel your bike as your brakes hit the disc, smell the forest, and hear the wind as you start accelerating out of the first corner while naturally placing the bike into position for the next.&lt;/p>
&lt;!-- more -->Software developers also know "flow", and mentally it does not differ that much from riding a motorcycle. Coders call this "being in the zone". It's you, the code, and the next 2 unittests. You effortlesly write the perfect conditions for your loop, while noticing the log of the buildserver, and thinking about the solution you already have for the next problem.
&lt;p>In order to get into the flow, conditions need to be perfect. You have to be in the right mood. There should be no distractions. There needs to be rythm.&lt;/p>
&lt;p>Coding and biking is done by &amp;quot;enjoy the ride&amp;quot; people. They enjoy the thrill of that perfect corner, or that perfect try/catch block, without worrying to much about the destination. Destination is usually the worry of the &amp;quot;a-to-b&amp;quot; people. These are to people that need to get to their destination. Usually car drivers, they will talk about destinations, the bluetooth and stereo in their cars, but rarely enjoy the ride itself. When they get to &amp;quot;B&amp;quot;, a new destination is chosen and the race is on again.&lt;/p>
&lt;p>&amp;quot;A-to-b&amp;quot; people often don't understand &amp;quot;flow&amp;quot; or &amp;quot;being in the zone&amp;quot;. They also don't understand that it's hard to get &amp;quot;in the flow&amp;quot; and very easy to get out. Changing the end goal of a long project is not all that troublesome. But changing the next 2 corners will get your &amp;quot;enjoy the ride&amp;quot; team members out of the flow for sure. Do it too often, and your team will not even try to get into the flow, because there is nothing more frustrating than being yanked out of your flow.&lt;/p>
&lt;p>Programming seems dull and nerdy. But being &amp;quot;in the zone&amp;quot; or having &amp;quot;flow&amp;quot; can give you quite a rush, with some similarities to riding a bike on a sunny, twisty mountain road.&lt;/p></description></item><item><title>Sonar "Close Connection" warning workaround.</title><link>https://realrolfje.github.io/rolfje.com/2009/10/06/sonar-close-connection-warning-workdaround/</link><pubDate>Tue, 06 Oct 2009 08:38:26 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/10/06/sonar-close-connection-warning-workdaround/</guid><description>
&lt;p>When you use Spring and Ibatis and SQLTemplates, you could have code in your project which looks somewhat like this:&lt;/p>
&lt;pre>&lt;code>Connection connection = DataSourceUtils.getConnection(getDataSource());
...&amp;lt;do connection stuff here&amp;gt;...
DataSourceUtils.releaseConnection(connection, getDataSource());
&lt;/code>&lt;/pre>
&lt;p>Sonar will report that you did not close the connection, while in fact, Spring did that for you. You can not just add a &lt;em>&amp;quot;connection.close()&amp;quot;&lt;/em> to the code because the whole point of calling &lt;em>&amp;quot;releaseConnection()&amp;quot;&lt;/em> is to have Spring handle all the smart stuff on committing, closing, and returning the connection to the pool if needed.&lt;/p>
&lt;!-- more -->In our company, not closing the connection is a major blocking violation (and it should be). But in this case, there is no way to make the Jedi wave to Sonar, telling it that "this code will do just fine". So I added the following trick, albeit a bit dirty:
&lt;pre>&lt;code>if (connection.isClosed()){
// This code is only here to keep Sonar from
// warning us that the connection is not
// closed. Please note: Do not just close an
// unclosed connection, Spring should handle
// connection closing and returning to the pool.
connection.close();
}
&lt;/code>&lt;/pre>
&lt;p>Use it to your advantage, but use this responsibly. If you see any problems in my solution, or if there is a better way to do this I'd be happy to hear about it.&lt;/p>
&lt;p>&lt;strong>Edit (2009-12-01):&lt;/strong>&lt;/p>
&lt;p>There is a much better way to do this if you have Spring/Ibatis integration. In stead of DataSourceUtils.getConnection() you can create a new ConnectionCallback object, like so:&lt;/p>
&lt;pre>&lt;code>JdbcTemplate template = new JdbcTemplate(getDataSource());
Object resultObject = template.execute(new ConnectionCallback() {
public Object doInConnection(Connection conn) 
throws SQLException, DataAccessException {
// Do connection stuff here (can return object);
return null;
});
&lt;/code>&lt;/pre>
&lt;p>Please note that this code does NOT contain any Connection.close() references. The connection is passed to you, you can use it, and after your method completes, the framework will do whatever is needed to clean everything up. Sonar will not complain because the whole open/close handeling is done outside your method.&lt;/p></description></item><item><title>Transactions and Isolation levels</title><link>https://realrolfje.github.io/rolfje.com/2009/08/29/transactions-and-isolation-levels/</link><pubDate>Sat, 29 Aug 2009 21:16:21 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/08/29/transactions-and-isolation-levels/</guid><description>
&lt;p>&lt;a href="http://www.ahajokes.com/cartoon/bagjoke.jpg">&lt;img src="safety_goggles.gif" alt="Safety googles">
&lt;/a>At work, we have two applications which connect to the same database. For all kinds of business reasons, we need to make sure that only one of the applications accesses certain data at the same time. To do this, we use a row in a table as a &lt;a href="http://en.wikipedia.org/wiki/Semaphore_(programming)">semaphore&lt;/a>.&lt;/p>
&lt;p>While working on the locking mechanism, we had a closer look at the Transaction Management and the Isolation Levels we were using. There is a lot of good documentation on Transaction and Isolation, but it tends to be over complete, elaborate and therefore hard to read. I'll try to share our insights with you in a slightly more digestable form (I hope).&lt;/p>
&lt;p>&lt;strong>&lt;!-- more -->What is a Transaction&lt;/strong>
Every (proper) database uses Transactions. A Transaction is a unit of work which you can undo (roll back) or save (commit) to the database. Generally, database clients tend to &amp;quot;Auto Commit&amp;quot; which effectively means that each of your actions on the database are executed immediately and can not be rolled back.&lt;/p>
&lt;p>When you click through your client's settings, you can probably find an option to turn Auto Commit off. Now, at your first database write action (insert or update), a Transaction is started. The database will keep track of each of your write actions, and once you're finished, you can decide to keep the changes by &amp;quot;committing&amp;quot; the Transaction. You can also decide to revert all the changes you made and do a &amp;quot;rollback&amp;quot;, as long as the Transaction is not closed. Both Commit and Rollback close a transaction, so choose wisely.&lt;/p>
&lt;p>&lt;strong>What is an Isolation Level&lt;/strong>
Most databases allow more than one user to connect to the database. In order for you to do your work, you may require a stable database without changes. To protect yourself from seeing other peoples updates, you can set an &lt;a href="http://en.wikipedia.org/wiki/Isolation_(database_systems)">&amp;quot;Isolation Level&amp;quot;&lt;/a>. Generally, you set the isolation level at the time of starting a Transaction.&lt;/p>
&lt;p>Isolation levels come in many different flavours, from &amp;quot;liberal&amp;quot; to &amp;quot;strict&amp;quot;:&lt;/p>
&lt;pre>&lt;code> * _READ UNCOMMITTED_ - Allows you to see the database as it is right now. Doing he same query on a table twice is likely to produce different results as other people are updating the table, even if they haven't committed their transactions yet.
* _READ COMMITTED_ - The database will only show you changes to the table which are commited. Doing the same query twice can still produce different results, but you're sure that those changes will not be olled back by the authors.
* _REPEATABLE READ_ - The database will make sure that when you execute the same query twice, you will see the same data twice. It may have to lock the rows in the table to do this, which will prevent other people from updating them until you complete your transaction.
* _SERIALIZABLE_ - The database will not only make sure you see the same data, but it will also make sure that all updates in the system are done in such a way that it seems as if there was only 1 user connected to the database at a time. This is the most &amp;quot;expensive&amp;quot; isolation level, and tends to be relatively slow.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Transaction is not Isolation.&lt;/strong>
Although a Transaction may suggest that your changes are not written to the database until after your commit, it will write all changes directly to the tables. That means that anybody can see what you are doing to the database, depending on their Isolation levels. Mind you: &lt;em>their&lt;/em> isolation levels, not yours.&lt;/p>
&lt;p>You can see a Transaction as your &amp;quot;undo buffer&amp;quot; if you will, and the &amp;quot;Isolation Level&amp;quot; as the filter through which you are looking at other people's actions to the database.&lt;/p>
&lt;p>&lt;strong>How about our semaphores?&lt;/strong>
Back to our semaphore problem. Reading about Transactions and Isolation Levels, we knew that both systems must do the &amp;quot;fetch&amp;quot; (a read and an update) of the semaphore within a single transaction, and both systems must use the &amp;quot;serializable&amp;quot; isolation level to make sure that it reads the correct, current value without having a chance of incorrectly fetching the smaphore.&lt;/p>
&lt;p>What's funny about the serializable isolation level however, is that it does not prevent you from overwriting other people's values without knowing. Our example:&lt;/p>
&lt;pre>&lt;code> 1. Application 1 reads the semaphore to be 0 and decides it can set it to 1.
2. Application 2 reads the semaphore to be 0 and also decides it can set it to 1.
3. Application 1 sets the semaphore to 1 and thinks it has the lock.
4. Application 2 also sets the semaphore to 1 and thinks is has the lock.
&lt;/code>&lt;/pre>
&lt;p>This is clearly a problem. We learned that:&lt;/p>
&lt;p>&lt;strong>Regardless of your isolation level or transaction usage, the last commit always wins.&lt;/strong>&lt;/p>
&lt;p>There is, however one database on the market which at least fails in this situation. It's Oracle. When you use the &amp;quot;Serializable&amp;quot; isolation level, Oracle will prevent you from overwriting a row which was changed without your knowing about it. This changes our scenario as follows:&lt;/p>
&lt;pre>&lt;code> 1. Application 1 reads the semaphore to be 0 and decides it can set it to 1.
2. Application 2 reads the semaphore to be 0 and also decides it can set it to 1.
3. Application 1 sets the semaphore to 1 and thinks it has the lock.
4. Application 2 tries to set the semaphore to 1, but Oracle notices that the row has changed since the last read, and will fail to do the update. An error (ORA-08177) is thrown at the application, allowing you to re-read the lock and discover it has been taken.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Conclusion&lt;/strong>
Generally, you will have 1 application connecting to 1 database. The application will use the same Transaction granularity and Isolation levels throughout, and you will not notive these interesting behaviours. As soon as you have multiple applications with different isolation levels connecting to the same databases, you are likely to run into interesting, sporadic irreproducable problems. Try to think about your Isolation strategies.&lt;/p>
&lt;p>If I got you interested, I recommend reading &lt;a href="http://blog.xebia.com/2007/11/28/oracle-and-ora-08177/">this blogpost by Peter Veentjer&lt;/a> about this very same thing. Peter is a bit more technically correct than I am in this post.&lt;/p></description></item><item><title>Starting Java app from Applescript</title><link>https://realrolfje.github.io/rolfje.com/2009/06/11/starting-java-app-from-applescript/</link><pubDate>Thu, 11 Jun 2009 20:36:27 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/06/11/starting-java-app-from-applescript/</guid><description>
&lt;p>Suppose you have a Java Swing application which you can start by typing the following on the command line:&lt;/p>
&lt;p>&lt;em>java -jar myTerrificSwingApp.jar&lt;/em>&lt;/p>
&lt;p>If you want to make that application start from the Finder in OSX, there are a lot of options which range from ugly to convoluted. If you need a quick fix, here's how to do it.&lt;/p>
&lt;!-- more -->Open ScriptEditor.app on your Mac, and copy paste:
&lt;blockquote>
&lt;blockquote>
&lt;p>-- Get path to this script using &amp;quot;/&amp;quot; in stead of &amp;quot;:&amp;quot; as seperators&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>set&lt;/strong> myPath &lt;strong>to&lt;/strong> POSIX path &lt;strong>of&lt;/strong> (path to &lt;strong>me&lt;/strong> as string)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-- Save text item delimiters and set it to &amp;quot;/&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>set&lt;/strong> delims &lt;strong>to&lt;/strong> AppleScript's text item delimiters&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>set&lt;/strong> AppleScript's text item delimiters &lt;strong>to&lt;/strong> &amp;quot;/&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-- Get the whole string except the last token, and add a &amp;quot;/&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>set&lt;/strong> myFolder &lt;strong>to&lt;/strong> (text 1 &lt;strong>thru&lt;/strong> text item -2 &lt;strong>of&lt;/strong> myPath) &amp;amp; &amp;quot;/&amp;quot; ¬&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>** as** Unicode text&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-- Restore default text item delimiters (being tidy)&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>set&lt;/strong> AppleScript's text item delimiters &lt;strong>to&lt;/strong> delims&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-- Start java from this directory, as nohup and background&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-- so this applescript can disapear from the Dock&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>do shell script ¬&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;quot;cd &amp;quot; &amp;amp; myFolder &amp;amp; ¬&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;quot;; nohup java -jar myTerrificSwingApp.jar &amp;amp;&amp;quot;&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>Save the script as &amp;quot;Application Bundle&amp;quot; and don't forget to un-check the startup window option. If you have some extra time, you can open the package contents of the app, and replace the Contents/Resources/applet.icns with your own icon.&lt;/p>
&lt;p>There are a lot more ways to do this, for instance you can also put your jar file inside the app bundle, or build a double-clickable jar file, or bundle a complete application. You can find more info on all these options on the &lt;a href="http://developer.apple.com/documentation/Java/Conceptual/Java14Development/03-JavaDeployment/JavaDeployment.html">Apple developer website&lt;/a>.&lt;/p></description></item><item><title>Javascript Window Shake</title><link>https://realrolfje.github.io/rolfje.com/2009/03/12/javascript-window-shake/</link><pubDate>Wed, 11 Mar 2009 22:54:53 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/03/12/javascript-window-shake/</guid><description>
&lt;p>This evening I came accross the window.moveBy() JavaScript function and thought it would be cool to shake the browser window when a user fails to &lt;a href="http://rolfje.wordpress.com/2006/11/02/it-aint-what-you-do/">log in&lt;/a>. It turns out that I was not the only one thinking this, but none of the examples worked for me. Some had &lt;a href="http://javascript.internet.com/image-effects/shake-screen.html">no proper delays&lt;/a>, others only worked from the page header, and some were &lt;a href="http://www.permadi.com/tutorial/jsquake/index.html">plain unreadable&lt;/a>.&lt;/p>
&lt;p>I'm no Javascript guru, but I hacked this together which is working pretty nicely. It is in fact almost undistinguishable from the Apple login window shake at a login failure:&lt;/p>
&lt;pre>&lt;code>&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
if (window.moveBy) {
delay = 70;
shakes = 3;
window.moveBy(-10, 0);
for (j = shakes; j &amp;gt; 0; j--) {
setTimeout( &amp;quot;window.moveBy(20, 0)&amp;quot;, j*delay );
setTimeout( &amp;quot;window.moveBy(-20, 0)&amp;quot;,
j*delay+(delay/2));
}
setTimeout( &amp;quot;window.moveBy(10, 0)&amp;quot;, (shakes+1)*delay );
}
&amp;lt;/script&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>In my case, I surrounded this code with a Tapestry @Conditional and made it into a reusable Tapestry component so that I can make any window shake as soon as it contains an error.&lt;/p>
&lt;p>The code will work anywhere on your page, but I advise you to put it at the bottom of the HTML. This will make sure that the content is shown in the browser before you shake it.&lt;/p>
&lt;p>It's visually much stronger than just adding an errortext to the page. If people log in a couple of times a day, they don't even notice extra text on the screen. This will &amp;quot;shake&amp;quot; them awake :-)&lt;/p>
&lt;p>Have fun!&lt;/p></description></item><item><title>Care vs Careless</title><link>https://realrolfje.github.io/rolfje.com/2009/02/03/care-vs-careless/</link><pubDate>Tue, 03 Feb 2009 21:21:26 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/02/03/care-vs-careless/</guid><description>
&lt;p> &lt;/p>
&lt;p>&lt;a href="http://stuffthathappens.com/blog/">&lt;img src="simplicity.png" alt="simplicity">
&lt;/a>&lt;/p>
&lt;p> &lt;/p>
&lt;p>It's frightening to realize how close to the truth Eric Burke is.&lt;/p></description></item><item><title>"Instruments" - Application monitor</title><link>https://realrolfje.github.io/rolfje.com/2009/01/02/instruments-application-monitor/</link><pubDate>Thu, 01 Jan 2009 23:00:55 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2009/01/02/instruments-application-monitor/</guid><description>
&lt;p>&lt;a href="afbeelding-3.png">&lt;img src="afbeelding-3.png?w=128" alt="Instruments">
&lt;/a>Did you know that your installation of Leopard comes with a built-in performance monitor? It's called &amp;quot;Instruments&amp;quot; and you can attach it to any process currently running. In the screenshot you see here I attached it to an instance of Eclipse while running some unittests.&lt;/p>
&lt;p>Instruments has some nice templates for you to choose from, and you can monitor CPU activity per thread, disk I/O, User Interface activity, Object allocations, and leaks. Just so you know, it might come in handy.&lt;/p></description></item><item><title>How to add drivers to SQuirreLSQL.app</title><link>https://realrolfje.github.io/rolfje.com/2008/12/30/how-to-add-drivers-to-squirrelsqlapp/</link><pubDate>Mon, 29 Dec 2008 23:00:38 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/12/30/how-to-add-drivers-to-squirrelsqlapp/</guid><description>
&lt;p>&lt;img src="afbeelding-2-copy.png" alt="SQuireL SQL on OSX with Oracle drivers">
If you're a SQuirreL SQL fan like me, and you use a Mac, you probably also want to know how to add a driver to the OSX version of the application. Most people just point to an external jar file, but you can also add drivers to the application bundle.  There's not much to it, but it took me some time to discover that I actually had to edit the plist file in the bundle after adding the driver.&lt;/p>
&lt;p>As you can see on the left, my SQuireLSQL.app now comes with the Oracle OCI and Thin driver built in, and because they are part of the application bundle, I can't wreck my installation by misplacing jarfiles or reconfiguring classpaths. Nice.&lt;/p>
&lt;p>If you want to drivers to your SQuireLSQL.app yourself, here's what you need to do:&lt;/p>
&lt;!-- more -->
&lt;pre>&lt;code> 1. Download  and unpack SQuirreL SQL for OSX.
2. Verify that is starts up, and that your drivers are missing. Close SQuirreL again.
3. Right-click on SQuireLSQL.app and select &amp;quot;show package contents&amp;quot;.
4. Browse to the **Contents/Resources/Java/lib** folder. Copy the jar file of your driver into this folder (I used ojdbc14.jar in this example)
5. Double-click the **Contents/Info.plist** file. The default plist editor will show up.
6. In the plist editor, find the **&amp;quot;Information Property List&amp;quot;/ Java/ClassPath** property.
7. At the end of the value in this property, add a colon, and a reference to your copied library. In our example (see step 4) I had to add **&amp;quot;:$JAVAROOT/lib/ojdbc14.jar&amp;quot;**, excluding quotes, but including the colon (see other libraries in the path and use them as examples.
8. Save the plist file, and double-click SQuireLSQL.app. Your driver should now have a blue checkmark next to it.
&lt;/code>&lt;/pre>
&lt;p>Please note that now you've added proprietary drivers to the bundle, you can no longer freely distribute it. Usage and distribution of your version of SQuireLSQL.app is now &amp;quot;contaminated&amp;quot; by the licences of the driver(s) you installed.&lt;/p>
&lt;p>Happy SQL-ing!&lt;/p></description></item><item><title>Eclipse 3.4.1, OSX and Java 1.6</title><link>https://realrolfje.github.io/rolfje.com/2008/12/28/eclipse-341-osx-and-java-16/</link><pubDate>Sun, 28 Dec 2008 14:05:19 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/12/28/eclipse-341-osx-and-java-16/</guid><description>
&lt;p>&lt;img src="afbeelding-22.png" alt="Eclipse application icon">&lt;/p>
&lt;p>I recently downloaded &lt;a href="http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/ganymede/SR1/eclipse-java-ganymede-SR1-macosx-carbon.tar.gz">Eclipse 3.4.1 for Mac OSX&lt;/a>, and tried starting it using the eclipse.app icon. It did not work, and I noticed a message in /var/log/system.log telling me that the JVM could not be loaded.&lt;/p>
&lt;!-- more -->After some Googling, I found out that Eclipse is not compatible with the new 64bit version of JDK 1.6 for the Mac. After switching back to 1.5 (luckaly Apple ships all JVM's with it's OS) it all worked. Here's how you switch back to JDK 1.5 on a Mac:
&lt;pre>&lt;code>cd /System/Library/Frameworks/JavaVM.framework/Versions
sudo ln -fhsv 1.5 CurrentJDK
&lt;/code>&lt;/pre>
&lt;p>This makes the CurrentJDK link to point to the 1.5 installation of the Java JDK.&lt;/p>
&lt;p>Bonus tip for today: While you're at it, increase the memory used by eclipse by opening the eclipse.app bundle (right click -&amp;gt; show package contents) and edit Contents/MacOS/eclipse.ini. Change the &amp;quot;-Xmx256m&amp;quot; line to read &amp;quot;-Xmx512m&amp;quot;, and eclipse should be much happier with you.&lt;/p>
&lt;p>Ofcourse there's &lt;a href="http://help.eclipse.org/stable/index.jsp?topic=/org.eclipse.platform.doc.user/tasks/running_eclipse.htm">lots more you can do there&lt;/a>, but I always say &amp;quot;keep it simple&amp;quot;.&lt;/p></description></item><item><title>Hex color picker for OSX</title><link>https://realrolfje.github.io/rolfje.com/2008/12/24/hex-color-picker-for-osx/</link><pubDate>Wed, 24 Dec 2008 20:20:41 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/12/24/hex-color-picker-for-osx/</guid><description>
&lt;p>&lt;a href="afbeelding-11.png">&lt;img src="afbeelding-11.png?w=182" alt="Hex Color Picker Screenshot">
&lt;/a>If you're working on some source code and you quickly need to insert a hexadecimal color code for a color you currently have on your screen, then here is a neat little trick I found:&lt;/p>
&lt;p>First, install &lt;a href="http://wafflesoftware.net/hexpicker/">Hex Color Picker&lt;/a> by Waffle software. It will add an extra option to the built-in OSX color picker to show you the selected color in Hex.&lt;/p>
&lt;p>To reach the color picker, you usually start up any application which uses the standard OSX color picker and just choose &amp;quot;choose color&amp;quot;. What you can also do, is have the OSX color picker behave as a &lt;a href="http://www.macosxhints.com/article.php?story=20060408050920158&amp;amp;lsrc=osxh">standalone application&lt;/a> in 3 simple steps:&lt;/p>
&lt;!-- more -->
&lt;pre>&lt;code> 1. Open &amp;quot;ScriptEditor&amp;quot;, the Applescript editor.
2. In the main window, type &amp;quot;choose color&amp;quot;
3. Save the script as an application.
&lt;/code>&lt;/pre>
&lt;p>The saved application will, you guessed it, show you the standard color picker. Add it to the dock and you will be a happy developer.&lt;/p>
&lt;p>&lt;strong>Please note&lt;/strong>**:** If you are really being a perfectionist, it is possible this will not work for you because the color profiles of you monitor and possibly the profiles which are applied by Safari will introduce errors, because the color picker shows you the color which is on the screen, not the original color coming from the application. There's a whole slew of documentation on color profiles and I do have a whole rant which I will save you from reading (for now).&lt;/p>
&lt;p>Merry Christmas!&lt;/p></description></item><item><title>Programmer Quotes</title><link>https://realrolfje.github.io/rolfje.com/2008/12/19/programmer-quotes/</link><pubDate>Fri, 19 Dec 2008 19:45:09 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/12/19/programmer-quotes/</guid><description>
&lt;p>On StackOverflow, there is a question asking for the &lt;a href="http://stackoverflow.com/questions/58640?sort=votes#sort-top">greatest programmer quotes&lt;/a> you know. In the top 3 quotes are the following two quotes which I think hold much truth:&lt;/p>
&lt;blockquote>_**"Always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live."**_ - Rick Osborne&lt;/blockquote>
&lt;blockquote>**_"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it."_** - Brian Kernighan&lt;/blockquote>
&lt;p>These two quotes are briliantly summing up the usual rant I always use. &amp;quot;if my phone rings at 3 a.m. for a prio 1 production issue, I want to be able to easily read the code. And I'm not going to be awake or cheerful at that time of night.&amp;quot; I guess at that time of night, it's easy to awaken the violent psychopath in me, and so it better not be &amp;quot;smart&amp;quot; code. &lt;a href="http://stuvel.eu/archive/42/blame-support-in-eclipse">CVS blame support&lt;/a> anybody?&lt;/p></description></item><item><title>J-Fall 2008</title><link>https://realrolfje.github.io/rolfje.com/2008/11/13/j-fall-2008/</link><pubDate>Thu, 13 Nov 2008 21:56:02 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/11/13/j-fall-2008/</guid><description>
&lt;p>&lt;a href="http://www.nljug.org/">&lt;img src="nljug-duke-small.png" alt="NLJUG small duke">
&lt;/a>Last wednesday I was at &lt;a href="http://www.nljug.org/jfall/">J-Fall 2008&lt;/a>, a fairly large event for Java programmers in the Netherlands. This event is organized by &lt;a href="http://www.nljug.org/">NLJUG&lt;/a>. You can read some of my notes on the different sessions in my &lt;a href="http://www.evernote.com/pub/rolfje/PublicNoteBook#7ddeb086-5064-42c1-99e9-83fc84e384f6">public evernote.&lt;/a>&lt;/p>
&lt;!-- more -->
&lt;p>Here's a one-minute impression of what J-Fall looked like this year:&lt;/p>
&lt;p>[youtube=http://nl.youtube.com/watch?v=Fy42_eX_QkA]&lt;/p></description></item><item><title>Transporting Oracle CHARs over a dblink</title><link>https://realrolfje.github.io/rolfje.com/2008/11/04/transporting-oracle-chars-over-a-dblink/</link><pubDate>Tue, 04 Nov 2008 20:56:52 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/11/04/transporting-oracle-chars-over-a-dblink/</guid><description>
&lt;p>&lt;img src="oracle_logo_small.gif" alt="Oracle Logo">
At work, we've got two Oracle databases and a Java web application. One of the tasks of the web application is to copy tables over from one database to the other. Last week we ran into a funny problem which turns out to be an Oracle bug.&lt;/p>
&lt;p>I've posted a question about this last week on &lt;a href="http://stackoverflow.com/questions/253971/why-does-char1-change-to-char3-when-copying-over-an-oracle-dblink">stackoverflow.com&lt;/a> but it seems that not many people are affected by this particular problem, or at least not many people know the answer to this particular little problem. We set out to tackle this and we did.&lt;/p>
&lt;p>**&lt;!-- more -->The Setup
** We have two databases, and want to transfer a complete table from the remote database to the local database, using a database link and a &amp;quot;create table as select&amp;quot;. For both databases, we can find the version and used character set with a few simple queries:&lt;/p>
&lt;p>select * from v$version where banner like 'Oracle%';&lt;/p>
&lt;p>select value from NLS_DATABASE_PARAMETERS
where parameter='NLS_CHARACTERSET';&lt;/p>
&lt;p>The results in our setup are:&lt;/p>
&lt;table border="0" >
&lt;tbody >
&lt;tr >
&lt;td > 
&lt;/td>
&lt;td >**Version**
&lt;/td>
&lt;td >**Character set**
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >**Remote:**
&lt;/td>
&lt;td >Oracle 10g Release 10.2.0.3.0
&lt;/td>
&lt;td >WE8ISO8859P1
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >**Local:**
&lt;/td>
&lt;td >Oracle 9i Release 9.2.0.6.0
&lt;/td>
&lt;td >AL32UTF8
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
As you see, we transfer data between different versions of Oracle, and different character sets. Add the CHAR datatype into the mix, and an annoying little bug pops up.
&lt;p>**The Test Data
** On the remote database, we create a table and fill it with some fake data, like so:&lt;/p>
&lt;p>create table foo
   (vcharbyte varchar2(1 byte),
    vcharchar varchar2(1 char),
    charbyte  char(1 byte),
    charchar  char(1 char));&lt;/p>
&lt;p>insert into foo
    values ('A', 'B', 'C', 'D');&lt;/p>
&lt;p>Let's check how the datatypes of our new table look:&lt;/p>
&lt;p>select column_name, data_type,
data_length as bytes,
char_length as chars
from user_tab_columns
where table_name like 'FOO';&lt;/p>
&lt;table cellpadding="1" cellspacing="0" border="1" >
&lt;tbody >
&lt;tr bgcolor="#dddddd" >
COLUMN_NAME
DATA_TYPE
BYTES
CHARS
&lt;/tr>
&lt;tr >
&lt;td >VCHARBYTE
&lt;/td>
&lt;td >VARCHAR2
&lt;/td>
&lt;td >1
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >VCHARCHAR
&lt;/td>
&lt;td >VARCHAR2
&lt;/td>
&lt;td >1
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >CHARBYTE
&lt;/td>
&lt;td >CHAR
&lt;/td>
&lt;td >1
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >CHARCHAR
&lt;/td>
&lt;td >CHAR
&lt;/td>
&lt;td >1
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
Everything looks fine. In the remote database, the data types are 1 byte in size, and 1 character in length, as expected.
&lt;p>**Copying the table over
** Log on to the local database. Setup a link to the remote database and create a local table with a &amp;quot;create table as select&amp;quot; statement:&lt;/p>
&lt;p>create database link foo_link
connect to foodb
identified by foodb
using 'foo_tns_entry';&lt;/p>
&lt;p>create table bar as
select * from foo@foo_link;&lt;/p>
&lt;p>Everthing seems to be ok, and selecting the new data on the &amp;quot;bar&amp;quot; table seems to work. But there's a snag. When using JDBC to connect to the database, you might notice that the CHARBYTE column is padded with 2 spaces. Why? First we look at what happened to our data types:&lt;/p>
&lt;p>select column_name, data_type,
data_length as bytes,
char_length as chars
from user_tab_columns
where table_name like 'BAR'&lt;/p>
&lt;table cellpadding="1" cellspacing="0" border="1" >
&lt;tbody >
&lt;tr bgcolor="#dddddd" >
COLUMN_NAME
DATA_TYPE
BYTES
CHARS
&lt;/tr>
&lt;tr >
&lt;td >CHARBYTE
&lt;/td>
&lt;td >CHAR
&lt;/td>
&lt;td >**3**
&lt;/td>
&lt;td >**3**
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >CHARCHAR
&lt;/td>
&lt;td >CHAR
&lt;/td>
&lt;td >4
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >VCHARBYTE
&lt;/td>
&lt;td >VARCHAR2
&lt;/td>
&lt;td >**3**
&lt;/td>
&lt;td >**3**
&lt;/td>
&lt;/tr>
&lt;tr >
&lt;td >VCHARCHAR
&lt;/td>
&lt;td >VARCHAR2
&lt;/td>
&lt;td >4
&lt;/td>
&lt;td >1
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
You may notice something funny going on here. As mentioned earlier, the remote database uses the WE8ISO8859P1 character set, which uses 1 byte to store a character. The local database uses the AL32UTF8 character set, which uses 3 to 4 bytes to store a character. So in order to copy characters over Oracle reserves 4 bytes per character (see CHARCHAR and VCHARCHAR columns).
&lt;p>For the data types we defined the size in bytes in, Oracle reserves 3 bytes for some reason. This is strange, because the AL32UTF8 character set has some 4 byte characters in it which never can be stored in those columns. Suppose Oracle says &amp;quot;but you defined length in bytes&amp;quot;, it still doesn't make sense. Why would I not choose to do conversion, but still reserve 3 times as much space for each byte? But wait, that's not all.&lt;/p>
&lt;p>Lets look at the length of the datatypes in characters (which makes much more sense). When we define the length of the original column in characters, oracle converts the data properly, as you see for the &amp;quot;CHARCHAR&amp;quot; and &amp;quot;VCHARCHAR&amp;quot; columns. But, for the columns we defined size in bytes, Oracle screws up. Not only the the number of bytes gets scaled up, but the &lt;strong>number of characters also gets scaled up, and your content is padded with spaces&lt;/strong>. It seems as if Oracle has given us a 3 character column with the WE8ISO8859P1 character set in a AL32UTF8 database, but I did not do tests to prove this.&lt;/p>
&lt;p>Oracle decided to handle the datatypes differently depending on how you defined it's length. Although I find that very obscure, the only difference in behaviour I would expect is that if I define size in bytes, it should stay that size in bytes in the new character set, because I was &amp;quot;planning to store bytes&amp;quot;.&lt;/p>
&lt;p>So defining the size of character-based types in characters results in predictable behaviour. Defining the size of character-based types in bytes makes Oracle go &lt;a href="http://www.merriam-webster.com/dictionary/loopy">loopy&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Conclusion:&lt;/strong>
Stay clear of the CHAR datatype, unless you really have to. If you want to use the CHAR type, make sure you always specify the size in characters, not in bytes. Not only will it prevent you from having this problem, it will also make your database scripts more concise and readable.&lt;/p>
&lt;p>_P.S.
Make sure you clean up both databases and the link:
_&lt;em>drop table bar;
drop database link foo_link;&lt;/em>&lt;/p>
&lt;p>&lt;em>And on the remote database
__ drop table foo;&lt;/em>&lt;/p></description></item><item><title>The Three Great Virtues of a Programmer</title><link>https://realrolfje.github.io/rolfje.com/2008/10/05/the-three-great-virtues-of-a-programmer/</link><pubDate>Sun, 05 Oct 2008 11:02:31 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/10/05/the-three-great-virtues-of-a-programmer/</guid><description>
&lt;p>I ran across &lt;a href="http://c2.com/cgi/wiki?LazinessImpatienceHubris">this wiki page&lt;/a> which has a nice piece on the virtues of a good programmer. I found it so recognizable that I decided to copy it over for you to enjoy:&lt;/p>
&lt;blockquote>_**"We will encourage you to develop the three great virtues of a programmer: laziness, impatience, and hubris."**_** **-- Larry Wall, Programming Perl (1st edition), O'Reilly and Associates
&lt;p>**Laziness
**The quality that makes you go to great effort to reduce overall energy expenditure. It makes you write labor-saving programs that other people will find useful, and document what you wrote so you don't have to answer so many questions about it. Hence, the first great virtue of a programmer. Also hence, this book. See also impatience and hubris. (p.609)&lt;/p>
&lt;p>**Impatience
**The anger you feel when the computer is being lazy. This makes you write programs that don't just react to your needs, but actually anticipate them. Or at least pretend to. Hence, the second great virtue of a programmer. See also laziness and hubris. (p.608)&lt;/p>
&lt;p>**Hubris
**Excessive pride, the sort of thing Zeus zaps you for. Also the quality that makes you write (and maintain) programs that other people won't want to say bad things about. Hence, the third great virtue of a programmer. See also laziness and impatience. (p.607)&lt;/blockquote>&lt;/p>
&lt;p>(The original context can be found at
&lt;a href="http://c2.com/cgi/wiki?LazinessImpatienceHubris">http://c2.com/cgi/wiki?LazinessImpatienceHubris&lt;/a>)&lt;/p></description></item><item><title>Spring SystemPropertyInitializingBean</title><link>https://realrolfje.github.io/rolfje.com/2008/07/23/spring-systempropertyinitilizingbean/</link><pubDate>Tue, 22 Jul 2008 22:37:29 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/07/23/spring-systempropertyinitilizingbean/</guid><description>
&lt;p>When using POI in any of your projects, and the application you're building is a web application, you probably have it running on a Windows machine. If not, you know all about the struggle with the &lt;a href="http://java.sun.com/developer/technicalArticles/J2SE/Desktop/headless/">&amp;quot;headless mode&amp;quot;&lt;/a> environment setting to tell the JVM how to handle graphics rendering.&lt;/p>
&lt;p>I always like to keep my applications as clean as possible to the users. The system administrator is also a user of the software (during installation at least). So I wanted the application to set the environment properties itself, In this case, I built a nice little Spring bean to handle this. The solution is so simple, that it is almost a brilliant display of what Spring can solve for you. Suddenly, all these environment setting problems turned into a simple Spring configuration problem. Here's how:&lt;/p>
&lt;!-- more -->In the Spring configuration, the whole "headless mode" problem got reduced to this bean definition:
&lt;pre>&lt;code>&amp;lt;bean id=&amp;quot;systemproperty_initializer&amp;quot; 
   class=&amp;quot;com.rolfje.SystemPropertyInitiliazingBean&amp;quot;&amp;gt;
   &amp;lt;property name=&amp;quot;systemProperties&amp;quot;&amp;gt;
      &amp;lt;map&amp;gt;
         &amp;lt;!-- Set headless mode to true, 
              for POI sheet.autoSizeColumn See 
&amp;lt;span&amp;gt;              &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;http://poi.apache.org/hssf/quick-guide.html&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt; 
         --&amp;gt;
         &amp;lt;entry key=&amp;quot;java.awt.headless&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;
     &amp;lt;/map&amp;gt;
   &amp;lt;/property&amp;gt;
&amp;lt;/bean&amp;gt;&amp;lt;/span&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>The code for the SystemPropertyInitilizingBean is really a simple list iterator which walks though the map and sets everything as a system property:&lt;/p>
&lt;pre>&lt;code>/**
 * Bean for automatically initializing System 
 * properties from within a Spring context. 
 */
public class SystemPropertyInitializingBean 
       implements InitializingBean {
        /** Properties to be set */
        private Map systemProperties;
        /** Sets the system properties */
        public void afterPropertiesSet() 
               throws Exception {
                if (systemProperties == null || 
                       systemProperties.isEmpty()) {
                        // No properties to initialize
                        return;
                }
                Iterator i = systemProperties.keySet().iterator();
                while (i.hasNext()) {
                        String key = (String) i.next();
                        String value = (String) systemProperties.get(key);
                        System.setProperty(key, value);
                }
        }
        public void setSystemProperties(Map systemProperties) {
                this.systemProperties = systemProperties;
        }
}
&lt;/code>&lt;/pre>
&lt;p>In my opinion this is a nice and clean solution, which does not impact any of the application code, hides the setting of obscure system properties from the administrator, is simple to the developer, gives room to add comments (see Spring xml above)and is reusable. All in a few lines of code. You can even easily have it parese settings from a config file, and put that into system environment variables without changing a line of code. All in Spring XML.&lt;/p>
&lt;p>Sometimes it's the small things that make you feel nice :-)&lt;/p></description></item><item><title>Hacking Your Way Through Codebases</title><link>https://realrolfje.github.io/rolfje.com/2008/07/02/hacking-your-way-through-codebases/</link><pubDate>Wed, 02 Jul 2008 19:12:32 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/07/02/hacking-your-way-through-codebases/</guid><description>
&lt;p>I found a nice blog post which describes how it is after you leave school and start programming for a real company. You discover that programming is more like 80% reading and 20% coding.&lt;/p>
&lt;p>Read the article at the Tired Architect's blog titled &lt;a href="http://antipattern.wordpress.com/2008/06/19/hacking-your-way-through-codebases/">&amp;quot;Hacking Your Way Through Codebases&amp;quot;&lt;/a>.&lt;/p></description></item><item><title>Migrate CVS repository to GForge</title><link>https://realrolfje.github.io/rolfje.com/2008/03/05/migrate-cvs-repository-to-gforge/</link><pubDate>Tue, 04 Mar 2008 20:26:27 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/03/05/migrate-cvs-repository-to-gforge/</guid><description>
&lt;p>At work we were testdriving &lt;a href="http://www.collab.net/products/sfee/new_4.4.html">SourceForge Enterprise Edition&lt;/a>. It is a great system to keep all your project information, source code, documents, bug reports and changes together, and linked. As you may have noticed, the pricing model of the Enterprise Edition is a well kept secret on the site. Our management bargained with the Colabnet people, but the costs (or TCO) were way to steep to keep SourceForge as our main system.&lt;/p>
&lt;p>Another product which promises to do almost the same thing is &lt;a href="http://gforgegroup.com/es/">GForge Advanced Server&lt;/a>. GForge originally started as a fork of the (then open source) SourceForge code, and is not as advanced as SourceForge is today. But their pricing is more to the likings of our financial people, and we decided it has a good tradeoff between function and price.&lt;/p>
&lt;p>Having said all this, we need to migrate a few projects from SourceForge to GForge. If you'd like to know how to do this, this article is for you. It describes how to get your CVS repository into GForge in 6 steps.&lt;/p>
&lt;!-- more -->
&lt;p>&lt;strong>Step 1: Disabling writer access to CVS in SourceForge&lt;/strong>&lt;/p>
&lt;p>To be on the safe side, block write access to the CVS repository to prevent people from committing (and loosing) changes. You can block access using the settings in your SourceForge project, or modifying the &lt;a href="http://ximbiot.com/cvs/manual/cvs-1.11.22/cvs_2.html#SEC36">&amp;quot;writers&amp;quot; file&lt;/a> to the CVSROOT of your repository. If you're not migrating from a SourceForge machine, you'll probably want to use the latter method.&lt;/p>
&lt;p>&lt;strong>Step 2: Getting the modules from SourceForge&lt;/strong>&lt;/p>
&lt;p>Log into your SourceForge server, go to the root of the CVS tree for your project. In our example, we'll use &amp;quot;project1&amp;quot; and the modules &amp;quot;modulefoo&amp;quot; and &amp;quot;modulebar&amp;quot; (for the &lt;a href="http://en.wikipedia.org/wiki/Foo_bar">foobar&lt;/a> minded). An example ssh session will look like this:&lt;/p>
&lt;pre>&lt;code>[root@projects /]# cd /cvsroot/project1
[root@projects project1]# ls -al
drwxrws--- 10 nobody reps1010 4096 Mar 4 20:12 .
drwxr-sr-x 10 root root 4096 Feb 20 13:59 ..
drwxrwsr-x 3 nobody reps1010 4096 Dec 28 14:23 CVSROOT
drwxrwsr-x 6 nobody reps1010 4096 Mar 4 14:26 modulefoo
drwxrwsr-x 5 nobody reps1010 4096 Mar 4 14:27 modulebar
[root@projects project1]#
tar -czf project1.tar.gz modulefoo modulebar
&lt;/code>&lt;/pre>
&lt;p>Please note that we do not put the CVSROOT in the tar file. This prevents us from overwriting the CVSROOT later on in the GForge repository. After building the tar file, we need to send it to the GForge machine. You can do this by a secure copy. Put the tar file in the home directory of the user you're using to connect to GForge during the copy. We'll move it later.&lt;/p>
&lt;p>Remove the tar file from the SourceForge server and disconnect. We're done at the SourceForge server.&lt;/p>
&lt;p>&lt;strong>Step 3: Add CVS to your GForge project&lt;/strong>&lt;/p>
&lt;p>We need a project to host our sourcefiles (and more). Using a web browser, connect to your GForge machine and create a project, or use an existing one if you've allready done so. Now go into the &amp;quot;Admin&amp;quot; tab of the project, and select &amp;quot;CVS repository&amp;quot; as your scm (Source Code Management) and press Submit:&lt;/p>
&lt;p>&lt;img src="afbeelding-3a.png" alt="Add CVS SCM to GForge">&lt;/p>
&lt;p>After you've done this, you should have a proper CVS repository set up on your GForge server, in which we can unpack the tarfile we've just created.&lt;/p>
&lt;p>&lt;strong>Step 4: Unpack the tar file on the GForge machine&lt;/strong>&lt;/p>
&lt;p>In this example, I'm using the root user for convenience. Depending on your administrator, maybe you're not allowed to be root (for good reason). Should you not have enough permissions to execute any of the following commands in the right locations, ask your administrator to execute Step 4 and 5 for you.&lt;/p>
&lt;p>Log on to the GForge machine, and become root. Move the tar file to the cvsroot location of your project, and unpack the modules there. Your session should look something like this:&lt;/p>
&lt;pre>&lt;code>[root@gforge ~]# cd /cvsroot/project1
[root@gforge project1]# mv /home/someuser/project1.tar.gz .
[root@gforge project1]# tar -xzf project1.tar.gz
[root@gforge project1]# rm project1.tar.gz
[root@gforge project1]# ls -al
drwxrws--- 5 nobody project1 4096 Feb 20 14:20 .
drwxr-xr-x 12 root root 4096 Mar 4 19:49 ..
drwxrwsr-x 3 nobody project1 4096 Feb 20 14:19 CVSROOT
drwxrwsr-x 6 nobody 519 4096 Mar 3 11:57 modulefoo
drwxrwsr-x 7 nobody 519 4096 Feb 20 16:14 modulebar
[root@gforge project1]#
&lt;/code>&lt;/pre>
&lt;p>At this point, the modules are in GForge, but we can not access them yet.&lt;/p>
&lt;p>&lt;strong>Step 5: Setting the permissions&lt;/strong>&lt;/p>
&lt;p>The files and folders in the modules are having the wrong ownership and permissions because they came from a different machine with different users. To be able to set the permissions, we need a username and a group to add to these files. When adding a project in GForge, a group with the same name as the project is also made.&lt;/p>
&lt;p>First we need to change the ownership of the files, without touching the CVSROOT:&lt;/p>
&lt;pre>&lt;code>chown -R nobody:project1 modulefoo modulebar
&lt;/code>&lt;/pre>
&lt;p>Next, we need to set the permissions of all directories (except for CVSROOT) in the tree. We do this by recursively finding all directories in the modules and executing chmod against them. Type the following on 1 line, exactly as shown:&lt;/p>
&lt;pre>&lt;code>find modulefoo modulebar -type d -exec
chmod u+rwx,g+rwxs,o+rx,o-w {} \;
&lt;/code>&lt;/pre>
&lt;p>The files have slightly different permissions. You can set these by typing the following on 1 line, exactly as shown:&lt;/p>
&lt;pre>&lt;code>find modulefoo modulebar -type f -exec
chmod u+r,u-wx,g+r,g-wxs,o+r,o-wx {} \;
&lt;/code>&lt;/pre>
&lt;p>To check that everything has worked, take a look at the file and directory permissions of modulefoo:&lt;/p>
&lt;pre>&lt;code>[root@gforge project1]# ls -al modulefoo
drwxrwsr-x 6 nobody project1 4096 Mar 3 11:57 .
drwxrws--- 5 nobody project1 4096 Feb 20 14:20 ..
drwsrwsr-x 2 nobody project1 4096 Feb 20 14:20 Attic
-r--r--r-- 1 nobody project1 16330 Mar 3 11:57 build.properties,v
-r--r--r-- 1 nobody project1 15195 Mar 3 11:57 .cvsignore,v
...
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>Step 6: Restart and Check GForge Access&lt;/strong>&lt;/p>
&lt;p>CVS access will now work, but in GForge you will get an error in the CVS browser. To get rid of this error you need to restart apache. As root, do:&lt;/p>
&lt;pre>&lt;code>cd /etc/init.d
apachectl restart
&lt;/code>&lt;/pre>
&lt;p>Close your ssh session. Open your browser and go to your GForge server. Open your project, and click on the &amp;quot;CVS&amp;quot; tab on the right. You should now see the root of the project, with modulefoo and modulebar as folders in a list. Congratulations, you're done.&lt;/p>
&lt;p>Should you get the dreaded &amp;quot;Python error&amp;quot; with some rubbish text about not having enough permissions, you did not restart apache, or something went wrong while setting the file permissions and ownershisps. Double check them, and make sure you didn't touch the CVSROOT directory, or the current or parent directories. If you did, simply &lt;a href="http://thedailywtf.com/Articles/Immaculate_Backup_.aspx">restore from your backup&lt;/a> and retry :-)&lt;/p>
&lt;p>Have fun migrating your projects.&lt;/p></description></item><item><title>GForge CVS/SSH Authentication Failures</title><link>https://realrolfje.github.io/rolfje.com/2008/02/26/gforge-cvsssh-authentication-failures/</link><pubDate>Tue, 26 Feb 2008 10:48:26 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/02/26/gforge-cvsssh-authentication-failures/</guid><description>
&lt;p>Recently we had a problem connecting to our GForge CVS through SSH. We added the public RSA key to the GForge user, but because of wrong configuration on the client we tried to connect a couple of times with the wrong key. After a while the GForge CVS will return the following error:&lt;/p>
&lt;p>Received disconnect from &lt;GForge ip>: 2: Too many authentication failures for &lt;username>&lt;/p>
&lt;p>To solve this, simple ask a GForge administrator to edit the GForge user, and press the &amp;quot;Save&amp;quot; button without changing anything. You will be able to reconnect immediately after the administrator has pressed &amp;quot;Save&amp;quot;.&lt;/p></description></item><item><title>Link CVS/SVN commit to GForge Tracker Item</title><link>https://realrolfje.github.io/rolfje.com/2008/02/21/link-cvssvn-commit-to-gforge-tracker-item/</link><pubDate>Thu, 21 Feb 2008 12:47:49 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/02/21/link-cvssvn-commit-to-gforge-tracker-item/</guid><description>
&lt;p>Today I spent some time figuring out what the exact format of the CVS comment is when I want to link a commit to a GForge tracker item. I'll try to explain it a bit simpler:&lt;/p>
&lt;pre>&lt;code> * We have [GForge](http://gforge.org/) installed at work. We use GForge to manage a software project for a customer.
* The customer reports a bug in the Tracker of GForge. This bug gets assigned to me.
* I read the code, find the problem and fix it. Now I want to commit the fix to the GForge integrated CVS, and have it automatically linked to the Tracker item for future reference.
&lt;/code>&lt;/pre>
&lt;p>I spent 30 minutes Googling for an example, and did find a lot of info, but no real usage examples. The info says &amp;quot;Include the tracker item id in the commit comment&amp;quot;. I spent anther 10 to 20 minutes trying to figure out if this meant just the number, the number with the prefix, or brackets, or both. To save more people from searching, you should copy-paste the complete tracker id from the tracker item screen.&lt;/p>
&lt;!-- more -->**Example:**
&lt;p>To connect a CVS commit to Tracker Item 123, use the following comment:&lt;/p>
&lt;p>cvs commit xyz.txt &lt;em>&amp;quot;This is a commit comment for &lt;strong>[#123]&lt;/strong> in GForge project XYZ&amp;quot;&lt;/em>&lt;/p>
&lt;p>GForge will then automatically link the commit to the tracker item(s). You can have multiple item id's in there, and you can also do multiple commits for a single tracker item.&lt;/p>
&lt;p>Another great tip:  Enable the &amp;quot;Require Tracker Item ID on commit&amp;quot; to force people to do this. Then, create a seperate tracker item titled &amp;quot;Generic Work&amp;quot; so that people who are NOT working on a specific Tracker kan still commit. This forces people to think about what thei're committing for.&lt;/p>
&lt;p>One step further would be to have a seperate tracker item for &amp;quot;refactoring&amp;quot; and &amp;quot;configuration management&amp;quot; or have todo tracker items for a release. This way you can link commits to certain types of work, maybe even to a time tracking tool.&lt;/p></description></item><item><title>SVN is missing the point?</title><link>https://realrolfje.github.io/rolfje.com/2008/02/16/svn-is-missing-the-point/</link><pubDate>Sat, 16 Feb 2008 18:54:11 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2008/02/16/svn-is-missing-the-point/</guid><description>
&lt;p>Our company was using Rational Clearcase for version control about 6 years ago. The developers decided it was way to clunky, error prone and WAY too expensive. We introduced CVS and it has been working fine for a few years now. CVS is widely known, stable and simple. I looked into using SVN a few years ago but the clients were unusable at that time. This year, the SVN discussion came to life again and some of my collegues started playing with it after I mentioned it as being a step forward from CVS.&lt;/p>
&lt;!-- more -->We've been using GForge for a few weeks now as an environment to keep all the project information in one place. In the light of the migration discussion from our old environment, SVN was considered because it promised to "solve" a few things for us:
&lt;pre>&lt;code> * Placing a tag on a very large (3GB) repository can be very quick
* Updating the local copy takes less bandwith than with CVS, meaning improved performance when working remotely over a poor connection
* SVN claims to keep the history information when moving or renaming a file (although I think that only applies if you use an SVN client to do the rename/move)
&lt;/code>&lt;/pre>
&lt;p>Now that we've converted/started a few projects in SVN, we find that SVN is maybe not an improvement over CVS after all. The SVN designers have overlooked a few very important things which professional users absolutely need. We had the following problems with SVN:&lt;/p>
&lt;pre>&lt;code> * There is no default eclipse integration. The Subclipse plugin behaves erratic and buggy. Subversive comes with a few SVN adapters of which we are not sure which to pick. The developer side of the SVN/eclipse combo does not work &amp;quot;out of the box&amp;quot;, which adds to setup time and therefore costs money.
* Finding all the revisions and branches of a file is hard in SVN. It requires manually browsing the repository branches and doing compares. For multiple files, this requires major knowledge of SVN and it's tools. Needless to say, that also adds to development time, and therefore costs money.
* Merging branches into the trunk is complicated and requires serious manual administration on the end user side as compared to CVS, see also previous bullet.
* trunk, branches and versions are part of the directory structure. This seems a bit odd to me, because a versioning system should not interfere with my directory structure. We had a lengthy discussion on how to call and place the &amp;quot;trunk&amp;quot;, &amp;quot;branch&amp;quot; and &amp;quot;tag&amp;quot; directories. At the time it sounded good to talk about, but the more I think about it, it seems completely wrong alltogether to me. The version of a file is determined by its place in a tree? That is just plain wierd.
* branches and tags are the same thing in SVN. This means that one could modify a tagged file, and nobody would notice without manual checking. This came as a complete surprise to me. We use CVS tags to tag software versions, and do production support based on those tags.
&lt;/code>&lt;/pre>
&lt;p>From all the discussion and experiences with SVN on some projects, I think I need to re-think my position on SVN. It suddenly doesn't seem al that promising to me. CVS does have it flaws, but because it is fairly simple, we have simple workarounds and fixes for each of them. The bandwith problem is easier solved with a better connection, and finding the history of a renamed file can be solved by having a good comment in the odd ocasion that one needs to rename or move a file.&lt;/p>
&lt;p>SVN positions itself as a CVS replacement, and it had me fooled for a while, but it is really not all that good from an end users perspective. I really don't see the point of having a revision of the whole repository state, as opposed to having a version per file. That, and the fact that a lot of the SVN promises only hold up if you use the command-line SVN client, makes SVN a very weak competitor to the widely used, accepted and stable CVS.&lt;/p>
&lt;p>There are a lot of rants and flames on the net about people having problems because thy &amp;quot;miss atomic commits&amp;quot; for instance. In the past 20 years of my career, they number of problems arising from commits not being atomic was not big. Most of the problems were people doing partial commits, which they could easily also have done with SVN. Most problems are not because of a tool, but because of the humans that use it, and the natural habbit of humans of making mistakes. Atomic commits solves a theoretical problem which does not lead to big problems in CVS.&lt;/p>
&lt;p>The more I think about it, SVN seems to be a nerd's implementation to a theoretical problem, whereas CVS is a pragmatic solution to a real life situation.&lt;/p></description></item><item><title>Essential Color Design Tool</title><link>https://realrolfje.github.io/rolfje.com/2007/10/15/essential-color-design-tool/</link><pubDate>Mon, 15 Oct 2007 19:59:32 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/10/15/essential-color-design-tool/</guid><description>
&lt;p>For those people out there designing user interfaces, web frontends or anything else displayed on a screen: About 8% of all males are color blind. This could mean that because of a simple color choice, 8% of your target audience (customers) could have serious difficulty in using your design. 5% of all males can't distinguish green from red, although they are regarded as high contrast to eachother.&lt;/p>
&lt;p>Do you want to test how your design looks to colorblind people? Now you can, with &lt;a href="http://colororacle.cartography.ch/">Color Oracle&lt;/a>, a tool for Mac OSX and Windows which transposes the colors of your screen to reflect what it would look like if you were color blind. In fact, it can simulate 3 different kinds of color blindness.&lt;/p>
&lt;p>From the site: &lt;em>&amp;quot;Color Oracle takes the guesswork out of designing for color blindness by showing you in real time what people with common color vision impairments will see. Color Oracle applies a full screen color filter to art you are designing – independently of the software that you are using. Eight percent of all males are affected by color vision impairement – make sure that your graphical work is readable by the widest possible audience.&amp;quot;&lt;/em>&lt;/p></description></item><item><title>Programmer Personality Test</title><link>https://realrolfje.github.io/rolfje.com/2007/06/06/programmer-personality-test/</link><pubDate>Tue, 05 Jun 2007 20:18:13 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/06/06/programmer-personality-test/</guid><description>
&lt;p>Just found this funny page where you can take a &lt;a href="http://www.doolwind.com/index.php?page=11">Programmer Personality Check&lt;/a>.&lt;/p>
&lt;p>My programmer personality type is &lt;strong>DHTB&lt;/strong>, which is explained as follows:&lt;/p>
&lt;p>_ You're a &lt;strong>D&lt;/strong>oer.
You are very quick at getting tasks done. You believe the outcome is the most important part of a task and the faster you can reach that outcome the better. After all, time is money._&lt;/p>
&lt;p>&lt;em>You like coding at a &lt;strong>H&lt;/strong>igh level.
The world is made up of objects and components, you should create your programs in the same way.&lt;/em>&lt;/p>
&lt;p>&lt;em>You work best in a &lt;strong>T&lt;/strong>eam.
A good group is better than the sum of it's parts. The only thing better than a genius programmer is a cohesive group of genius programmers.&lt;/em>&lt;/p>
&lt;p>&lt;em>You are a li&lt;strong>B&lt;/strong>eral programmer.
Programming is a complex task and you should use white space and comments as freely as possible to help simplify the task. We're not writing on paper anymore so we can take up as much room as we need.&lt;/em>&lt;/p></description></item><item><title>Parameter List Too Long</title><link>https://realrolfje.github.io/rolfje.com/2007/04/17/parameter-list-too-long/</link><pubDate>Mon, 16 Apr 2007 21:09:53 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/04/17/parameter-list-too-long/</guid><description>
&lt;p>If your are &amp;quot;fortunate&amp;quot; enough to have to delete a lot of file from a directory on a Unix system, you are likely to encounter the &amp;quot;Parameter List Too Long&amp;quot; problem. This problem is caused by Unix trying to replace the &amp;quot;*&amp;quot; you just used by all names in the directory. This list is then passed to the rm command, which complains that it can not handle that much parameters.&lt;/p>
&lt;p>To get around this limitation, you have a couple of options:&lt;/p>
&lt;p>&lt;strong>Delete all files in the current directory&lt;/strong>
By far the fastest and most compatible way to delete all files in the current directory without recursing into subdirectories is:
ls | xargs rm
This is the fastest command, because xargs makes sure the maximum allowed number of parameters is passed to rm, resulting in fewer calls/startups to rm.&lt;/p>
&lt;p>&lt;strong>Delete all files in the current directory and all subdirectories&lt;/strong>
To delete files not only from the current, but also from all subdirectories, use
find . -name &amp;quot;*&amp;quot; -exec rm -rf {} ;
This is somewhat slower, since rm is executed seperately for each file.&lt;/p>
&lt;p>Above commands are tested on AIX and Linux.&lt;/p></description></item><item><title>Thoughts on Widgets, Gadgets, Screenlets</title><link>https://realrolfje.github.io/rolfje.com/2007/04/11/thoughts-on-widgets-gadgets-screenlets/</link><pubDate>Tue, 10 Apr 2007 21:14:27 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/04/11/thoughts-on-widgets-gadgets-screenlets/</guid><description>
&lt;p>Just now, I was listening to the &lt;a href="http://javaposse.com/">Java Posse podcast&lt;/a> about the ab5k screenlet framework for Java, and I am finally convinced that software developers are a bunch of crazy, unrealistic, memory-hungry, cpu cycle stealers and by lack of normal people telling them otherwise are proud of it, too. The problem? Look at this list (no particular order):&lt;/p>
&lt;pre>&lt;code> * [Linux screenlets or applets](http://kde.org/screenshots/images/3.5/35-superkaramba.png)
* [Windows Sidebar Gadgets](http://www.microsoft.com/windows/products/windowsvista/features/details/sidebargadgets.mspx)
* [Apple Dashboard Widgets](http://developer.apple.com/macosx/dashboard.html)
* [Google Desktop Gadgets](http://desktop.google.com/nl/?utm_campaign=nl&amp;amp;utm_source=nl-ha-emea-nl-google&amp;amp;utm_medium=ha&amp;amp;utm_term=google%20widgets)
* [Yahoo Widgets](http://widgets.yahoo.com/)
* and recently added: [ab5k.org java screenlets](http://www.ab5k.org/)
&lt;/code>&lt;/pre>
&lt;!-- more -->As you can see, this list shows what modern OS's are offering to the user as an extra desktop with little applications on them like clocks, calculators, rss readers or whatever small tool you can think of. Aside from having a polished look and feel, looking good in screenshots, and -in the case of OSX- animations, all these share the same problems:
&lt;pre>&lt;code> * Usage of CPU cycles while not visible/used (and I don't care how few, there are some!)
* Usage of wired memory (memory which is not swapped out to disk for windows users), even while being inactive
* Slow loading times when restoring swapped-out widgets (memory swapped to disk which needs to be loaded back into memory)
* While resembling in name (screenlets, widgets, gadgets) not really portable between systems (although ab5k is about to solve that one)
&lt;/code>&lt;/pre>
&lt;p>I was triggered by the &lt;a href="http://javaposse.com/index.php?post_id=201631">Java Posse podcast on ab5k&lt;/a>, where one of the developers said that when the screenlet container was swapped out, it &amp;quot;only&amp;quot; used 24 megs of memory. That 24 megs could be just that 24 meg which makes windows swap out Photoshop to disk. 24 megs is a considerable amount of memory, for something which does absolutely nothing. An argument for *lets is probably the fast load time, but if all of them get swapped out, it would be just as fast just to start them, wouldn't it?&lt;/p>
&lt;p>On my Mac, the dashboard looks great, and the widgets do what they promise. But apart from using it simply because it was new, I really don't use it that much nowadays. Once the coolfactor wears off, you just want it to work, and I think I like it better to have my utilities on the desktop, where I am working, rather than on a seperate cool looking transparent overlay from which I can not drag and drop easily into an application on the desktop.&lt;/p>
&lt;p>Another thing that I realized while listening is that a lot of the functionality of these widgets are developer driven, not end user driven. I think half of the widgets are build by tech-nerds, but only 10% of the widgets actually end up being used by normal end-users.&lt;/p>
&lt;p>My point is: Can we please stop using the dashboard containers and just build these utilities so they are normal, small, self-contained, fast loading applications which just do what they are designed for, and exit (as in: die and free up memory) when closed? I think this will free up a lot of memory on a lot of systems, and puts CPU cycles to a better use, giving the user more control of what the computer is doing for him, and what he doesn't want the computer to do for him. And if these utilities are in a self-contained package like Apple applications, people can actually uninstall them without leaving a lot of crap behind on the system. Say no to setup.exe!&lt;/p>
&lt;p>I guess the faster computers we buy, the greedier developers get.&lt;/p></description></item><item><title>Java 5 BigDecimal.toString() and Oracle 10g jdbc</title><link>https://realrolfje.github.io/rolfje.com/2007/01/31/java-5-bigdecimaltostring-and-oracle-10g-jdbc/</link><pubDate>Tue, 30 Jan 2007 21:30:58 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/01/31/java-5-bigdecimaltostring-and-oracle-10g-jdbc/</guid><description>
&lt;p>Yesterday a collegue of mine discovered a very ugly problem when storing BigDecimals from a Java 1.5 program into an Oracle 10g database. Not by experience, but by reading the article at &lt;a href="http://www.javalobby.org/java/forums/t88158.html">http://www.javalobby.org/java/forums/t88158.html&lt;/a>. We had not encountered the problem ourselves, but when passing the dredded 12500000 value to the BigDecimal constructor and passing it to the database, we discovered that we too were affected by this bug. So off I went to search a solution.&lt;/p>
&lt;p>The root of the problem lies not only in the fact that the BigDecimal.toString() method behaviour has changed in Java 1.5, but also the way BigDecimals are constructed. The Oracle driver relies on a specific formatting of the BigDecimal.toString() method, and can not handle the output of the &amp;quot;new and improved&amp;quot; BigDecimal in Java 1.5. All discussions about not using toString() for passing values and flaming Oracle and/or Sun aside, we have no option but to fix the problem right now. Oracle promised to fix this problem not sooner than in release 11g, so waiting is not an option.&lt;/p>
&lt;p>&lt;strong>Option 1: Overriding BigDecimal.toString()&lt;/strong>
In our project, we use Ibatis. This gives us a nice handle to implement our own BigDecimalTypeHandler, where we can choose to do anything to the BigDecimal before storing it into the database, and revert that when retrieving it from the databse. One of the options we thought of was to override the BigDecimal's toString in an anonymous subclass inside our IbatisTypeHandler, like so:&lt;/p>
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;
public void setParameter(PreparedStatement ps, int i,
Object parameter, String jdbcType)
throws SQLException {
BigDecimal colVal = new BigDecimal(
((BigDecimal)parameter).toPlainString()){
public String toString(){
return toPlainString();
}
};
ps.setBigDecimal(i, colVal);
}&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>The anonymous subclass lets you add or change behaviour to an existing class without cluttering your codebase with a classfile which looks rather strange when places out of context. We tried various ways of locally changing the behaviour of BigDecimal to make it go into and out of the database in a way that our unittest would not know the difference, but at some point gave up. There is not really a good way to do this without compromising in scale or resolution in the conversion.&lt;/p>
&lt;p>When using the setParameter described above, you ** will not** get a situation where originalBigDecimal.equals(storedBigDecimal) returns true. In most cases this will not be a very big problem, since originalBigDecimal.subtract(storedBigDecimal) will always return 0.&lt;/p>
&lt;p>If somebody thinks of a way to store BigDecimals into the database and retrieving them in a way it is totally transparent to the caller (compared to JDK 1.4 behaviour) please feel free to post it here.&lt;/p>
&lt;p>**Option 2: Loosing your BigDecimals **&lt;/p>
&lt;p>Perhaps this option had to be considered when thinking of using BigDecimals in the first place. BigDecimals are very awkward to calculate with, are relatively heavy both performance and memory wise. Very often they get converted to doubles before doing any calculations with them, which eliminates most of the reasons for using BigDecimals anyway.&lt;/p>
&lt;p>The easy way to loose only those BigDecimals which get stored in the Database, rewrite the typeHandler you just created into the following:&lt;/p>
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;
public void setParameter(PreparedStatement ps, int i,
Object parameter, String jdbcType)
throws SQLException {
throw new UnsupportedOperationException(
&amp;quot;Oracle can not handle Java 5 BigDecimals properly&amp;quot;);
}&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Now, run all Unittest (you have unittests covering at least 80% of your software, don't you?) and replace BigDecimals with other appropriate datatypes where you see the UnsupportedOperation popup.&lt;/p></description></item><item><title>Lost Oracle SYS and SYSTEM password?</title><link>https://realrolfje.github.io/rolfje.com/2007/01/16/lost-oracle-sys-and-system-password/</link><pubDate>Mon, 15 Jan 2007 21:09:26 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2007/01/16/lost-oracle-sys-and-system-password/</guid><description>
&lt;p>If your administration is as good as anybodies, you are bound to loose the not-so-frequently used password for the SYS and SYSTEM users of oracle. Here are a few ways I found to re-set those passwords:&lt;/p>
&lt;p>&lt;strong>Method 1: SQLPLUS (Tested on AIX Oracle 9.2.0.1.0)&lt;/strong>&lt;/p>
&lt;p>Log into the database server as a user belonging to 'dba' [unix ] or 'ora_dba' [windows ] group , typically 'oracle', or an administrator on your windos machine. You are able to log into Oracle as SYS user, and change the SYSTEM password by doing the following:&lt;/p>
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;$ &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;sqlplus &amp;quot;/ as sysdba&amp;quot;&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SQL*Plus: Release 9.2.0.1.0 - Production on Mon Apr 5 15:32:09 2004&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;Copyright (c) 1982, 2002, Oracle Corporation. All rights reserved.&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;Connected to:
Oracle9i Enterprise Edition Release 9.2.0.1.0 - Production
With the OLAP and Oracle Data Mining options
JServer Release 9.2.0.1.0 - Production&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SQL&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;show user&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;USER is &amp;quot;SYS&amp;quot;&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SQL&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;passw system&amp;lt;/span&amp;gt;
Changing password for system
New password:
Retype new password:
Password changed
SQL&amp;gt; &amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;quit&amp;lt;/span&amp;gt;
&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Next, we need to change the password of SYS:&lt;/p>
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;$ &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;sqlplus &amp;quot;/ as system&amp;quot;&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SQL*Plus: Release 9.2.0.1.0 - Production on Mon Apr 5 15:36:45 2004&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;Copyright (c) 1982, 2002, Oracle Corporation. All rights reserved.&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SP2-0306: Invalid option.
Usage: CONN[ECT] [logon] [AS {SYSDBA|SYSOPER}]
where &amp;lt;logon&amp;gt; ::= &amp;lt;username&amp;gt;[/&amp;lt;password&amp;gt;][@&amp;lt;connect_string&amp;gt;] | /
Enter user-name: system
Enter password:&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;Connected to:
Oracle9i Enterprise Edition Release 9.2.0.1.0 - Production
With the OLAP and Oracle Data Mining options
JServer Release 9.2.0.1.0 - Production&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;
&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;/tt&amp;gt;&amp;lt;tt&amp;gt;&amp;lt;span style=&amp;quot;color:gray;&amp;quot;&amp;gt;SQL&amp;gt; &amp;lt;/span&amp;gt;&amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;passw sys&amp;lt;/span&amp;gt;
Changing password for sys
New password:
Retype new password:
Password changed
SQL&amp;gt; &amp;lt;span style=&amp;quot;color:blue;&amp;quot;&amp;gt;quit&amp;lt;/span&amp;gt;
&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>You should now be able to log on the SYS and SYSTEM users, with the passwords you just typed in.&lt;/p>
&lt;p>&lt;strong>Method 2: Creating pwd file (Tested on Windows Oracle 8.1.7)&lt;/strong>&lt;/p>
&lt;pre>&lt;code> 1. Stop the Oracle service of the instance you want to change the passwords of.
2. Find the PWD###.ora file for this instance, this is usuallly located atC:\oracle\ora81\database\, where ### is the SID of your database.
3. rename the PWD###.ora file to PWD###.ora.bak for obvious safety reasons.
4. Create a new pwd file by issuing the command:
&lt;/code>&lt;/pre>
&lt;p>orapwd file=C:\oracle\ora81\database\PWD###.ora password=XXXXX
where ### is the SID and XXXXX is the password you would like to use for the SYS and INTERNAL accounts.
5. Start the Oracle service for the instance you just fixed. You should be able to get in with the SYS user and change other passwords from there.&lt;/p></description></item><item><title>Ibatis Nullpointer calling stored procedure</title><link>https://realrolfje.github.io/rolfje.com/2006/11/07/ibatis-nullpointer-calling-stored-procedure/</link><pubDate>Tue, 07 Nov 2006 19:53:14 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2006/11/07/ibatis-nullpointer-calling-stored-procedure/</guid><description>
&lt;p>Today, a collegue of mine had a really strange nullpointer problem trying to call a stored procedure in an Oracle 10 database using &lt;a href="http://ibatis.apache.org/javadownloads.html">iBATIS Java 2.2.0&lt;/a>. What she had was a normal JavaBean, like so: &lt;/p>
&lt;pre>&lt;code>package com.rolfje.foo
public class BarBean {
private String barName;
private Long barId;
... setters/getters here ...
}
&lt;/code>&lt;/pre>
&lt;p>A straightforward parametermap:&lt;/p>
&lt;pre>&lt;code>&amp;lt;parameterMap class=&amp;quot;com.rolfje.foo.BarBean&amp;quot;
id=&amp;quot;barbeanMap&amp;quot;&amp;gt;
&amp;lt;parameter property=&amp;quot;barName&amp;quot; /&amp;gt;
&amp;lt;parameter property=&amp;quot;barId&amp;quot; /&amp;gt;
&amp;lt;/parameterMap&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>and a straightforward procedure mapping:&lt;/p>
&lt;pre>&lt;code>&amp;lt;procedure id=&amp;quot;insertBar&amp;quot; parameterMap=&amp;quot;barbeanMap&amp;quot;&amp;gt;
{ call store_bar (
?,?)
}
&amp;lt;/procedure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>When trying to call the stored procedure, she got the following stacktrace:&lt;/p>
&lt;pre>&lt;code>org.springframework.jdbc.UncategorizedSQLException: SqlMapClient operation;
uncategorized SQLException for SQL [];
SQL state [null]; error code [0];
--- The error occurred in com/rolfje/foo/sqlmaps/ParameterMap.xml.
--- The error occurred while applying a parameter map.
--- Check the barBeanMap.
--- Check the statement (update procedure failed).
--- Cause: java.lang.NullPointerException; nested exception is
com.ibatis.common.jdbc.exception.NestedSQLException:
--- The error occurred in com/rolfje/foo/sqlmaps/ParameterMap.xml.
--- The error occurred while applying a parameter map.
--- Check the barBeanMap.
--- Check the statement (update procedure failed).
--- Cause: java.lang.NullPointerException
Caused by: java.lang.NullPointerException
Caused by: com.ibatis.common.jdbc.exception.NestedSQLException:
--- The error occurred in com/rolfje/foo/sqlmaps/ParameterMap.xml.
--- The error occurred while applying a parameter map.
--- Check the barBeanMap.
--- Check the statement (update procedure failed).
--- Cause: java.lang.NullPointerException
Caused by: java.lang.NullPointerException
at ...executeQueryWithCallback(GeneralStatement.java:188)
at ...executeQueryForObject(GeneralStatement.java:104)
at ...queryForObject(SqlMapExecutorDelegate.java:565)
...
&lt;/code>&lt;/pre>
&lt;p>After hours of staring at the problem, and comparing code with similar constructions from other projects, we decided to switch to the Oracle 9i thin driver to see if that would solve the problem. It didn't, but there was an interesting development: The Oracle 9i driver actually gave us a decent error about not being able to parse the SQL statement. Which brings us to...&lt;/p>
&lt;p>&lt;strong>The solution:&lt;/strong>
We removed all layout from the procedure mapping, which resulted in:&lt;/p>
&lt;pre>&lt;code>&amp;lt;procedure id=&amp;quot;insertBar&amp;quot; parameterMap=&amp;quot;barbeanMap&amp;quot;&amp;gt;
{call store_bar (?,?)}
&amp;lt;/procedure&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>This solved the problem. Then we switched back to the Oracle 10i thin driver, and the problem was still gone. The problem lies in the TAB between the left curly bracket and the word &amp;quot;call&amp;quot;. Oracle can not handle this.To investigate this problem, we then also tried to insert &lt;![CDATA[ ]]> around the procedure call, but as soon as there is a TAB between the { and the word &amp;quot;call&amp;quot; iBATIS will throw a NullPointer. The strange thing is that you can have spaces, newlines and tabs &lt;em>anywhere&lt;/em> in the procedure mapping, as long as there is no TAB between the left curly and the word &amp;quot;call&amp;quot;.&lt;/p></description></item><item><title>Welcome www.rolfje.com readers!</title><link>https://realrolfje.github.io/rolfje.com/2006/10/20/welcome-wwwrolfjecom-readers/</link><pubDate>Fri, 20 Oct 2006 19:47:22 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2006/10/20/welcome-wwwrolfjecom-readers/</guid><description>
&lt;p>Because the update process of my old site was much more hassle than typing a post, I noticed that my blog was better maintained than my site. Therefore I have decided to redirect traffic to my domain (rolfje.com) to my blog. You can still find the original content of &lt;a href="http://www.rolfje.com">www.rolfje.com&lt;/a> at &lt;a href="http://www.xs4all.nl/%7Errolfje/">http://www.xs4all.nl/~rrolfje/&lt;/a>.&lt;/p>
&lt;!-- more -->To be able to do this I had to strip the original content of the "link protection script" which would lead you to www.rolfje.com in case somebody framed my site in his site. I discovered I could do this without even uploading the whole site again (I can't figure out how to get my homebrew perl synchronization script working again). I wrote the following short script called "fixlinks.sh" and placed in my home dir on the server:
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;
#!/bin/sh
sed -e 's@window.location = &amp;quot;http://www.rolfje.com/&amp;quot;;
... @/* window.location = &amp;quot;http://www.rolfje.com/&amp;quot;; */@'
... $1 &amp;gt; $1.new
mv $1.new $1
echo processed $1
&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>(the &amp;quot;...&amp;quot; indicating a wrapped line here) and then issued the following command from the WWW directory:&lt;/p>
&lt;pre>&lt;code>&amp;lt;tt&amp;gt;
find . -name &amp;quot;*.htm?&amp;quot; -type f -exec ~/fixlinks.sh {} \;
&amp;lt;/tt&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>From now on, the pages no longer care where they're linked from. The content is pretty outdated and only interesting for racers still having a Proceed, so I guess that the whole issue of people framing my site to make believe they have the &amp;quot;scoops&amp;quot; is no longer a problem.&lt;/p>
&lt;p>Enjoy the new content and/or setup. If you can't find what you're looking for, give a shout, I can include another radio button in the search on my site to include the original &lt;a href="http://www.rolfje.com">www.rolfje.com&lt;/a> content.&lt;/p></description></item><item><title>Killing oracle sessions, the easy (JDBC) way.</title><link>https://realrolfje.github.io/rolfje.com/2006/02/23/killing-oracle-sessions-the-easy-jdbc-way/</link><pubDate>Wed, 22 Feb 2006 20:27:40 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2006/02/23/killing-oracle-sessions-the-easy-jdbc-way/</guid><description>
&lt;p>Does Oracle complain about not being able to drop a table for a currently connected user, but you are sure you disconnected? Do the sessions &amp;quot;hang&amp;quot; in &amp;quot;inactive&amp;quot; state? Just log on as system, and execute the following query: &lt;/p>
&lt;pre>&lt;code>SELECT
'ALTER SYSTEM KILL SESSION ''' || sid || ',' || serial# || '''; --',
s.sid,
s.serial#,
s.osuser,
s.username,
s.program,
status
FROM v$session s
WHERE status = 'INACTIVE';
&lt;/code>&lt;/pre>
&lt;p>You will get a list of statements you need to execute (just copy-pase) to kill the inactive sessions. Don't listen to the guys telling you to do intricate System Administrator stuff on a command prompt, just use any JDBC tool.&lt;/p>
&lt;p>&lt;strong>EDIT:&lt;/strong> Single query which also lists the kill command if the &amp;quot;alter system kill session&amp;quot; trick did not work:&lt;/p>
&lt;pre>&lt;code>SELECT
'ALTER SYSTEM KILL SESSION ''' || s.sid || ',' || s.serial# ||
'''; -- kill -9 ' || p.spid,
s.sid,
s.serial#,
p.spid,
s.username,
s.program,
s.status
FROM v$session s, v$process p
WHERE s.paddr = p.addr
and (s.state='INACTIVE' or s.state='KILLED');
&lt;/code>&lt;/pre>
&lt;p>Thanks Bas en Jeroen!&lt;/p></description></item><item><title>Tapestry/OGNL: Could not find an adaptor for class XYZ</title><link>https://realrolfje.github.io/rolfje.com/2006/02/07/tapestryognl-could-not-find-an-adaptor-for-class-xyz/</link><pubDate>Mon, 06 Feb 2006 20:47:21 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2006/02/07/tapestryognl-could-not-find-an-adaptor-for-class-xyz/</guid><description>
&lt;p>Getting the &amp;quot;Could not find an adaptor for class Foo&amp;quot; Mesage in Tapestry? You probably forgot to make your class Serializable. A simple description of a possible problematic situation follows: &lt;/p>
&lt;!-- more -->Suppose you have some simple class, like so:
&lt;pre>&lt;code>public class MyItem {
private String itemname;
public String getItemname() {
return itemname;
}
}
&lt;/code>&lt;/pre>
&lt;p>And somewhere in your Tapestry page or component, you iterate a list of these items to produce directlinks for each of them:&lt;/p>
&lt;pre>&lt;code>&amp;lt;span jwcid=&amp;quot;@Foreach&amp;quot; source=&amp;quot;ognl:myItems&amp;quot; value=&amp;quot;ognl:loopItem&amp;quot;&amp;gt;
&amp;lt;a jwcid=&amp;quot;@DirectLink&amp;quot; listener=&amp;quot;ognl:listeners.myItemListener&amp;quot;
parameters=&amp;quot;ognl:new java.lang.Object[] {loopItem}&amp;quot;&amp;gt;
&amp;lt;span jwcid=&amp;quot;@Insert&amp;quot; value=&amp;quot;ognl:loopItem.itemname&amp;quot;/&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>In your page definition, you have created a nice listener method which you expect to be called:&lt;/p>
&lt;pre>&lt;code>public void myItemListener(IRequestCycle cycle){
MyItem item = (MyItem)cycle.getServiceParameters()[0];
System.out.println(
&amp;quot;Hi, you have pressed the link for &amp;quot;
+ item.getItemname());
}
&lt;/code>&lt;/pre>
&lt;p>You start everything up, but when loading the page, Tapestry complains:&lt;/p>
&lt;pre>&lt;code>org.apache.tapestry.ApplicationRuntimeException:
Could not find an adaptor for class MyItem.
&lt;/code>&lt;/pre>
&lt;p>... and a horrific stacktrace follows, which you can't read or understand because it is all about AbstractComponent.renderbody and other internals of Tapestry and your webserver. Although the error is terrible, and does not point you anywhere, the fix is rather simple. You forgot to make your class Serializable! Changing it to :&lt;/p>
&lt;pre>&lt;code>public class MyItem implement Serializable {
private String itemname;
public String getItemname() {
return itemname;
}
}
&lt;/code>&lt;/pre>
&lt;p>fixes the problem, because now Tapestry can serialize your object into the session, and pass it as a parameter to the listener.&lt;/p></description></item><item><title>Ibatis and Timestamps (2)</title><link>https://realrolfje.github.io/rolfje.com/2005/07/04/ibatis-and-timestamps-2/</link><pubDate>Mon, 04 Jul 2005 13:09:19 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2005/07/04/ibatis-and-timestamps-2/</guid><description>
&lt;p>People who have read my &lt;a href="http://rolfje.wordpress.com/2005/07/01/ibatis-and-timestamps/">last post&lt;/a> are now probably removing the Date classes from their beans, replacing the code with things as new Long(new Date.getTime()) and such. This is also what I started doing, until a collegue of mine pointed out that the TypeHandler I wrote last saturday could also do the trick. This would mean my beans could still contain clean Dates. I was so close, and failed to realize that I (or ibatis) had that power.&lt;/p>
&lt;p>So I set out to do this and it works wonderfully. What I did was the following. I changes all postgres timestamp fields to bigints, like you read yesterday. I left my beans unchanged, containing java.util.Date objects for representing dates. So now all we need to do is write a typehandler which converts the date to a long and back, so Postgress and the buggy JDBC driver don't realize it's actually a Date.&lt;/p>
&lt;p>To do this I wrote the following TypeHandler:&lt;/p>
&lt;pre>&lt;code>public class DateTypeHandler
implements TypeHandlerCallback {
public void setParameter(ParameterSetter setter,
Object parameter)
throws SQLException {
if (parameter == null) {
setter.setNull(Types.BIGINT);
} else {
Date datetime = (Date) parameter;
setter.setLong(datetime.getTime());
}
}
public Object getResult(ResultGetter getter)
throws SQLException {
long millis = getter.getLong();
if (getter.wasNull()) {
return null;
}
return new Date(millis);
}
public Object valueOf(String s) {
return s;
}
}
&lt;/code>&lt;/pre>
&lt;p>Now, all we need to do is tell ibatis to use this typehandler whenever we try to insert or retreive a java.util.Date. We do this by adding the following line to the ibatis SqlMapConfig.xml file, just after the typealias definitions:&lt;/p>
&lt;pre>&lt;code>&amp;lt;typeHandler javaType=&amp;quot;java.util.Date&amp;quot;
callback=&amp;quot;com.bestlaps.database.typehandlers.DateTypeHandler&amp;quot;/&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>After doing this, you can cary on doing things as normal. Beans can contain java.util.Date, and ibatis happily inserts and retreives them in postgres bigint columns without any timezone conversion. Please note that timezones are not stored at all here, so when you retreive a Date from the database, the java.util.Date object will have your local JVM's devault timesone offset. You can happily ignore this, especially if you're not going to do any calculations with it.&lt;/p>
&lt;p>The beauty of this solution is, that when there is a solution for the silly timezone conversion problem/bug, we can simply convert all database fields to timestamps, and remove the typehandler reference from the SqlMapConfig.xml file, and you're all set without changing a single line of code.&lt;/p>
&lt;p>Thanks Joris!&lt;/p></description></item><item><title>Ibatis and Timestamps</title><link>https://realrolfje.github.io/rolfje.com/2005/07/01/ibatis-and-timestamps/</link><pubDate>Fri, 01 Jul 2005 13:05:31 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2005/07/01/ibatis-and-timestamps/</guid><description>
&lt;p>I am using Ibatis and PostgreSQL for this great project, &lt;a href="http://www.bestlaps.com/">www.bestlaps.com&lt;/a>. However, we've recently ran into a strange problem where we store a java.util.Date into a postgress TIMEZONE column, which works fine. However, when you want to retreive it, Ibatis returns a &amp;quot;StringIndexOutofBoundsException&amp;quot; at position 23. For some reason, the result returned by Postgres can not be converted back into a java.util.Date.&lt;/p>
&lt;p>I've tried really hard to circumvent this problem with custom setter methods (parsing the results myself), and using jodatime (a great java date and time replacement library). The fix is as simple as it is strange: Make Ibatis convert the timestamp into a java.&lt;strong>sql&lt;/strong>.Date, without changing your code.&lt;/p>
&lt;p>So: You have your normal bean, in which you use java.&lt;strong>util&lt;/strong>.Date. Then, make your Ibatis sqlMap as usual, but for the timestamp column you put the following in the resultmap: javaType=&amp;quot;java.&lt;strong>sql&lt;/strong>.Date&amp;quot;.&lt;/p>
&lt;p>Strange, but it works for now. Maybe more info on this later.&lt;/p>
&lt;p>&lt;strong>UPDATE&lt;/strong>: Okay, after spending the whole weekend with this problem I discovered that the trick I just described does noet work. java.sql.Date has no time component, so when you retreive it, your java.util.Date in the bean will have a 00:00 time. So I had to search a bit further.&lt;/p>
&lt;p>When querying with SquirrelSQL, I can insert and retreive a timestamp to and from Postgress without it being changed. So it seems that it is no Postgress bug. When I am using Ibatis to insert a java.util.Date into Postgress, it gets &amp;quot;timezone corrected&amp;quot;, although I specifically told Postgress to store timestamps without timezones.&lt;/p>
&lt;p>The time gets corrected by 2 hours. This seems to come from the util.Date class, which seems to have a default offset of -120 minutes, although I did not set that, and did not request any timezone to be set.&lt;/p>
&lt;p>I tried to make my own typeHandler for Ibatis, where I could convert the java.util.Date to a java.sql.TimeStamp, and give it directly to the PreparedStatement. But even that did not help. I am guessing the bug is in the Postgress JDBC driver, although that conflicts with the fact that SquirelSQL (which is als a Java/JDBC program) can do it.&lt;/p>
&lt;p>&lt;strong>THE FIX&lt;/strong>: After more than 16 hours (!) of research I decided I would go for the workaround. We are behind schedule allready for the &lt;a href="http://www.bestlaps.com/">www.bestlaps.com&lt;/a> project, so I needed a quick fix. The way to go was dissapointingly simple: Convert Date's to Longs (with getTime()) and store the Longs in the database as number. This way ibatis and postgress don't know that it's a time. Pay attention to the fact that you need a postgress BIGINT to store the large number of milliseconds since the epoch.&lt;/p>
&lt;p>**Final thoughts: **It seems that people who do not know how to handle timezones have built code to handle timezones. For Java, Postgres, Ibatis, or somewhere around that neighbourhood. Oh well, we knew that Java doesn't have a great Date system. A promising solution I found (but not used yet) is &lt;a href="http://www.theserverside.com/news/thread.tss?thread_id=32005">JodaTime&lt;/a>.&lt;/p>
&lt;p>I really hope the bug gets fixed soon so I can have proper dates in the database when we go live. For now, Longs work (and will probably stay in to the end of time).&lt;/p></description></item></channel></rss>