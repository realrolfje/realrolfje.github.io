<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding on www.rolfje.com</title><link>https://realrolfje.github.io/rolfje.com/tags/coding/</link><description>Recent content in Coding on www.rolfje.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright © rolfje.com</copyright><lastBuildDate>Fri, 04 Sep 2015 21:16:29 +0000</lastBuildDate><atom:link href="https://realrolfje.github.io/rolfje.com/tags/coding/index.xml" rel="self" type="application/rss+xml"/><item><title>How to get your users to install JCE</title><link>https://realrolfje.github.io/rolfje.com/2015/09/04/how-to-get-your-users-ton-install-jce/</link><pubDate>Fri, 04 Sep 2015 21:16:29 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2015/09/04/how-to-get-your-users-ton-install-jce/</guid><description>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Cryptography">&lt;img src="220px-lorenz-sz42-2.jpg" alt="220px-Lorenz-SZ42-2">
&lt;/a>In every Java project where I need to do strong cryptography, I run into these dreaded unreadable stacktraces which send you into the woods. After a long search I usually discover that the Unlimited Strength &lt;a href="https://en.wikipedia.org/wiki/Java_Cryptography_Extension">Java Cryptography Extensions&lt;/a> are not installed. To prevent frustration of users of your software, you can simply add a bit of informative logging to help him/her solve it when the solution is known.&lt;/p>
&lt;!-- more -->Add the following code to help your admins solve the limited cryptography problem without having to ask you:
&lt;p>[sourcecode language=&amp;quot;java&amp;quot; padlinenumbers=&amp;quot;true&amp;quot;]
public static void validateJCEUnlimited() {
final int unlimited = 2_147_483_647; /* 32 bit max int */&lt;/p>
&lt;p>// Ciphers to check for installation of the Java
// Cryptography Extension (JCE) unlimited strength
// jurisdiction policy files
final String[] ciphers = {
&amp;quot;AES&amp;quot;, &amp;quot;BouncyCastle&amp;quot;, &amp;quot;X.509&amp;quot;,
&amp;quot;PKCS12&amp;quot;, &amp;quot;BCPKCS12&amp;quot;, &amp;quot;PKCS12-DEF&amp;quot;,
&amp;quot;DES&amp;quot;, &amp;quot;DESEDE&amp;quot;, &amp;quot;RSA&amp;quot;, &amp;quot;DSA&amp;quot;,
&amp;quot;SHA-1&amp;quot;, &amp;quot;SHA-256&amp;quot;, &amp;quot;SHA-512&amp;quot;
};&lt;/p>
&lt;p>for (String cipher : ciphers) {
int keyLength = 0;
try {
keyLength = Cipher.getMaxAllowedKeyLength(cipher);
} catch (NoSuchAlgorithmException e) {
throw new RuntimeException(&amp;quot;Problem while checking the maximum key length of cipher &amp;quot; + cipher + &amp;quot;.&amp;quot;, e);
}&lt;/p>
&lt;pre>&lt;code>if (keyLength &amp;lt; unlimited) {
String msg = String.format(&amp;quot;The maximum allowed key length for cipher %s was %d.\n&amp;quot; +
&amp;quot;This indicates that you might not have installed the Java Cryptography \n&amp;quot; +
&amp;quot;Extension (JCE) unlimited strength jurisdiction policy files in your JVM.\n&amp;quot; +
&amp;quot;To do so, download these policy files at:\n\n&amp;quot; +
&amp;quot;Java 6: http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html\n&amp;quot; +
&amp;quot;Java 7: http://www.oracle.com/technetwork/java/javase/downloads/jce-7-download-432124.html\n&amp;quot; +
&amp;quot;Java 8: http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html\n\n&amp;quot; +
&amp;quot;Then, copy local_policy.jar and US_export_policy.jar extracted from above zip file to\n&amp;quot; +
&amp;quot;the $JAVA_HOME/jre/lib/security directory.\n&amp;quot;, cipher, keyLength);
throw new RuntimeException(msg);
}
&lt;/code>&lt;/pre>
&lt;p>}
}
[/sourcecode]&lt;/p>
&lt;p>Happy coding,
Rolf&lt;/p></description></item></channel></rss>