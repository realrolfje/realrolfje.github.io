<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>jaxb on www.rolfje.com</title><link>https://realrolfje.github.io/rolfje.com/tags/jaxb/</link><description>Recent content in jaxb on www.rolfje.com</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© rolfje.com</copyright><lastBuildDate>Mon, 08 Jun 2015 21:43:22 +0000</lastBuildDate><atom:link href="https://realrolfje.github.io/rolfje.com/tags/jaxb/index.xml" rel="self" type="application/rss+xml"/><item><title>Solving the JAXB "unexpected element" problem</title><link>https://realrolfje.github.io/rolfje.com/2015/06/08/solving-the-jaxb-unexpected-element-problem/</link><pubDate>Mon, 08 Jun 2015 21:43:22 +0000</pubDate><guid>https://realrolfje.github.io/rolfje.com/2015/06/08/solving-the-jaxb-unexpected-element-problem/</guid><description>
&lt;p>&lt;a href="1.jpg">&lt;img src="1.jpg?w=135" alt="-1">
&lt;/a>If you are using &lt;a href="https://en.wikipedia.org/wiki/Java_Architecture_for_XML_Binding">JAXB&lt;/a> in a maven/java project to unmarshal an XML document and you get:&lt;/p>
&lt;blockquote>javax.xml.bind.UnmarshalException: unexpected element (uri:"urn:iso:std:somestuff:xsd:somestuff", local:"Document"). Expected elements are (none)&lt;/blockquote>
&lt;p>Or if you are using JAXB to marshal an XML document and you get:&lt;/p>
&lt;blockquote>com.sun.istack.internal.SAXException2: unable to marshal type "generated.somestuff.Document" as an element because it is missing an @XmlRootElement annotation&lt;/blockquote>
&lt;p>You have probably fallen victim of the fact that JAXB does not do &amp;quot;Simple Binding&amp;quot; by default. If your project is a maven project and you generated classes based on an xsd file, this is how you fix it (without changing the xsd file):&lt;/p>
&lt;!-- more -->Tell JAXB to do "simple binding". To do so, create a binding file called src/main/resources/jaxb/simple-binding.xml with the following contents:
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot;]
&amp;lt;jaxb:bindings jaxb:extensionBindingPrefixes=&amp;quot;xjc&amp;quot; version=&amp;quot;2.1&amp;quot;
xmlns:jaxb=&amp;quot;http://java.sun.com/xml/ns/jaxb&amp;quot;
xmlns:xjc=&amp;quot;http://java.sun.com/xml/ns/jaxb/xjc&amp;quot;&amp;gt;
&lt;a href="jaxb:globalBindings">jaxb:globalBindings&lt;/a>
&lt;a href="xjc:simple/">xjc:simple/&lt;/a>
&amp;lt;/jaxb:globalBindings&amp;gt;
&amp;lt;/jaxb:bindings&amp;gt;
[/sourcecode]&lt;/p>
&lt;p>Then, add the following options to the execution of your jaxb2-maven-plugin (highlighted):&lt;/p>
&lt;p>[sourcecode language=&amp;quot;xml&amp;quot; highlight=&amp;quot;13,14,15&amp;quot;]
&lt;plugin>
&lt;groupId>org.codehaus.mojo&lt;/groupId>
&lt;artifactId>jaxb2-maven-plugin&lt;/artifactId>
&lt;version>1.5&lt;/version>
&lt;executions>
&lt;execution>
&lt;id>somestuff&lt;/id>
&lt;goals>
&lt;goal>xjc&lt;/goal>
&lt;/goals>
&lt;configuration>
&lt;clearOutputDir>false&lt;/clearOutputDir>
&lt;extension>true&lt;/extension>
&lt;bindingDirectory>${basedir}/src/main/resources/jaxb&lt;/bindingDirectory>
&lt;bindingFiles>simple-binding.xjb&lt;/bindingFiles>
&lt;staleFile>${project.build.directory}/jaxb2/.somestuff.StaleFlag&lt;/staleFile>
&lt;packageName>generated.somestuff&lt;/packageName>
&lt;schemaDirectory>${basedir}/src/main/resources/schemas&lt;/schemaDirectory>
&lt;schemaFiles>somestuff.xsd&lt;/schemaFiles>
&lt;/configuration>
&lt;/execution>
&lt;/executions>
&lt;/plugin>
[/sourcecode]&lt;/p>
&lt;p>You should be able to re-generate the jaxb code now, and parsing should work. In order to test if you have this problem, and to ensure that it does not come back after somebody changes your build file, create a unittest which marshals a java object into xml, and then unmarshalls the generated xml back into an object:&lt;/p>
&lt;p>[sourcecode language=&amp;quot;java&amp;quot;]
// Create document objects (JAXB Generated classes)
Document sourceDocument = new Document();
sourcedocument.setSomeElement(new SomeElement());&lt;/p>
&lt;p>JAXBContext jaxbContext = JAXBContext.newInstance(Document.class);&lt;/p>
&lt;p>// Write Document
File file = File.createTempFile(&amp;quot;sometempstuff&amp;quot;, &amp;quot;.xml&amp;quot;);
FileWriter fileWr = new FileWriter(file);
XMLOutputFactory xml = XMLOutputFactory.newFactory();
XMLStreamWriter xmlStrWr = xml.createXMLStreamWriter(fileWr);
xmlStrWr.writeStartDocument(&amp;quot;UTF-8&amp;quot;, &amp;quot;1.0&amp;quot;);
Marshaller marshaller = jaxbContext.createMarshaller();
marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);
marshaller.marshal(sourceDocument, xmlStrWr);
xmlStrWr.writeEndDocument();
fileWr.close();&lt;/p>
&lt;p>// Read Document
FileInputStream fileInpStr = new FileInputStream(file);
Unmarshaller unm = jaxbContext.createUnmarshaller();
Document result = (Document) unm.unmarshal(fileInpStr);&lt;/p>
&lt;p>// Test the parsedDocument here if you like.
...&lt;/p>
&lt;p>// Cleanup
file.delete();
[/sourcecode]&lt;/p>
&lt;p>The reason for this blog is of course the fact that I expected this &amp;quot;Simple Binding&amp;quot; to be the default, as 80% of the people will want to do exactly this. I've found a lot of people suffering from this problem, and I found the documentation to be not very helpful.&lt;/p>
&lt;p>I hope this blog post helps you get on with more important stuff.&lt;/p>
&lt;p>Have fun!
Rolf&lt;/p></description></item></channel></rss>